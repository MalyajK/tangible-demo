{"version":3,"sources":["auth/UserContext.js","components/sidebar/SidebarData.jsx","components/sidebar/SubMenu.jsx","auth/LogoutButton.js","apis/UsersApi.js","components/sidebar/Avatar.jsx","components/sidebar/Sidebar.jsx","components/common/StatusMeter.jsx","components/Projects/Columns.js","apis/ProjectsApi.js","components/common/GlobalFilter.js","components/Projects/Projects.jsx","components/common/ProgressMeter.jsx","components/Projects/ProjectSummary.js","apis/TasksApi.js","components/Projects/ProjectTasks.js","components/Projects/ProjectDetails.jsx","auth/LoginButton.js","components/images/originalOnTransparent.png","auth/LogoutPage.jsx","components/Users/UserProfile.jsx","apis/CalendarsApi.js","components/calendar/CreateEvent.jsx","components/calendar/generators.js","components/calendar/EventModal.jsx","components/calendar/Calendar.jsx","components/Tasks/columns.js","components/Tasks/TaskTable.jsx","components/common/MuiDatePicker.js","components/common/projectDropdown.js","components/common/assigneeDropdown.js","components/common/NewSlider.js","components/Tasks/TaskEditTab.jsx","components/Tasks/TaskComments.jsx","components/Tasks/TaskTabs.jsx","components/common/ConfirmationModal.js","components/Tasks/CreateTask.jsx","components/dashboard/ceo/AllGoalsData.js","components/dashboard/ceo/TooltipStyle.js","components/dashboard/ceo/AllGoalsChart.jsx","components/dashboard/ceo/DeptCompletion.js","components/dashboard/ceo/Colors.js","components/dashboard/ceo/DepCompChart.jsx","components/dashboard/ceo/RevenueData.js","components/dashboard/ceo/RevenueChart.jsx","components/dashboard/ceo/ExpenseData.js","components/dashboard/ceo/ExpenseChart.jsx","components/dashboard/ceo/ProfitChart.jsx","components/dashboard/ceo/DebtorsChart.jsx","components/dashboard/ceo/Ceo.jsx","components/dashboard/Main.jsx","components/images/logoTransparent.png","components/navbar/Navbar.jsx","components/team/ChartData.jsx","components/team/TaskCharts.jsx","components/team/TeamColumns.js","components/team/MyTeam.jsx","components/hr/EmployeeRequisition.jsx","components/hr/EmployeeExit.jsx","components/hr/EmployeeGrievance.jsx","components/hr/EmployeeOnboarding.jsx","components/hr/HrRouter.js","components/finance/FundRequestsColumns.jsx","apis/FinanceApi.js","components/finance/FundRequests.jsx","apis/DepartmentsApi.js","components/finance/ExpenseHeads.jsx","components/finance/RequestFunds.jsx","components/finance/EditFundsRequest.jsx","components/finance/SendPricingForm.jsx","components/finance/Ageing.jsx","components/finance/InvoicesColumns.js","components/finance/Invoices.jsx","components/finance/UpdateCollection.jsx","components/finance/Budgets.jsx","components/finance/FinanceRouter.js","apis/CustomersApi.js","components/sales/SummaryChart.js","components/sales/CustomerColumns.js","components/sales/Customers.jsx","apis/DivisionsApi.js","components/sales/TooltipStyle.js","components/sales/CreateLead.jsx","components/sales/CustomerDetails.jsx","components/sales/LeadSummary.jsx","components/sales/EditLead.jsx","components/sales/ExistingBusiness.jsx","components/common/Colors.js","components/sales/SalesTarget.jsx","components/sales/TargetsDivMonth.jsx","components/sales/TargetsStaffMonth.jsx","components/sales/TargetsRegionMonth.jsx","components/sales/TargetsMonth.jsx","components/sales/SalesRouter.js","components/notifications/Main.jsx","components/notifications/NotificationsRouter.js","apis/ChatsApi.js","components/chat/SingleChat.jsx","components/chat/NewMessage.jsx","components/chat/ChatWindow.jsx","App.js","index.js"],"names":["UserContext","createContext","SidebarData","title","path","icon","iconClosed","iconOpened","subNav","color","cName","SidebarLink","styled","Link","SidebarLabel","span","DropdownLink","SubMenu","item","useState","subnav","setSubnav","to","onClick","map","index","LogoutButton","logout","useAuth0","className","style","width","marginRight","background","returnTo","axios","create","baseURL","Avatar","user","userId","setUserId","loading","setLoading","generator","AvatarGenerator","useEffect","a","UsersApi","get","email","then","response","data","rows","getUserId","marginTop","textAlign","borderStyle","borderColor","borderWidth","borderRadius","paddingTop","paddingBottom","marginLeft","src","generateRandomAvatar","user_id","alt","height","marginBottom","fontSize","name","backgroundColor","SidebarNav","nav","SidebarWrap","div","Sidebar","sidebar","Provider","value","size","id","overflowY","StatusMeter","props","completion","endDate","today","Date","UTC","getFullYear","getMonth","getDate","subjectDate","status","Columns","Header","accessor","Cell","employee","row","original","project_id","format","end_date","parseInt","GlobalFilter","filter","setFilter","onChange","e","target","placeholder","Projects","projects","setProjects","ProjectsApi","projectsTable","getProjects","columns","useMemo","useTable","initialState","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","setPageSize","state","setGlobalFilter","prepareRow","globalFilter","pageIndex","length","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","type","min","max","Math","ceil","defaultValue","pageNumber","Number","disabled","ProgressMeter","text","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","ProjectSummary","project","setProject","startDate","dateRange","setDateRange","focus","setFocus","useParams","projectSummary","getProject","project_title","project_description","project_manager","assignee","startDateId","startDatePlaceholderText","moment","start_date","endDateId","endDatePlaceholderText","onDatesChange","date","focusedInput","onFocusChange","displayFormat","openDirection","required","noBorder","ProjectTasks","titles","setTitles","averages","setAverages","TasksApi","getTasksByProject","getTasks","wtdAvg","console","log","getAverages","weightedAverage","forEach","task","parseFloat","wtd_avg","task_id","task_title","full_name","ProjectDetails","LoginButton","loginWithRedirect","LogoutPage","display","justifyContent","tangibleLogo","UserProfile","userData","setUserData","getUserData","imageUrl","fontWeight","first_name","last_name","department_name","building","city_name","mobile_no","CreateEvent","updateIncoming","currentUser","useContext","setStartDate","setEndDate","eventType","setEventType","eventTitle","setEventTitle","users","setUsers","loadingUsers","setLoadingUsers","invitees","setInvitees","enabled","fullNames","getUsers","dropdown","label","selected","invitee","push","handleSubmit","preventDefault","alert","CalendarsApi","post","event_type","event_title","start_time","end_time","event_creator","is_live","res","Form","FormGroup","FormLabel","FormControl","as","maxLength","showTimeSelect","dateFormat","timeIntervals","options","labelledBy","hasSelectAll","Button","takeMonth","start","month","lastDayOfRange","range","weekGen","startOfWeek","startOfDay","week","Array","_","i","addDays","takeWeek","startOfMonth","endOfWeek","endOfMonth","EventModal","eventId","showModal","handleClose","incoming","event","setEvent","loadingEvent","setLoadingEvent","names","setNames","loadingNames","setLoadingNames","eventById","getEvent","getNames","handleDelete","event_id","patch","Paper","elevation","isAfter","each","cursor","Calendar","monthDate","setMonthDate","setEventId","events","setEvents","loadingEvents","setLoadingEvents","setIncoming","setShowModal","eventDeleted","setEventDeleted","chosenDate","filteredData","isSameMonth","parseJSON","checkExpired","fetchEvents","allEvents","getEvents","trigger","subDays","toUpperCase","day","textDecoration","COLUMNS","TasksTable","tasks","setTasks","allTasks","MuiDatePicker","setValue","utils","DateFnsUtils","autoOk","inputVariant","variant","InputAdornmentProps","position","ProjectDropdown","allProjects","setAllProjects","getAllProjects","AssigneeDropdown","assignees","setAssignees","getAssignees","Styles","NewSlider","TaskEditTab","taskDescription","setTaskDescription","setProjectTitle","taskTitle","setTaskTitle","projectId","setProjectId","setDepartmentName","assigneeId","setAssigneeId","setFullName","sliderValue","setSliderValue","task_description","getTask","useForm","register","control","onSubmit","error","minLength","ref","TaskCommentsTab","setTaskId","Embed","websiteId","TaskTabs","commentCounter","CommentCount","Tabs","defaultActiveKey","Tab","eventKey","TaskComments","ConfirmationModal","buttonText","modalText","form","show","setShow","Modal","onHide","closeButton","Title","Body","Footer","CreateTask","description","setDescription","setTitle","visibility","setVisibility","measureType","setMeasureType","setTarget","history","useHistory","created_by","is_public","measure_type","clear","checked","onColor","checkedIcon","uncheckedIcon","AllGoalsData","Target","Actual","TooltipStyle","border","boxShadow","AllGoalsChart","ResponsiveContainer","LineChart","CartesianGrid","stroke","strokeDasharray","XAxis","dataKey","tickLine","YAxis","unit","Tooltip","contentStyle","Legend","verticalAlign","iconType","wrapperStyle","paddingLeft","Line","DepCompData","COLORS","CustomizedLabel","x","y","dx","dy","textAnchor","fill","DepCompChart","ComposedChart","vertical","Bar","entry","RevenueData","RevenueChart","AreaChart","Area","ExpenseData","ExpenseChart","ProfitChart","setData","slice","getData","DebtorsChart","PieChart","Pie","innerRadius","Ceo","Main","NavbarMain","Navbar","collapseOnSelect","expand","bg","fixed","TangibleLogo","Brand","href","Toggle","aria-controls","Collapse","Nav","Item","NavDropdown","Divider","ChartData","TaskCharts","findIndex","BarChart","tick","TeamColumns","MyTeam","team","setTeam","teamMembers","getTeam","EmployeeRequisition","hireType","setHireType","department","setDepartment","designation","setDesignation","tenure","setTenure","joiningDate","setJoiningDate","salary","setSalary","setAssignee","remarks","setRemarks","focused","setFocused","padding","onDateChange","numberOfMonths","appendToBody","placeHolder","EmployeeExit","employeeId","setEmployeeId","exitType","setExitType","resignReason","setResignReason","terminationReason","setTerminationReason","requestedDate","setRequestedDate","proposedDate","setProposedDate","receivedDate","setReceivedDate","recommendation","setRecommendation","relFocused","setRelFocused","propFocused","setPropFocused","receivedFocused","setReceivedFocused","float","EmployeeGrievance","grievanceType","setGrievanceType","EmployeeOnboarding","HrRouter","useRouteMatch","exact","component","months","quarters","budgeted","request","frequency","starting","quarter","request_id","FundRequests","requests","setRequests","setApproved","setRejected","setPending","setFetchingRequests","FinanceApi","fundRequests","getRequests","ButtonGroup","alignItems","active","ExpenseHeads","RequestFunds","taskId","departments","setDepartments","departmentName","expenseHead","setExpenseHead","setBudgeted","assignTo","setAssignTo","setFrequency","amount","setAmount","setStarting","setDate","fetchingUser","setFetchingUser","fetchingProjects","setFetchingProjects","fetchingTasks","setFetchingTasks","fetchingDepartments","setFetchingDepartments","projectsByUser","tasksByUser","DepartmentsApi","allDepartments","getDepartments","initiator","expense_head","assign_to","department_id","required_by","EditFundsRequest","setRequest","comment","setComment","fetchingRequest","setFetchingRequest","short","long","tiny","fundRequestById","getRequest","handleApprove","comments","nickname","content","handleReject","handleComment","initiator_name","created_at","spend","margin","right","obj","SendPricingForm","Ageing","dueDate","dateDiff","invoice","invoice_number","due_date","Invoices","invoices","setInvoices","getInvoices","UpdateCollection","setInvoice","newReceived","setNewReceived","invoiceById","getInvoice","amount_received","invoice_date","customer_name","division_name","invoice_amount","overdueDays","ageing","widht","Budgets","FinanceRouter","SummaryChart","customerId","actual","collected","chartData","CustomerColumns","customer","customer_id","Customers","customers","setCustomers","CustomersApi","customerList","getCustomers","CreateLead","currentMonth","setCustomerId","region","setRegion","divisions","setDivisions","divisionId","setDivisionId","source","setSource","setStatus","customerType","setCustomerType","prospect","setProspect","likelihood","setLikelihood","jan","setJan","feb","setFeb","mar","setMar","apr","setApr","may","setMay","jun","setJun","jul","setJul","aug","setAug","sep","setSep","oct","setOct","nov","setNov","dec","setDec","salesMarketing","DivisionsApi","getDivisions","customer_type","division","pipeline","January","February","March","April","May","June","July","August","September","October","November","December","for","division_id","htmlFor","reduce","domain","CustomerDetails","LeadSummary","currency","leads","setLeads","prospectLeads","lead","discussionLeads","submittedLeads","wonLeads","abortedLeads","leadDate","leadSummary","getLeads","Object","values","b","created_on","lead_id","EditLead","editLead","getLead","put","ExistingBusiness","setCustomer","customerData","getCustomer","keys","SalesTarget","divTargets","setDivTargets","monthTargets","setMonthTargets","staffTargets","setStaffTargets","regionTargets","setRegionTargets","targetsByDivision","getDivTargets","targetsByMonth","getMonthTargets","targetsByStaff","getStaffTargets","targetsByRegion","getRegionTargets","divData","regionData","monthData","key","staffData","staff","nameKey","isAnimationActive","top","opacity","layout","barSize","scale","TargetsMonth","allTargets","setAllTargets","divMonthTargets","setDivMonthTargets","gettingDivs","setGettingDivs","actuals","setActuals","gettingActuals","setGettingActuals","allActuals","setAllActuals","gettingAll","setGettingAll","gettingAllActuals","setGettingAllActuals","allTargetsMonth","getAllTargets","targetsDivMonth","allActualsMonth","getAllActuals","actualsDivMonth","getActuals","plotDivMonth","divName","accumulate","array","indexOf","plotCumulative","rowsWithoutDivision","monthRow","modifiedAllActuals","plotAll","plotAllCumulative","strokeWidth","TargetsStaffMonth","staffMonthTargets","setStaffMonthTargets","gettingStaff","setGettingStaff","setStaff","targetsStaffMonth","sales","getStaff","actualsStaffMonth","plotStaffMonth","salesPerson","person","sales_person","rowsWithoutStaff","eachStaff","TargetsRegionMonth","regionMonthTargets","setRegionMonthTargets","gettingRegions","setGettingRegions","regions","setRegions","targetsRegionMonth","salesRegions","getRegions","actualsRegionMonth","plotRegionMonth","country","rowsWithoutRegion","region_name","divActuals","setDivActuals","staffActuals","setStaffActuals","regionActuals","setRegionActuals","gettingDivActuals","setGettingDivActuals","gettingStaffActuals","setGettingStaffActuals","gettingRegionActuals","setGettingRegionActuals","toLowerCase","selectedMonth","setSelectedMonth","getDivActuals","getStaffActuals","getRegionActuals","allFetched","monthName","filtered","thisRow","SalesRouter","TargetsDivMonth","isExpired","NotificationsRouter","SingleChat","chatId","showChat","updateChat","alertState","messages","setMessages","loadingMessages","setLoadingMessages","chat","setChat","loadingChat","setLoadingChat","message","setMessage","ChatsApi","selectedChat","getChat","messageWindowFeed","getMessages","submitMessage","sender","chat_id","currentMessage","is_private","creator","receiver","data-tooltip","participant","timestamp","message_id","onKeyPress","alignContent","NewMessage","visible","usersArray","setUsersArray","loadingUser","setLoadingUser","chats","setChats","loadingChats","setLoadingChats","fieldRef","useRef","useReducer","action","dispatchSelected","displayUsers","inputValue","setState","handleUserSelect","currentTarget","innerText","current","handleAddUsers","cancelNewChat","allChatsByUser","getChats","participants","identicalChat","JSON","stringify","sort","Set","newChat","autoComplete","autoCapitalize","autoCorrect","includes","onKeyDown","keyCode","listStyleType","ChatWindow","params","newIncoming","setNewIncoming","modifiedChat","setModifiedChat","setExpand","toggle","setAlertState","setChatId","setShowChat","setNewChat","handleAdd","chatWindowFeed","renderChatId","message_time","App","isAuthenticated","Fragment","TaskTable","ReactDOM","clientId","redirectUri","window","location","origin","document","getElementById"],"mappings":"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","file":"static/js/main.435edbd4.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nexport const UserContext = createContext(null);","import React from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as IoIcons from 'react-icons/io';\nimport * as RiIcons from 'react-icons/ri';\nimport * as CgIcons from 'react-icons/cg';\nimport * as FcIcons from 'react-icons/fc';\n\nexport const SidebarData = [  \n  {\n    title: 'Dashboard',\n    path: '/dashboard',\n    icon: <FcIcons.FcComboChart />,\n    iconClosed: <RiIcons.RiAddFill />,\n    iconOpened: <RiIcons.RiSubtractLine />,\n\n    subNav: [\n      {\n        title: 'My Dashboard',\n        path: '/dashboard/mydashboard',\n        icon: <IoIcons.IoIosPerson />\n      },\n      {\n        title: 'Team Dashboard',\n        path: '/dashboard/teamdashboard',\n        icon: <IoIcons.IoIosPeople />\n      }\n    ]\n  },\n  {\n    title: 'Goals',\n    path: '/goals',\n    icon: <FcIcons.FcApproval />,\n    iconClosed: <RiIcons.RiAddFill color=\"\"/>,\n    iconOpened: <RiIcons.RiSubtractLine color=\"\"/>,\n\n    subNav: [\n      {\n        title: 'This Week',\n        path: '/reports/thisweek',\n        icon: <FaIcons.FaCalendarWeek />,\n        cName: 'sub-nav'\n      },\n      {\n        title: 'This Month',\n        path: '/reports/thismonth',\n        icon: <CgIcons.CgViewMonth />,\n        cName: 'sub-nav'\n      },\n      {\n        title: 'This Quarter',\n        path: '/reports/thisquarter',\n        icon: <IoIcons.IoIosPaper />\n      }\n    ]\n  },\n  {\n    title: 'Projects',\n    path: '/projects',\n    icon: <FcIcons.FcTimeline />\n  },\n  {\n    title: 'Tasks',\n    path: '/tasks',\n    icon: <FcIcons.FcTodoList />,\n    iconClosed: <RiIcons.RiAddFill />,\n    iconOpened: <RiIcons.RiSubtractLine />,\n    subNav: [\n      {\n        title: 'Add New',\n        path: '/tasks/create',\n        icon: <RiIcons.RiAddFill />\n      }\n    ]\n  },\n  {\n    title: 'Team',\n    path: '/team',\n    icon: <FcIcons.FcFlowChart />\n  },\n  {\n    title: 'Scheduler',\n    path: '/scheduler',\n    icon: <FcIcons.FcCalendar />,\n    iconClosed: <RiIcons.RiAddFill />,\n    iconOpened: <RiIcons.RiSubtractLine />,\n  },\n  {\n    title: 'Notifications',\n    path: '/notifications',\n    icon: <IoIcons.IoMdNotifications color=\"brown\"/>\n  },\n];","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst SidebarLink = styled(Link)`\n  display: flex;\n  color: #264653;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  list-style: none;\n  height: 50px;\n  text-decoration: none;\n  font-size: 16px;\n  borderRight: 1px;\n  &:hover {\n    background: #212529;\n    border-left: 6px solid #E76F51;\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nconst SidebarLabel = styled.span`\n  margin-left: 10px;\n`;\n\nconst DropdownLink = styled(Link)`\n  height: 40px;\n  padding-left: 2rem;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: #264653;\n  font-size: 14px;\n  &:hover {\n    background: #F9F0D9;\n    color: black;\n    cursor: pointer;\n    border-left: 6px solid #E76F51;\n  }\n`;\n\nconst SubMenu = ({ item }) => {\n  const [subnav, setSubnav] = useState(false);\n\n  const showSubnav = () => setSubnav(!subnav);\n\n  return (\n    <>\n      <SidebarLink to={item.path} onClick={item.subNav && showSubnav}>\n        <div>\n          {item.icon}\n          <SidebarLabel>{item.title}</SidebarLabel>\n        </div>\n        <div>\n          {item.subNav && subnav\n            ? item.iconOpened\n            : item.subNav\n            ? item.iconClosed\n            : null}\n        </div>\n      </SidebarLink>\n      {subnav &&\n        item.subNav.map((item, index) => {\n          return (\n            <DropdownLink to={item.path} key={index}>\n              {item.icon}\n              <SidebarLabel>{item.title}</SidebarLabel>\n            </DropdownLink>\n          );\n        })}\n    </>\n  );\n};\n\nexport default SubMenu;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n\n  return (\n    <button\n      className=\"btn btn-sm\"\n      style={{width:\"60px\", marginRight:\"15px\", background:\"#F4A261\"}}\n      onClick={() => logout({ returnTo: 'http://localhost:3000/logout' })}\n    >\n      Logout\n    </button>\n  );\n};\n\nexport default LogoutButton;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"http://localhost:5000/api/users\"\n});\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport LogoutButton from \"../../auth/LogoutButton\";\nimport UsersApi from \"../../apis/UsersApi\";\n\nexport default function Avatar() {\n  const { user } = useAuth0();\n  const [userId, setUserId] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const generator = new AvatarGenerator();\n\n  useEffect(() => {\n    async function getUserId() {\n      await UsersApi.get(`/userId/${user.email}`).then((response) => {\n        setLoading(false);\n        setUserId(response.data.userId.rows[0]);\n      });\n    }\n    getUserId();\n  }, [user.email]);\n  \n  return (\n    <div\n      style={{\n        marginTop: \"35px\",\n        color: \"#264653\",\n        textAlign: \"center\",\n        borderStyle: \"solid\",\n        borderColor: \"grey\",\n        borderWidth: \"1px\",\n        borderRadius: \"10px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"10px\",\n        marginLeft: \"20px\",\n        marginRight: \"20px\",\n      }}\n    >\n      <img\n        src={generator.generateRandomAvatar(userId.user_id)}\n        alt=\"profile pic\"\n        style={{ width: \"60px\", height: \"60px\", marginBottom: \"10px\" }}\n      />\n      <p style={{ fontSize: \"0.8rem\" }}>Signed in as:</p>\n      <p style={{ marginTop: \"-10px\", marginBottom: \"10px\" }}>\n        {user.name}\n      </p>\n      <LogoutButton />\n      {!loading ? (\n        <Link to={`/users/${userId.user_id}`}>\n          <button className=\"btn btn-sm\" style={{ width: \"60px\", backgroundColor:\"#2A9D8F\", color:\"#fff\" }}>\n            Profile\n          </button>\n        </Link>\n      ) : (\n        <Link to={`/users`}>\n          <button className=\"btn btn-sm\" style={{ width: \"60px\", backgroundColor:\"2A9D8F\", color:\"#fff\" }}>\n            Profile\n          </button>\n        </Link>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { SidebarData } from \"./SidebarData\";\nimport SubMenu from \"./SubMenu\";\nimport { IconContext } from \"react-icons/lib\";\nimport Avatar from \"./Avatar\";\nimport \"./sidebar.css\";\n\nconst SidebarNav = styled.nav`\n  display: flex;\n  padding-right: 7px;\n  padding-top: 60px;\n  background: #ededed;\n  width: 230px;\n  height: 100vh;\n  justify-content: left;\n  position: fixed;\n  top: 0;\n  z-index: 1;\n`;\n\nconst SidebarWrap = styled.div`\n  width: 100%;\n`;\n\nconst Sidebar = () => {\n  const [sidebar, ] = useState(false);\n\n  return (\n    <>\n      <IconContext.Provider value={{size: \"1.7rem\"}}>\n        <SidebarNav sidebar={sidebar}>\n          <SidebarWrap>\n            <div id=\"scroll\" style={{ height: \"450px\", overflowY: \"scroll\"}}>\n              {SidebarData.map((item, index) => {\n                return <SubMenu item={item} key={index} />;\n              })}\n            </div>\n            <Avatar />\n          </SidebarWrap>\n        </SidebarNav>\n      </IconContext.Provider>\n    </>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState } from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as BiIcons from \"react-icons/bi\";\nimport * as BsIcons from \"react-icons/bs\";\n\nconst StatusMeter = (props) => {\n  const { completion, endDate, size } = props;\n  const today = Date.UTC(\n    new Date().getFullYear(),\n    new Date().getMonth(),\n    new Date().getDate()\n  );\n  const subjectDate = Date.UTC(\n    new Date(endDate).getFullYear(),\n    new Date(endDate).getMonth(),\n    new Date(endDate).getDate()\n  );\n\n  const [status, ] = useState(\n    completion >= 100\n      ? \"complete\" // set to complete regardless of dates\n      : today > subjectDate\n      ? \"overdue\"\n      : today === subjectDate\n      ? \"due_today\"\n      : (subjectDate - today)/(1000*60*60*24) <= 2 //since difference is in milliseconds\n      ? \"near_due\"\n      : \"not_due\"\n  );\n\n  return status === \"complete\" ? (\n    <FaIcons.FaThumbsUp size={size} color=\"#35ad2a\" />\n  ) : status === \"near_due\" ? (\n    <BiIcons.BiRun size={size} color=\"red\" />\n  ) : status === \"not_due\" ? (\n    <FaIcons.FaArrowsAltH size={size} color=\"#2a58ad\" />\n  ) : status === \"due_today\" ? (\n    <BsIcons.BsAlarm size={size} />\n  ) : (\n    <FaIcons.FaFlag size={size} color=\"red\" />\n  );\n};\nexport default StatusMeter;\n","import { format } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport StatusMeter from \"../common/StatusMeter\";\nimport {AvatarGenerator} from 'random-avatar-generator';\n\nconst generator = new AvatarGenerator();\n\nexport const Columns = [\n  {\n    Header: \"\",\n    accessor: \"assignee\",\n    Cell: (employee) => (\n      <div>\n        <img\n          src={generator.generateRandomAvatar(employee.value)}\n          alt=\"profile pic\"\n          id=\"project-avatar\"\n        />\n      </div>\n    ),\n  },\n  {\n    Header: \"Project Manager\",\n    accessor: \"project_manager\",\n  },\n  {\n    Header: \"Project Title\",\n    accessor: \"project_title\",\n    Cell: (title) => (\n      <Link to={`projects/${title.row.original.project_id}`}><div id=\"project-title\">{title.value}</div></Link>\n    ),\n  },\n  {\n    Header: \"Description\",\n    accessor: \"project_description\",\n  },\n  {\n    Header: \"Start Date\",\n    accessor: \"start_date\",\n    Cell: ({ value }) => {\n      return format(new Date(value), \"dd/MM/yyyy\");\n    },\n  },\n  {\n    Header: \"End Date\",\n    accessor: \"end_date\",\n    Cell: ({ value }) => {\n      return format(new Date(value), \"dd/MM/yyyy\");\n    },\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    Cell: (status) => (\n      <div style={{textAlign:\"center\"}}>\n        <StatusMeter endDate={status.row.original.end_date} \n          completion={parseInt(status.row.original.completion)}\n        />\n      </div>\n    ),\n  },\n];\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"http://localhost:5000/api/projects\"\n});","import React from \"react\";\n\nexport const GlobalFilter = ({ filter, setFilter }) => {\n  return (\n    <input\n      value={filter || \"\"}\n      onChange={(e) => setFilter(e.target.value)}\n      className=\"form-control\"\n      placeholder=\"Search....\"\n    />\n  );\n};\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as BiIcons from \"react-icons/bi\";\nimport * as BsIcons from \"react-icons/bs\";\nimport {Columns} from './Columns';\nimport ProjectsApi from '../../apis/ProjectsApi';\nimport {GlobalFilter} from '../common/GlobalFilter';\nimport './projects.css';\n\nconst Projects = () => {\n  // set projects\n  const [projects, setProjects] = useState([]);\n\n  // get projects\n  useEffect(() => {\n    async function getProjects() {\n      const response = await ProjectsApi.get(\"/projectsTable\");\n      setProjects(response.data.projectsTable.rows);\n    }\n    getProjects();\n  }, []);\n\n  const columns = useMemo(() => Columns, []);\n  const data = useMemo(() => projects, [projects]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    state,\n    setGlobalFilter,\n    prepareRow,\n  } = useTable(\n    { columns, data, initialState: { pageSize: 5 } },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  return (\n    <div id=\"projects-main\">\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n      <p id=\"projects-counter\">Showing {pageSize} of {projects.length} projects ...</p>\n      <table {...getTableProps()} className=\"table table-hover mt-4\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted ? (column.isSortedDesc ? \" ↓\" : \" ↑\") : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()} id=\"project-row\">{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div className=\"pagination\">\n        <div>\n          Page {pageIndex + 1} of {pageOptions.length}\n        </div>\n        <span style={{ marginLeft: \"220px\" }}>\n          Go to page:{\" \"}\n          <input\n            type=\"number\"\n            min={1}\n            max={Math.ceil(projects.length / pageSize)}\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const pageNumber = e.target.value\n                ? Number(e.target.value) - 1\n                : 0;\n              gotoPage(pageNumber);\n            }}\n            style={{\n              width: \"50px\",\n              marginRight: \"2px\",\n              marginLeft: \"2px\",\n              textAlign: \"center\",\n            }}\n          />\n        </span>\n        <button\n          type=\"button\"\n          className=\"btn btn-sm btn-info\"\n          onClick={() => gotoPage(0)}\n          disabled={!canPreviousPage}\n          style={{\n            height: \"25px\",\n            width: \"30px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          {\"<<\"}\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n          style={{\n            height: \"25px\",\n            width: \"50px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          Prev\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => nextPage()}\n          disabled={!canNextPage}\n          style={{\n            height: \"25px\",\n            width: \"50px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          Next\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n          style={{\n            height: \"25px\",\n            width: \"30px\",\n            marginRight: \"220px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          {\">>\"}\n        </button>\n        <select\n          value={pageSize}\n          onChange={(e) => setPageSize(Number(e.target.value))}\n          style={{ fontSize: \"0.9rem\" }}\n        >\n          {[4, 5, 10].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"row status-legend\">\n        <FaIcons.FaThumbsUp size={20} color=\"#35ad2a\" />\n        <span id=\"status-legend\">Complete</span>\n        <BiIcons.BiRun size={35} color=\"red\" />\n        <span id=\"status-legend\">Almost due</span>\n        <FaIcons.FaArrowsAltH size={25} color=\"#2a58ad\" />\n        <span id=\"status-legend\">Not due</span>\n        <BsIcons.BsAlarm size={25} />\n        <span id=\"status-legend\">Due Today</span>\n        <FaIcons.FaFlag size={20} color=\"red\" />\n        <span id=\"status-legend\">Overdue</span>\n      </div>\n    </div>\n  )\n};\n\nexport default Projects\n","import React from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst ProgressMeter = (props) => {\n  const {value} = props\n  return (\n    <CircularProgressbar\n      value={parseInt(value)}\n      text={`${value}%`}\n      styles={buildStyles({\n        // Rotation of path and trail, in number of turns (0-1)\n        rotation: 0.0,\n        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n        strokeLinecap: 'butt',\n    \n        // Text size\n        textSize: '30px',\n    \n        // How long animation takes to go from one percentage to another, in seconds\n        pathTransitionDuration: 0.5,\n    \n        // Can specify path transition in more detail, or remove it entirely\n        // pathTransition: 'none',\n    \n        // Colors\n        pathColor: '#21752c',\n        textColor: 'black',\n        trailColor: '#f58122',\n        backgroundColor: '#3e98c7',\n      })}\n    />\n  )\n}\n\nexport default ProgressMeter;\n","import React, { useState, useEffect } from \"react\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport moment from \"moment\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport {BsPencil} from 'react-icons/bs';\nimport { useParams } from \"react-router-dom\";\nimport ProgressMeter from \"../common/ProgressMeter\";\nimport StatusMeter from \"../common/StatusMeter\";\nimport ProjectsApi from \"../../apis/ProjectsApi\";\n\nconst ProjectSummary = () => {\n  const generator = new AvatarGenerator();\n\n  const [project, setProject] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    startDate: null,\n    endDate: null,\n  });\n  const [focus, setFocus] = useState();\n  const { startDate, endDate } = dateRange;\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getProject() {\n      await ProjectsApi.get(`/projectSummary/${id}`).then((response) => {\n      setProject(response.data.projectSummary.rows[0])\n      })\n    }\n    getProject();\n  }, [id]);\n\n  // get task count\n\n  return (\n    <div className=\"column\" id=\"project-details-left\">\n      <h3 id=\"project-detail-h3\">Summary</h3>\n      <hr id=\"project-details-hr-left\" />\n      <span id=\"row-heading-small\">\n        <strong>Project</strong>\n      </span>\n      <br />\n      <span>{project.project_title}</span>\n      <BsPencil id=\"pencil\"/>\n      <br />\n      <hr id=\"project-details-hr-left\" />\n      <span id=\"row-heading-small\">\n        <strong>Description</strong>\n      </span>\n      <br />\n      <span>{project.project_description}</span>\n      <BsPencil id=\"pencil\"/>\n      <br />\n      <hr id=\"project-details-hr-left\" />\n      <span id=\"row-heading-small\">Project Manager</span>\n      <br />\n      <span>{project.project_manager}</span>\n      <BsPencil id=\"pencil\"/>\n      <img\n        src={generator.generateRandomAvatar(project.assignee)}\n        alt=\"PM\"\n        id=\"project-details-avatar\"\n      />\n      <br />\n      <hr id=\"project-details-hr-left\" style={{ marginTop: \"30px\" }} />\n      <span id=\"row-heading-small\">\n        <strong>Dates</strong>\n      </span>\n      <DateRangePicker\n        startDate={startDate}\n        startDateId=\"start_date\"\n        startDatePlaceholderText={moment(project.start_date).format(\"DD/MM/YYYY\")}\n        endDate={endDate}\n        endDateId=\"end_date\"\n        endDatePlaceholderText={moment(project.end_date).format(\"DD/MM/YYYY\")}\n        onDatesChange={(date) => setDateRange(date)}\n        focusedInput={focus}\n        onFocusChange={(focus) => setFocus(focus)}\n        displayFormat={() => \"DD/MM/YYYY\"}\n        openDirection=\"up\"\n        required\n        noBorder={true}\n      />\n      <br />\n      <hr id=\"project-details-hr-left\" />\n      <span id=\"row-heading-small\">Task Count</span>\n      <br />\n      <span>Finished / Total</span>\n      <span id=\"project-task-count\">5 / 10</span>\n      <br />\n      <hr id=\"project-details-hr-left\" style={{ marginTop: \"10px\" }} />\n      <span id=\"row-heading-small\">Completion</span>\n      <br />\n      <div id=\"project-details-progress\">\n        <ProgressMeter value={67} />\n      </div>\n      <br />\n      <hr id=\"project-details-hr-left\" style={{ marginTop: \"20px\" }} />\n      <span id=\"row-heading-small\">Status</span>\n      <br />\n      <span>(Nearing Due Date)</span>\n      <div id=\"project-details-progress\">\n        <StatusMeter completion={45} endDate={project.end_date} size={40} />\n      </div>\n      <br />\n      <hr id=\"project-details-hr-left\" style={{ marginTop: \"20px\" }} />\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"http://localhost:5000/api/tasks\"\n});\n\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { FaArrowDown, FaArrowUp } from \"react-icons/fa\";\nimport TasksApi from \"../../apis/TasksApi\";\n\nconst ProjectTasks = () => {\n  const [, setLoading] = useState(true);\n  const [titles, setTitles] = useState([]);\n  const [averages, setAverages] = useState([]);\n  const { id } = useParams();\n\n  // get tasks by project id\n  useEffect(() => {\n    async function getTasks() {\n      await TasksApi.get(`/getTasksByProject/${id}`).then(\n        (response) => {\n          setLoading(false);\n          setTitles(response.data.getTasksByProject.rows);\n        }\n      );\n    }\n    getTasks();\n  }, [id]);\n\n  // get individual completion weight of each task\n  useEffect(() => {\n    async function getAverages() {\n      await TasksApi.get(`/wtdAvg/${id}`).then((response) => {\n        setAverages(response.data.wtdAvg.rows);\n        console.log(response);\n      });\n    }\n    getAverages();\n  }, [id]);\n\n  let weightedAverage = 0;\n  averages.forEach((task) => {\n    weightedAverage += parseFloat(task.wtd_avg);\n  });\n\n  return (\n    <div className=\"column\" id=\"project-details-right\">\n      <h3 id=\"project-detail-h3\">Constituent Tasks</h3>\n      <table className=\"table table-hover\" id=\"project-task-table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Assignee</th>\n            <th>Direction</th>\n            <th>Contribution</th>\n            <th>Placeholder</th>\n          </tr>\n        </thead>\n        <tbody>\n          {titles.map((title) => (\n            <tr>\n              <Link to={\"/tasks/\" + title.task_id}>\n                <td id=\"constituent-task\" key={title.task_id}>\n                  {title.task_title}\n                </td>\n              </Link>\n              <td key={title.user_id}>{title.full_name}</td>\n              {title.completion < weightedAverage ? (\n                <td id=\"task-arrow\">\n                  <FaArrowDown color=\"red\" size={20} />\n                </td>\n              ) : (\n                <td id=\"task-arrow\">\n                  <FaArrowUp color=\"green\" size={20}/>\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ProjectTasks;\n","import React from 'react';\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport ProjectSummary from './ProjectSummary';\nimport ProjectTasks from './ProjectTasks';\n\nconst ProjectDetails = () => {\n  return (\n    <div className=\"row\" id=\"project-details\">\n      <ProjectSummary />\n      <ProjectTasks />\n    </div>\n  )\n}\n\nexport default ProjectDetails\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <button\n      className=\"btn btn-lg btn-info\"\n      onClick={() => loginWithRedirect()}\n      style={{width:\"310px\", borderRadius:\"15px\"}}\n    >\n      Login\n    </button>\n  );\n};\n\nexport default LoginButton;\n","export default __webpack_public_path__ + \"static/media/originalOnTransparent.9ec286d5.png\";","import React from \"react\";\nimport LoginButton from \"./LoginButton\";\nimport tangibleLogo from \"../components/images/originalOnTransparent.png\";\n// import background from \"../components/images/loginImage.jpg\";\n\nconst LogoutPage = () => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        // backgroundImage: `url(${background})`,\n        // backgroundRepeat: \"no-repeat\",\n        // backgroundPosition: \"center\",\n        // backgroundAttachment: \"fixed\",\n        // backgroundSize: \"cover\",\n        // height: \"100vh\",\n      }}\n    >\n      <form\n        style={{\n          marginTop: \"150px\",\n          paddingTop: \"35px\",\n          // borderStyle: \"solid\",\n          // borderColor: \"#fafafa\",\n          // borderRadius: \"15px\",\n          width: \"400px\",\n          height: \"400px\",\n        }}\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <img\n            src={tangibleLogo}\n            alt=\"Tangible\"\n            style={{ width: \"310px\", height: \"240px\", marginBottom: \"30px\" }}\n          />\n          <div>\n          <LoginButton />\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LogoutPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n// import { useAuth0 } from \"@auth0/auth0-react\";\nimport UsersApi from \"../../apis/UsersApi\";\n\nexport default function UserProfile() {\n  const { id } = useParams();\n  // const { user } = useAuth0();\n  const [userData, setUserData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function getUserData() {\n      await UsersApi.get(`/userData/${id}`).then(\n        (response) => {\n          setLoading(false);\n          setUserData(response.data.userData.rows[0]);\n        }\n      );\n    } \n    getUserData();\n  }, [id]);\n\n  const imageUrl = \"/images/\" + id + \".png\"\n  const defaultImageUrl = \"/images/default.png\"\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        paddingTop: \"80px\",\n      }}\n    >\n      <img\n        style={{ width: \"80px\", height: \"80px\", marginBottom: \"15px\" }}\n        src={!loading ? (imageUrl) : (defaultImageUrl)}\n        alt=\"profile pic\"\n      />\n      {!loading ? (\n        <p style={{ fontSize: \"1.2rem\", fontWeight: \"bold\" }}>\n          {userData.first_name} {userData.last_name}\n        </p>\n      ) : <p>Fetching data ....</p>}\n      \n      <table className=\"table\" style={{ width: \"400px\", marginLeft: \"520px\" }}>\n        <tr>\n          <td style={{ fontWeight: \"bold\", textAlign: \"left\" }}>Department</td>\n          <td>|</td>\n          {!loading ? (\n            <td>{userData.department_name}</td>\n          ) : (\n            <td>Fetching data ....</td>\n          )}\n        </tr>\n        <tr>\n          <td style={{ fontWeight: \"bold\", textAlign: \"left\" }}>Location</td>\n          <td>|</td>\n          {!loading ? (\n            <td>\n            {userData.building} - {userData.city_name}\n          </td>\n          ) : (<td>Fetching data ....</td>)}\n        </tr>\n        <tr>\n          <td style={{ fontWeight: \"bold\", textAlign: \"left\" }}>Email</td>\n          <td>|</td>\n          {!loading ? (\n            <td>{userData.email}</td>\n          ) : (<td>Fetching data ....</td>)}\n        </tr>\n        <tr>\n          <td style={{ fontWeight: \"bold\", textAlign: \"left\" }}>Mobile</td>\n          <td>|</td>\n          {!loading ? (\n            <td>{userData.mobile_no}</td>\n          ) : (<td>Fetching data ....</td>)}\n        </tr>\n        <tr>\n          <td style={{ fontWeight: \"bold\", textAlign: \"left\" }}>Manager</td>\n          <td>|</td>\n          <td>Malyaj Kaloni</td>\n        </tr>\n      </table>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"http://localhost:5000/api/calendar\"\n});","import React, { useState, useContext, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport MultiSelect from \"react-multi-select-component\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport DatePicker from \"react-datepicker\";\nimport { UserContext } from \"../../auth/UserContext\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport CalendarsApi from \"../../apis/CalendarsApi\";\nimport UsersApi from \"../../apis/UsersApi\";\nimport \"./calendar.css\";\n\nconst CreateEvent = (props) => {\n  \n  const {updateIncoming} = props;\n  const currentUser = useContext(UserContext);\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [eventType, setEventType] = useState(\"\");\n  const [eventTitle, setEventTitle] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [loadingUsers, setLoadingUsers] = useState(true);\n  const [invitees, setInvitees] = useState([]);\n\n  const enabled = startDate && endDate && eventType && eventTitle && invitees.length;\n\n  // get users\n  useEffect(() => {\n    async function getUsers() {\n      await UsersApi.get(\"/fullNames\").then((response) => {\n        setUsers(response.data.fullNames.rows);\n        setLoadingUsers(false);\n      });\n    }\n    getUsers();\n  }, []);\n\n  const dropdown = users.map((user) => {\n    return {\n      label: user.full_name,\n      value: user.user_id,\n    };\n  });\n\n  const selected = [currentUser]\n  invitees.map((invitee) => {\n    return selected.push(invitee.value)\n  })\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (endDate < startDate) alert(\"End time must be greater than start time\");\n    else\n      try {\n        await CalendarsApi.post(\"/\", {\n          event_type: eventType,\n          event_title: eventTitle,\n          start_time: startDate,\n          end_time: endDate,\n          event_creator: currentUser,\n          invitees: selected,\n          is_live: true,\n        }).then((res) => {\n          if (res.status === 200) {\n            alert(\"Event added to calendar!\");\n            updateIncoming(true);\n            setEventType(\"\");\n            setEventTitle(\"\");\n            setStartDate(null);\n            setEndDate(null);\n            setInvitees([]);\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n  };\n\n  if (!loadingUsers) {\n    return (\n      <div id=\"header-container\">\n        <Form className=\"row\">\n          <FormGroup className=\"mr-3\">\n            <FormLabel>Event Type</FormLabel>\n            <FormControl\n              as=\"select\"\n              required\n              value={eventType}\n              onChange={(e) => setEventType(e.target.value)}\n            >\n              <option value=\"\"></option>\n              <option value=\"Internal Meeting\">Internal Meeting</option>\n              <option value=\"Customer Meeting\">Customer Meeting</option>\n            </FormControl>\n          </FormGroup>\n          <FormGroup>\n            <FormLabel>Event Title</FormLabel>\n            <FormControl\n              type=\"text\"\n              value={eventTitle}\n              onChange={(e) => setEventTitle(e.target.value)}\n              style={{ width: \"250px\" }}\n              placeholder=\"max 50 characters\"\n              maxLength={50}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <FormLabel>Start</FormLabel>\n            <br />\n            <DatePicker\n              showTimeSelect\n              selected={startDate}\n              dateFormat=\"h:mm aa / do MMM\"\n              timeIntervals={15}\n              value={startDate}\n              onChange={(date) => setStartDate(date)}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <FormLabel>End</FormLabel>\n            <br />\n            <DatePicker\n              showTimeSelect\n              selected={endDate}\n              dateFormat=\"h:mm aa / do MMM\"\n              timeIntervals={15}\n              value={endDate}\n              onChange={(date) => setEndDate(date)}\n              required\n            />\n          </FormGroup>\n          <FormGroup className=\"ml-3 mr-3\">\n            <FormLabel>Participants</FormLabel>\n            <MultiSelect\n              options={dropdown}\n              value={invitees}\n              onChange={setInvitees}\n              labelledBy=\"Select\"\n              hasSelectAll={false}\n              className=\"invitee-dropdown\"\n            />\n          </FormGroup>\n          <div id=\"create-event-button\">\n            <Button type=\"button\" onClick={handleSubmit} disabled={!enabled}>\n              CREATE\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  } else return null;\n};\n\nexport default CreateEvent;\n","import {\n  startOfMonth,\n  startOfWeek,\n  endOfMonth,\n  endOfWeek,\n  startOfDay,\n  addDays,\n} from \"date-fns\";\n\nconst today = new Date();\n\nexport function takeWeek(start = today) {\n  let date = startOfWeek(startOfDay(start));\n  return function () {\n    const week = [...Array(7)].map((_, i) => addDays(date, i));\n    date = addDays(week[6], 1);\n    return week\n  }\n}\n\nexport function takeMonth(start) {\n  let month = [];\n  let date = start;\n  function lastDayOfRange(range) {\n    return range[range.length - 1][6]\n  }\n\n  return function () {\n    const weekGen = takeWeek(startOfMonth(date));\n    const endDate = startOfDay(endOfWeek(endOfMonth(date)));\n    month.push(weekGen());\n\n    while (lastDayOfRange(month) < endDate) {\n      month.push(weekGen())\n    }\n    const range = month;\n    month = [];\n    date = addDays(lastDayOfRange(range), 1)\n    return range;\n  }\n}","import React, { useState, useEffect } from \"react\";\nimport { format, isAfter } from \"date-fns\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { MdArrowForward } from \"react-icons/md\";\nimport { BsPeopleFill } from \"react-icons/bs\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport { RiDeleteBin6Fill, RiCloseFill } from \"react-icons/ri\";\nimport CalendarsApi from \"../../apis/CalendarsApi\";\nimport UsersApi from \"../../apis/UsersApi\";\nimport \"./modal.css\";\n\nconst EventModal = (props) => {\n  const { eventId, showModal, handleClose, incoming } = props;\n  const generator = new AvatarGenerator();\n\n  const [event, setEvent] = useState([]);\n  const [loadingEvent, setLoadingEvent] = useState(true);\n\n  const [names, setNames] = useState([]);\n  const [loadingNames, setLoadingNames] = useState(true);\n\n  // get event by id\n  useEffect(() => {\n    if (eventId) {\n      async function getEvent() {\n        await CalendarsApi.get(`/event/${eventId}`).then((response) => {\n          setEvent(response.data.eventById.rows[0]);\n          setLoadingEvent(false);\n        });\n      }\n      getEvent();\n    }\n  }, [eventId]);\n\n  // get user names\n  useEffect(() => {\n    async function getNames() {\n      await UsersApi.get(\"/fullNames\").then((response) => {\n        setNames(response.data.fullNames.rows);\n        setLoadingNames(false);\n      });\n    }\n    getNames();\n  }, []);\n\n  const handleDelete = async () => {\n    if (event.event_id) {\n      try {\n        await CalendarsApi.patch(`/delete/${event.event_id}`).then(\n          (response) => {\n            if (response.status === 200) {\n              alert(\"Event cancelled\");\n              handleClose();\n              incoming(true);\n            }\n          }\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    } else alert(\"Error. Try again later\");\n  };\n\n  if (eventId && !loadingNames && !loadingEvent) {\n    return (\n      <div>\n        <Paper\n          id=\"event-modal\"\n          elevation={4}\n          style={{ display: showModal ? \"block\" : \"none\" }}\n        >\n          <h5 style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n            Event Details\n          </h5>\n          <hr style={{ width: \"100%\", borderColor: \"lightgrey\" }} />\n          <img\n            id=\"event-creator\"\n            src={generator.generateRandomAvatar(event.event_creator)}\n            alt=\"profile pic\"\n          />\n          <h6 id=\"event-modal-title\">{event.event_title}</h6>\n          <hr style={{ width: \"100%\", borderColor: \"lightgrey\" }} />\n          <p\n            style={{\n              textAlign: \"center\",\n              color: \"red\",\n              display: isAfter(new Date(event.start_time), new Date())\n                ? \"none\"\n                : \"block\",\n            }}\n          >\n            This event has expired\n          </p>\n          <p\n            style={{\n              textAlign: \"center\",\n              color: \"red\",\n              display: event.is_live ? \"none\" : \"block\",\n            }}\n          >\n            This event has been cancelled\n          </p>\n          <div style={{ textAlign: \"center\" }}>\n            <h4 style={{ color: \"#457F96\" }}>\n              {format(new Date(event.start_time), \"do MMM, HH:MM\")}{\" \"}\n              <MdArrowForward\n                size={30}\n                color=\"brown\"\n                style={{ marginBottom: \"7px\" }}\n              />{\" \"}\n              {format(new Date(event.end_time), \"do MMM, HH:MM\")}{\" \"}\n            </h4>\n          </div>\n          <div id=\"participant-container\">\n            <div id=\"event-participants\" className=\"row\">\n              <BsPeopleFill size={35} color=\"#2A9D8F\" />\n              <h6\n                style={{\n                  textAlign: \"center\",\n                  fontWeight: \"bold\",\n                  marginLeft: \"10px\",\n                  marginTop: \"7px\",\n                }}\n              >\n                Participants\n              </h6>\n            </div>\n            <div id=\"participant-list\" className=\"row\">\n              {event.invitees.map((invitee) => {\n                return (\n                  <p id=\"event-invitee\">\n                    {\n                      names.filter((each) => each.user_id === invitee)[0]\n                        .full_name\n                    }\n                  </p>\n                );\n              })}\n            </div>\n          </div>\n          <div style={{ marginTop: \"10px\", textAlign: \"center\" }}>\n            <RiDeleteBin6Fill\n              color=\"red\"\n              size={30}\n              style={{\n                cursor: \"pointer\",\n                marginRight: \"20px\",\n                display: event.is_live ? null : \"none\",\n              }}\n              onClick={handleDelete}\n            />\n            <RiCloseFill\n              size={40}\n              style={{ cursor: \"pointer\" }}\n              color=\"#457F96\"\n              onClick={handleClose}\n            />\n          </div>\n        </Paper>\n      </div>\n    );\n  } else return null;\n};\n\nexport default EventModal;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  format,\n  isSameMonth,\n  addDays,\n  subDays,\n  endOfMonth,\n  startOfMonth,\n  parseJSON,\n  isAfter,\n} from \"date-fns\";\nimport { FaBackward, FaForward } from \"react-icons/fa\";\nimport CreateEvent from \"./CreateEvent\";\nimport { takeMonth } from \"./generators\";\nimport CalendarsApi from \"../../apis/CalendarsApi\";\nimport { UserContext } from \"../../auth/UserContext\";\nimport EventModal from \"./EventModal\";\nimport \"./calendar.css\";\n\nconst Calendar = () => {\n  const currentUser = useContext(UserContext);\n\n  const [monthDate, setMonthDate] = useState(null);\n\n  const [eventId, setEventId] = useState(null);\n  const [events, setEvents] = useState([]);\n  const [loadingEvents, setLoadingEvents] = useState(true);\n\n  const [incoming, setIncoming] = useState(false);\n  const updateIncoming = (trigger) => setIncoming(trigger);\n\n  const [showModal, setShowModal] = useState(false);\n  const handleClose = () => setShowModal(!showModal);\n\n  const [eventDeleted, setEventDeleted] = useState(false);\n  const updateEventDeleted = (trigger) => setEventDeleted(trigger);\n\n  const days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n  const chosenDate = !monthDate ? new Date() : monthDate;\n  const data = takeMonth(chosenDate)();\n\n  const displayPreviousMonth = () => {\n    setMonthDate(subDays(startOfMonth(chosenDate), 1));\n  };\n\n  const displayNextMonth = () => {\n    setMonthDate(addDays(endOfMonth(chosenDate), 1));\n  };\n\n  const renderEventId = (value) => {\n    setEventId(value);\n  };\n\n  const filteredData = events.filter((data) =>\n    isSameMonth(chosenDate, parseJSON(data.start_time))\n  );\n\n  const checkExpired = (date) => {\n    return isAfter(new Date(), new Date(date)) ? \"#989d9e\" : \"#5999B3\";\n  };\n\n  function fetchEvents(date) {\n    const dateEvents = filteredData.filter(\n      (data) =>\n        format(date, \"dd/MM/yyyy\") ===\n        format(new Date(data.start_time), \"dd/MM/yyyy\")\n    );\n    return dateEvents;\n  }\n\n  // get all events\n  useEffect(() => {\n    async function getEvents() {\n      await CalendarsApi.get(`/${currentUser}`).then((response) => {\n        setEvents(response.data.allEvents.rows);\n        setLoadingEvents(false);\n        setIncoming(false);\n        setEventDeleted(false);\n      });\n    }\n    getEvents();\n  }, [incoming, currentUser, eventDeleted]);\n\n  if (!loadingEvents) {\n    return (\n      <div id=\"calendar-main\">\n        <CreateEvent updateIncoming={updateIncoming} />\n        <div className=\"row\" id=\"month-toggle\">\n          <select\n            className=\"form-control\"\n            id=\"select-view\"\n            defaultValue=\"Month View\"\n          >\n            <option value=\"Day View\">Day View</option>\n            <option value=\"Week View\">Week View</option>\n            <option value=\"Month View\">Month View</option>\n          </select>\n          <FaBackward\n            size={17}\n            style={{ cursor: \"pointer\", marginRight: \"10px\" }}\n            onClick={displayPreviousMonth}\n          />\n          <h5 id=\"month-name\">\n            {format(chosenDate, \"MMMM yyyy\").toUpperCase()}\n          </h5>\n          <FaForward\n            size={17}\n            style={{ cursor: \"pointer\", marginLeft: \"10px\" }}\n            onClick={displayNextMonth}\n          />\n        </div>\n        <div className=\"row\">\n          {days.map((day) => (\n            <div id=\"day-of-week\" key={day}>\n              {day}\n            </div>\n          ))}\n        </div>\n        {data.map((week, index) => (\n          <div className=\"row\" key={index}>\n            {week.map((date, index) => (\n              <div>\n                <div\n                  id=\"date\"\n                  key={index}\n                  style={{\n                    background:\n                      format(new Date(), \"dd/MM\") === format(date, \"dd/MM\")\n                        ? \"yellow\"\n                        : isSameMonth(date, new Date())\n                        ? \"#FCEDE9\"\n                        : \"#E0F7F4\",\n                  }}\n                >\n                  <p id=\"date-numeric\">{format(date, \"dd\")}</p>\n                  <div id=\"event-container\">\n                    {fetchEvents(date).map((event) => (\n                      <p\n                        className=\"single-event-container\"\n                        style={{\n                          background: checkExpired(event.start_time),\n                          textDecoration: !event.is_live\n                            ? \"line-through\"\n                            : null,\n                        }}\n                        onClick={() => {\n                          renderEventId(event.event_id);\n                          setShowModal(true);\n                        }}\n                      >\n                        {event.event_title}\n                      </p>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n        <EventModal\n          showModal={showModal}\n          handleClose={handleClose}\n          eventId={eventId}\n          incoming={updateEventDeleted}\n        />\n      </div>\n    );\n  } else\n    return (\n      <div id=\"calendar-main\">\n        <h3>Fetching Data</h3>\n      </div>\n    );\n};\n\nexport default Calendar;\n","import { format } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport ProgressMeter from \"../common/ProgressMeter\";\nimport StatusMeter from \"../common/StatusMeter\";\n\nexport const COLUMNS = [\n  {\n    Header: \"Id\",\n    accessor: \"task_id\",\n  },\n  {\n    Header: \"Task Title\",\n    accessor: \"task_title\",\n    Cell: (title) => (\n      <Link to={`tasks/${title.row.original.task_id}`}>{title.value}</Link>\n    ),\n  },\n  {\n    Header: \"Description\",\n    accessor: \"task_description\",\n  },\n  {\n    Header: \"Project\",\n    accessor: \"project_title\",\n  },\n  {\n    Header: \"Assignee\",\n    accessor: \"full_name\",\n  },\n  {\n    Header: \"Start Date\",\n    accessor: \"start_date\",\n    Cell: ({ value }) => {\n      return format(new Date(value), \"dd/MM/yyyy\");\n    },\n  },\n  {\n    Header: \"End Date\",\n    accessor: \"end_date\",\n    Cell: ({ value }) => {\n      return format(new Date(value), \"dd/MM/yyyy\");\n    },\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    Cell: (status) => (\n      <div style={{textAlign:\"center\"}}>\n        <StatusMeter endDate={status.row.original.end_date} \n          completion={parseInt(status.row.original.completion)}\n        />\n      </div>\n    ),\n  },\n  {\n    Header: \"Progress\",\n    accessor: \"completion\",\n    Cell: (completion) => (\n      <div style={{marginLeft:\"10px\", width:\"42px\", height:\"42px\"}}>\n        <ProgressMeter value={completion.value} />\n      </div>\n    ),\n  },\n];\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as BiIcons from \"react-icons/bi\";\nimport * as BsIcons from \"react-icons/bs\";\nimport { COLUMNS } from \"./columns\";\nimport TasksApi from \"../../apis/TasksApi\";\nimport \"./tasks.css\";\nimport { GlobalFilter } from \"../common/GlobalFilter\";\n\nconst TasksTable = () => {\n  // set tasks\n  const [tasks, setTasks] = useState([]);\n\n  // get tasks\n  useEffect(() => {\n    async function getTasks() {\n      const response = await TasksApi.get(\"/\");\n      setTasks(response.data.allTasks.rows);\n    }\n    getTasks();\n  }, []);\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => tasks, [tasks]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    state,\n    setGlobalFilter,\n    prepareRow,\n  } = useTable(\n    { columns, data, initialState: { pageSize: 5 } },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  return (\n    <div id=\"task-table\">\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n        <p id=\"page-title\">\n          Showing {pageSize} of {tasks.length} tasks ...\n        </p>\n      <table {...getTableProps()} className=\"table table-hover mt-4\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted ? (column.isSortedDesc ? \" ↓\" : \" ↑\") : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div className=\"pagination\">\n        <div>\n          Page {pageIndex + 1} of {pageOptions.length}\n        </div>\n        <span style={{ marginLeft: \"220px\" }}>\n          Go to page:{\" \"}\n          <input\n            type=\"number\"\n            min={1}\n            max={Math.ceil(tasks.length / pageSize)}\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const pageNumber = e.target.value\n                ? Number(e.target.value) - 1\n                : 0;\n              gotoPage(pageNumber);\n            }}\n            style={{\n              width: \"50px\",\n              marginRight: \"2px\",\n              marginLeft: \"2px\",\n              textAlign: \"center\",\n            }}\n          />\n        </span>\n        <button\n          type=\"button\"\n          className=\"btn btn-sm btn-info\"\n          onClick={() => gotoPage(0)}\n          disabled={!canPreviousPage}\n          style={{\n            height: \"25px\",\n            width: \"30px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          {\"<<\"}\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n          style={{\n            height: \"25px\",\n            width: \"50px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          Prev\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => nextPage()}\n          disabled={!canNextPage}\n          style={{\n            height: \"25px\",\n            width: \"50px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          Next\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n          style={{\n            height: \"25px\",\n            width: \"30px\",\n            marginRight: \"220px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          {\">>\"}\n        </button>\n        <select\n          value={pageSize}\n          onChange={(e) => setPageSize(Number(e.target.value))}\n          style={{ fontSize: \"0.9rem\" }}\n        >\n          {[4, 5, 10].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"row status-legend\">\n        <FaIcons.FaThumbsUp size={20} color=\"#35ad2a\" />\n        <span id=\"status-legend\">Complete</span>\n        <BiIcons.BiRun size={35} color=\"red\" />\n        <span id=\"status-legend\">Almost due</span>\n        <FaIcons.FaArrowsAltH size={25} color=\"#2a58ad\" />\n        <span id=\"status-legend\">Not due</span>\n        <BsIcons.BsAlarm size={25} />\n        <span id=\"status-legend\">Due Today</span>\n        <FaIcons.FaFlag size={20} color=\"red\" />\n        <span id=\"status-legend\">Overdue</span>\n      </div>\n    </div>\n  );\n};\n\nexport default TasksTable;\n","import React from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nconst MuiDatePicker = (props) => {\n\n  const {value, defaultValue, setValue, label} = props;\n\n  return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          value={value}\n          onChange={setValue}\n          defaultValue={defaultValue}\n          autoOk\n          inputVariant=\"outlined\"\n          variant=\"inline\"\n          label={label}\n          format=\"dd/MM/yyyy\"\n          InputAdornmentProps={{ position: \"end\" }}\n        />\n      </MuiPickersUtilsProvider>\n  );\n};\n\nexport default MuiDatePicker;\n","import { useEffect, useState } from 'react';\nimport ProjectsApi from \"../../apis/ProjectsApi\";\n\nconst ProjectDropdown = (props) => {\n  // get project titles to feed parent project dropdown menu\n  const [allProjects, setAllProjects] = useState([]);\n  \n  useEffect(() => {\n    async function getAllProjects() {\n      const response = await ProjectsApi.get(\"/\");\n      setAllProjects(response.data.allProjects.rows);\n    }\n    getAllProjects();\n  }, []);\n  \n  return (\n      allProjects.map((project) => (\n        <option key={project.project_id} value={project.project_id}>\n          {project.project_title}\n        </option>\n      ))\n  )\n}\n\nexport default ProjectDropdown\n","import { useEffect, useState } from 'react';\nimport UsersApi from \"../../apis/UsersApi\";\n\nconst AssigneeDropdown = (props) => {\n  // get user fullname and department to feed assignee dropdown menu\n  const [assignees, setAssignees] = useState([]);\n  useEffect(() => {\n    async function getAssignees() {\n      const response = await UsersApi.get(\"/fullNames\");\n      setAssignees(response.data.fullNames.rows);\n    }\n    getAssignees();\n  }, []);\n\n  return (\n    assignees.map((assignee) => (\n      <option key={assignee.user_id} value={assignee.user_id}>\n        {assignee.full_name} - {assignee.department_name}\n      </option>\n    ))  \n  )\n}\n\nexport default AssigneeDropdown","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst sliderThumbStyles = (props) => (`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  outline: 5px solid #294e6e;\n`);\n\nconst Styles = styled.div`\n  display: flex;\n  align-items: center;\n\n  .value {\n    flex: 1;\n    font-size: 1.2rem;\n    margin-left: 20px;\n  }\n\n  .slider {\n    flex: 6;\n    -webkit-appearance: none;\n    width: 280px;\n    height: 12px;\n    border-radius: 10px;\n    background: orange;\n    outline: none;\n\n    &::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      appearance: none;\n      ${props => sliderThumbStyles(props)}\n    }\n  }\n`;\n\nconst NewSlider = (props) => {\n  const {value, onChange} = props;\n\n  return (\n    <Styles>\n      <input\n        type=\"range\"\n        min={0}\n        max={100}\n        value={value}\n        className=\"slider\"\n        onChange={onChange}\n      />\n      <div className=\"value\">{value}%</div>\n    </Styles>\n  );\n}\n\nexport default NewSlider;","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport TasksApi from \"../../apis/TasksApi\";\nimport MuiDatePicker from \"../common/MuiDatePicker\";\nimport ProjectDropdown from \"../common/projectDropdown\";\nimport AssigneeDropdown from \"../common/assigneeDropdown\";\nimport NewSlider from \"../common/NewSlider\";\n\nconst TaskEditTab = () => {\n  // use task id\n  const { id } = useParams();\n\n  // set state\n  const [taskDescription, setTaskDescription] = useState();\n  const [, setProjectTitle] = useState();\n  const [taskTitle, setTaskTitle] = useState();\n  const [projectId, setProjectId] = useState();\n  const [, setDepartmentName] = useState();\n  const [assigneeId, setAssigneeId] = useState();\n  const [, setFullName] = useState();\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [sliderValue, setSliderValue] = useState();\n  const [loading, setLoading] = useState(true);\n  \n  // get task details\n  useEffect(() => {\n    async function getTask() {\n      await TasksApi.get(`/${id}`).then((response) => {\n        setLoading(false);\n        setTaskTitle(response.data.rows[0].task_title);\n        setProjectId(response.data.rows[0].project_id);\n        setProjectTitle(response.data.rows[0].project_title);\n        setTaskDescription(response.data.rows[0].task_description);\n        setAssigneeId(response.data.rows[0].assignee);\n        setDepartmentName(response.data.rows[0].department_name);\n        setFullName(response.data.rows[0].full_name);\n        setStartDate(response.data.rows[0].start_date);\n        setEndDate(response.data.rows[0].end_date);\n        setSliderValue(response.data.rows[0].completion);\n      });\n    }\n    getTask();\n  }, [id]);\n\n  // destructure react hooks form\n  const { register, handleSubmit, control } = useForm();\n\n  const onSubmit = async (data) => {\n    try {\n      // const response = await TasksApi.put(`/${id}`, {\n      //   task_title: data.task_title,\n      //   task_description: data.task_description,\n      //   project_id: parseInt(data.parent_project),\n      //   created_by: 4,\n      //   assignee: parseInt(data.assignee),\n      //   start_date: data.start_date,\n      //   end_date: data.end_date,\n      //   completion: parseInt(data.completion),\n      // });\n      console.log(data);\n      alert(\"Task updated successfully !\")\n    } catch (error) {}\n  };\n\n  // const handleDelete = async () => {\n  //   const response = await TasksApi.delete(`/${id}`);\n  // };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"row\" id=\"task-form-main\">\n        <div className=\"column task-form\">\n          <div className=\"form-group mb-4\">\n            <label>Task Title</label>\n            <input\n              type=\"text\"\n              name=\"task_title\"\n              className=\"form-control\"\n              minLength=\"1\"\n              maxLength=\"40\"\n              value={taskTitle}\n              onChange={(e) => setTaskTitle(e.target.value)}\n              ref={register({ required: true })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Task Description</label>\n            <textarea\n              type=\"text\"\n              name=\"task_description\"\n              value={taskDescription}\n              className=\"form-control\"\n              minLength=\"1\"\n              maxLength=\"100\"\n              onChange={(e) => setTaskDescription(e.target.value)}\n              ref={register({ required: true })}\n            />\n          </div>\n          <div className=\"form-group mb-4\">\n            <label>Parent Project</label>\n            <select\n              className=\"form-control\"\n              name=\"parent_project\"\n              ref={register({ required: true })}\n              value={projectId}\n              onChange={(e) => setProjectId(e.target.value)}\n            >\n              {/* <option>{projectTitle}</option> */}\n              <ProjectDropdown />\n            </select>\n          </div>\n          <div className=\"form-group mb-4\">\n            <label>Assignee</label>\n            <select\n              className=\"form-control\"\n              name=\"assignee\"\n              ref={register({ required: true })}\n              value={assigneeId}\n              onChange={(e) => setAssigneeId(e.target.value)}\n            >\n              {/* <option>{fullName} - {departmentName}</option> */}\n              <AssigneeDropdown />\n            </select>\n          </div>\n        </div>\n        <div className=\"column task-form right\">\n          <div className=\"form-group\">\n            <label>Task Completion</label>\n            {!loading ? (\n              <Controller \n                name=\"completion\"\n                control={control}\n                ref={register}\n                render={({value, onChange}) => (\n                  <NewSlider\n                    className=\"slider\"\n                    value={sliderValue}\n                    onChange={(e) => setSliderValue(e.target.value)}\n                  />\n                )}\n            />\n            ) : (<p>Loading.....</p>)}\n          </div>\n          <div id=\"start-date single\" className=\"form-group mt-4 mb-5\">\n            {!loading ? (\n              <Controller \n                name=\"start_date\"\n                control={control}\n                register={register}\n                render={({value, onChange, defaultValue}) => (\n                  <MuiDatePicker\n                    label=\"Start Date\"\n                    value={startDate}\n                    setValue={(date) => setStartDate(date)}\n                  />\n                )}\n              />\n            ) : (<p>Loading.....</p>)}    \n          </div>\n          <div className=\"form-group mb-4\">\n          {!loading ? (\n            <Controller \n              name=\"end_date\"\n              control={control}\n              register={register}\n              render={({value, onChange}) => (\n                <MuiDatePicker\n                  value={endDate}\n                  label=\"End Date\"\n                  setValue={(date) => setEndDate(date)}\n                />\n              )}\n            />\n          ) : (<p>Loading.....</p>)}    \n          </div>\n          <button type=\"submit\" className=\"btn btn-info\" id=\"update-button\">\n            Update\n          </button>\n          <button type=\"delete\" className=\"btn btn-warning\" id=\"abort-button\">\n            Abort\n          </button>\n          <button type=\"delete\" className=\"btn btn-danger\" id=\"delete-button\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default TaskEditTab;\n","import {useParams} from 'react-router-dom';\nimport HyvorTalk from 'hyvor-talk-react';\nimport React, {useState, useEffect} from 'react';\nimport TasksApi from \"../../apis/TasksApi\";\n\nconst TaskCommentsTab = () => {\n  const {id} = useParams();\n  const [taskTitle, setTaskTitle] = useState();\n  const [, setTaskId] = useState();\n\n  useEffect(() => {\n    async function getTask() {\n      const response = await TasksApi.get(`/${id}`);\n      setTaskTitle(response.data.rows[0].task_title);\n      setTaskId(response.data.rows[0].task_id);\n    }\n    getTask();\n  }, [id]);\n\n  return (\n    <div style={{marginRight:\"50px\"}}>\n      <h5 style={{textAlign:\"center\", marginTop:\"10px\", fontWeight:\"bold\"}}>Task : {taskTitle}</h5>\n      {/* <div className=\"comment-count-view\">\n        <HyvorTalk.CommentCount\n          websiteId={3233}\n          id={`localhost:3000/tasks/${id}`}\n        />\n      </div> */}\n      <div>\n        <HyvorTalk.Embed \n          websiteId={3233}\n          id={`localhost:3000/tasks/${id}`}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default TaskCommentsTab;","import React from 'react';\nimport {useParams} from 'react-router-dom';\nimport HyvorTalk from 'hyvor-talk-react';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport TaskEditTab from './TaskEditTab';\nimport TaskCommentsTab from './TaskComments';\n\nconst TaskTabs = () => {\n  \n  const {id} = useParams();\n  \n  const commentCounter = <HyvorTalk.CommentCount\n    websiteId={3233}\n    id={`localhost:3000/tasks/${id}`}\n  />\n  \n  return (\n    <div style={{marginTop:\"100px\", marginRight:\"30px\", marginLeft:\"280px\"}}>\n      <Tabs defaultActiveKey=\"editing\">\n        <Tab eventKey=\"editing\" title=\"Editing\">\n          <TaskEditTab />\n        </Tab>\n        <Tab eventKey=\"comments\" title={commentCounter}>\n          <TaskCommentsTab />\n        </Tab>\n        <Tab eventKey=\"review\" title=\"Review\">\n          <h1>Hello Tab Three</h1>\n        </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default TaskTabs;\n","import {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nconst ConfirmationModal = (props) => {\n  \n  const {buttonText, handleSubmit, modalText, form, disabled} = props\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n      <>\n      <Button variant=\"primary\" onClick={handleShow} disabled={disabled}>\n        {buttonText}\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirmation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {modalText}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" type=\"submit\" onClick={() => {handleSubmit(); handleClose()}} form={form}>\n            Save Changes \n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n  )\n}\n\nexport default ConfirmationModal\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Form,\n  FormGroup,\n  FormLabel,\n  FormControl,\n} from \"react-bootstrap\";\nimport Switch from \"react-switch\";\nimport \"react-dates/initialize\";\nimport { DateRangePicker } from \"react-dates\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"./tasks.css\";\nimport ProjectsApi from \"../../apis/ProjectsApi\";\nimport TasksApi from \"../../apis/TasksApi\";\nimport UsersApi from \"../../apis/UsersApi\";\nimport ConfirmationModal from \"../common/ConfirmationModal\";\n\nconst CreateTask = () => {\n  // use state of input fields\n  const { user } = useAuth0();\n  const [userId, setUserId] = useState([]);\n  const [description, setDescription] = useState();\n  const [title, setTitle] = useState();\n  const [projectId, setProjectId] = useState();\n  const [assigneeId, setAssigneeId] = useState();\n  const [visibility, setVisibility] = useState(true);\n  const [measureType, setMeasureType] = useState();\n  const [target, setTarget] = useState(null);\n  const [dateRange, setDateRange] = useState({\n    startDate: null,\n    endDate: null,\n  });\n  const [focus, setFocus] = useState();\n  const { startDate, endDate } = dateRange;\n\n  const enabled =\n    projectId &&\n    title &&\n    description &&\n    ((measureType === \"Numeric\" && target) || (measureType === \"Percentage\" && target) ||\n    (measureType === \"Date\" || measureType===\"Not Applicable\")) &&\n    startDate &&\n    endDate\n\n  let history = useHistory();\n\n  // manage visibility toggle\n  const onSwitchAction = () => {\n    setVisibility(!visibility);\n  };\n\n  // get project titles to feed parent project dropdown menu\n  const [allProjects, setAllProjects] = useState([]);\n\n  useEffect(() => {\n    async function getAllProjects() {\n      const response = await ProjectsApi.get(\"/\");\n      setAllProjects(response.data.allProjects.rows);\n    }\n    getAllProjects();\n  }, []);\n\n  // get user fullname and department to feed assignee dropdown menu\n  const [assignees, setAssignees] = useState([]);\n\n  useEffect(() => {\n    async function getAssignees() {\n      const response = await UsersApi.get(\"/fullNames\");\n      setAssignees(response.data.fullNames.rows);\n    }\n    getAssignees();\n  }, []);\n\n  // get identity of logged in user\n  useEffect(() => {\n    async function getUserId() {\n      const response = await UsersApi.get(`/userId/${user.email}`);\n      setUserId(response.data.userId.rows[0]);\n    }\n    getUserId();\n  }, [user.email]);\n\n  // Form submission\n  const onSubmit = async (e, data) => {\n    e.preventDefault();\n    try {\n      await TasksApi.post(\"/\", {\n        task_title: title,\n        task_description: description,\n        project_id: parseInt(projectId),\n        created_by: userId.user_id,\n        assignee: parseInt(assigneeId),\n        start_date: startDate,\n        end_date: endDate,\n        completion: 0,\n        is_public: visibility,\n        measure_type: measureType,\n        target: parseInt(target),\n      });\n    } catch (error) {}\n    history.push(\"/tasks\");\n    alert(\"Task Created Successfully\")\n  };\n\n  // Rendering\n  return (\n    <div\n      style={{\n        marginTop: \"80px\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        marginLeft: \"100px\",\n      }}\n    >\n      <Form onSubmit={onSubmit} id=\"task-submit-form\">\n        <h5\n          style={{\n            marginBottom: \"30px\",\n            fontWeight: \"bold\",\n            textAlign: \"center\",\n          }}\n        >\n          Create new Task\n        </h5>\n        <div className=\"row\">\n          <div className=\"column\">\n            <FormGroup>\n              <FormLabel>Parent Project</FormLabel>\n              <FormControl\n                name=\"project_id\"\n                required\n                as=\"select\"\n                value={projectId}\n                onChange={(e) => setProjectId(e.target.value)}\n                className=\"col-md-10\"\n              >\n                <option value=\"\"></option>\n                <option disabled>\n                  Select project or create independent task\n                </option>\n                <option>Independent Task</option>\n                <option disabled>-------Projects-------</option>\n                {allProjects.map((project) => (\n                  <option key={project.project_id} value={project.project_id}>\n                    {project.project_title}\n                  </option>\n                ))}\n              </FormControl>\n            </FormGroup>\n            <FormGroup>\n              <FormLabel>Task Title</FormLabel>\n              <FormControl\n                name=\"task_title\"\n                required\n                type=\"text\"\n                value={title}\n                rows={2}\n                minLength={1}\n                maxLength={40}\n                onChange={(e) => setTitle(e.target.value)}\n                placeholder=\"Maximum 40 characters\"\n                className=\"col-md-10\"\n              ></FormControl>\n            </FormGroup>\n            <FormGroup>\n              <FormLabel>Task Description</FormLabel>\n              <FormControl\n                name=\"task_description\"\n                required\n                as=\"textarea\"\n                value={description}\n                rows={4}\n                minLength={1}\n                maxLength={100}\n                onChange={(e) => setDescription(e.target.value)}\n                placeholder=\"Maximum 100 characters\"\n                className=\"col-md-10\"\n              ></FormControl>\n            </FormGroup>\n            <FormGroup>\n              <FormLabel>Assignee</FormLabel>\n              <FormControl\n                name=\"assignee\"\n                required\n                as=\"select\"\n                value={assigneeId}\n                onChange={(e) => setAssigneeId(e.target.value)}\n                className=\"col-md-10\"\n              >\n                <option value=\"\"></option>\n                <option disabled>Assign to self or colleagues</option>\n                <option>Self</option>\n                <option disabled>--------Assigneess--------</option>\n                {assignees.map((assignee) => (\n                  <option key={assignee.user_id} value={assignee.user_id}>\n                    {assignee.full_name} - {assignee.department_name}\n                  </option>\n                ))}\n              </FormControl>\n            </FormGroup>\n          </div>\n          <div className=\"column\">\n            <FormGroup>\n              <FormLabel>Measure Type</FormLabel>\n              <FormControl\n                as=\"select\"\n                name=\"measure_type\"\n                value={measureType}\n                onChange={(e) => {setMeasureType(e.target.value); setTarget(\"\")}}\n                required\n                className=\"col-md-10\"\n              >\n                <option value=\"\"></option>\n                <option>Numeric</option>\n                <option>Percentage</option>\n                <option>Date</option>\n                <option>Not Applicable</option>\n              </FormControl>\n            </FormGroup>\n            <FormGroup>\n              <FormLabel>Target</FormLabel>\n              <div className=\"row\" style={{ marginLeft: \"0px\" }}>\n                <FormControl\n                  type=\"number\"\n                  name=\"target\"\n                  required={\n                    measureType === \"Numeric\" || measureType === \"Percentage\"\n                  }\n                  value={target}\n                  className=\"col-md-4\"\n                  onChange={(e) => setTarget(e.target.value)}\n                  disabled={\n                    measureType === \"Date\" || measureType === \"Not Applicable\"\n                  }\n                  style={{\n                    textAlign: \"center\",\n                  }}\n                ></FormControl>\n                <div\n                  className=\"input-group-append\"\n                  style={{\n                    display: measureType === \"Percentage\" ? \"block\" : \"none\",\n                  }}\n                >\n                  <p className=\"input-group-text\">%</p>\n                </div>\n              </div>\n            </FormGroup>\n            <FormGroup>\n              <FormLabel style={{ marginRight: \"20px\", display: \"flex\" }}>\n                Timeline\n              </FormLabel>\n              <DateRangePicker\n                startDate={startDate}\n                startDateId=\"start_date\"\n                endDate={endDate}\n                endDateId=\"end_date\"\n                onDatesChange={(date) => setDateRange(date)}\n                focusedInput={focus}\n                onFocusChange={(focus) => setFocus(focus)}\n                displayFormat={() => \"DD/MM/YYYY\"}\n                openDirection=\"down\"\n                required\n              />\n            </FormGroup>\n            <FormGroup style={{ marginTop: \"30px\" }}>\n              <div className=\"form-row\">\n                <FormLabel\n                  style={{\n                    marginLeft: \"5px\",\n                    marginRight: \"30px\",\n                    marginTop: \"15px\",\n                    clear: \"right\",\n                  }}\n                >\n                  <span style={{ display: \"flex\" }}>Visibility</span>\n                </FormLabel>\n                <div\n                  className=\"row\"\n                  style={{\n                    borderStyle: \"solid\",\n                    borderWidth: \"1px\",\n                    borderRadius: \"5px\",\n                    borderColor: \"#dedcdc\",\n                    height: \"50px\",\n                    width: \"250px\",\n                    justifyContent: \"center\",\n                    paddingTop: \"10px\",\n                    position: \"relative\",\n                  }}\n                >\n                  <span style={{ marginRight: \"10px\", paddingTop: \"3px\" }}>\n                    Private\n                  </span>\n                  <Switch\n                    checked={visibility}\n                    onChange={onSwitchAction}\n                    onColor=\"#FFA500\"\n                    checkedIcon={false}\n                    uncheckedIcon={false}\n                  />\n                  <span style={{ marginLeft: \"10px\", paddingTop: \"3px\" }}>\n                    Public (default)\n                  </span>\n                </div>\n              </div>\n            </FormGroup>\n          </div>\n        </div>\n        <div style={{ textAlign: \"center\", marginTop: \"40px\" }}>\n          <ConfirmationModal\n            buttonText=\"Create Task\"\n            modalText=\"Are you sure you want to create this Task?\"\n            handleSubmit={onSubmit}\n            form=\"task-submit-form\"\n            disabled={!enabled}\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default CreateTask;\n","export const AllGoalsData = [\n  {\n    name: \"Jan\",\n    Target: 4,\n    Actual: 3,\n  },\n  {\n    name: \"Feb\",\n    Target: 10,\n    Actual: 8,\n  },\n  {\n    name: \"Mar\",\n    Target: 18,\n    Actual: 16,\n  },\n  {\n    name: \"Apr\",\n    Target: 27,\n    Actual: 25,\n  },\n  {\n    name: \"May\",\n    Target: 36,\n    Actual: 31,\n  },\n  {\n    name: \"Jun\",\n    Target: 44,\n    Actual: 37,\n  },\n  {\n    name: \"Jul\",\n    Target: 51,\n    Actual: 46,\n  },\n  {\n    name: \"Aug\",\n    Target: 60,\n    Actual: 56,\n  },\n  {\n    name: \"Sep\",\n    Target: 70,\n    Actual: 61,\n  },\n  {\n    name: \"Oct\",\n    Target: 79,\n    Actual: 69,\n  },\n  {\n    name: \"Nov\",\n    Target: 89,\n    Actual: 72,\n  },\n  {\n    name: \"Dec\",\n    Target: 100,\n    Actual: 80,\n  },\n]","export const TooltipStyle = {\n  border: 0,\n  borderRadius: \"8px\",\n  fontSize: 14,\n  boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n}","import React from \"react\";\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Legend,\n} from \"recharts\";\nimport { AllGoalsData } from \"./AllGoalsData\";\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport \"../dashboard.css\";\n\nconst AllGoalsChart = () => {\n  return (\n    <div className=\"column col-md-6\" id=\"all-goals\">\n      <p id=\"dash-chart-title\">All Goals</p>\n      <ResponsiveContainer width=\"100%\" height={250}>\n        <LineChart data={AllGoalsData} title=\"All Goals\">\n          <CartesianGrid stroke=\"lightgrey\" strokeDasharray=\"2 2\" />\n          <XAxis dataKey=\"name\" tickLine={false} />\n          <YAxis unit=\"%\" tickLine={false} />\n          <Tooltip contentStyle={TooltipStyle} />\n          <Legend\n            verticalAlign=\"bottom\"\n            iconType=\"circle\"\n            wrapperStyle={{ paddingTop: \"10px\", paddingLeft: \"20px\" }}\n          />\n          <Line\n            type=\"natural\"\n            dataKey=\"Target\"\n            stroke=\"orange\"\n          />\n          <Line type=\"natural\" dataKey=\"Actual\" stroke=\"teal\"/>\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default AllGoalsChart;\n","export const DepCompData = [\n  {\n    name: \"Operations\",\n    Target: 100,\n    Actual: 84,\n  },\n  {\n    name: \"Sales\",\n    Target: 100,\n    Actual: 92,\n  },\n  {\n    name: \"Marketing\",\n    Target: 100,\n    Actual: 81,\n  },\n  {\n    name: \"Engineering\",\n    Target: 100,\n    Actual: 70,\n  },\n  {\n    name: \"HR\",\n    Target: 100,\n    Actual: 88,\n  },\n  {\n    name: \"Legal\",\n    Target: 100,\n    Actual: 74,\n  },\n  {\n    name: \"Finance\",\n    Target: 100,\n    Actual: 78,\n  },\n  {\n    name: \"IT\",\n    Target: 100,\n    Actual: 73,\n  },\n]","export const COLORS = [\n  '#3066BE',\n  '#20A39E',\n  '#61D095',\n  '#FFBA49',\n  '#EF5B5B',\n  '#A4036F',\n  '#5CADDB',\n  '#F2928D',\n]","import React from \"react\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Bar,\n  Cell,\n} from \"recharts\";\nimport { DepCompData } from \"./DeptCompletion\";\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport { COLORS } from \"./Colors\";\nimport \"../dashboard.css\";\n\nconst CustomizedLabel = (props) => {\n  const { x, y, value} = props;\n  return (\n    <text\n      x={x}\n      y={y}\n      dx={10}\n      dy={30}\n      textAnchor=\"\"\n      fill=\"white\"\n    >\n      {value}\n    </text>\n  );\n};\n\nconst DepCompChart = () => {\n  return (\n    <div className=\"column col-md-6\" id=\"dep-goal-comp\">\n      <p id=\"dash-chart-title\">Department Wise Goal Completion</p>\n      <ResponsiveContainer width=\"100%\" height={250}>\n        <ComposedChart data={DepCompData} title=\"All Goals\">\n          <CartesianGrid vertical={false} />\n          <Tooltip contentStyle={TooltipStyle} />\n          <XAxis dataKey=\"name\" tickLine={false} />\n          <YAxis unit=\"%\" tickLine={false} />\n          <Line type=\"natural\" dataKey=\"Target\" stroke=\"brown\" />\n          <Bar dataKey=\"Actual\" label={CustomizedLabel}>\n            {DepCompData.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Bar>\n        </ComposedChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default DepCompChart;\n","export const RevenueData = [\n  {\n    name: \"Jan\",\n    Target: 13,\n    Actual: 12,\n  },\n  {\n    name: \"Feb\",\n    Target: 26,\n    Actual: 32,\n  },\n  {\n    name: \"Mar\",\n    Target: 53,\n    Actual: 56,\n  },\n  {\n    name: \"Apr\",\n    Target: 79,\n    Actual: 79,\n  },\n  {\n    name: \"May\",\n    Target: 91,\n    Actual: 90,\n  },\n  {\n    name: \"Jun\",\n    Target: 102,\n    Actual: 104,\n  },\n  {\n    name: \"Jul\",\n    Target: 123,\n    Actual: 116,\n  },\n  {\n    name: \"Aug\",\n    Target: 134,\n    Actual: 130,\n  },\n  {\n    name: \"Sep\",\n    Target: 145,\n    Actual: 140,\n  },\n  {\n    name: \"Oct\",\n    Target: 170,\n    Actual: 150,\n  },\n  {\n    name: \"Nov\",\n    Target: 189,\n    Actual: 164,\n  },\n  {\n    name: \"Dec\",\n    Target: 200,\n    Actual: 176,\n  },\n]","import React from 'react';\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Legend,\n} from \"recharts\";\nimport {RevenueData} from './RevenueData';\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport \"../dashboard.css\";\n\nconst RevenueChart = () => {\n  return (\n    <div className=\"column col-md-6\" id=\"revenue\">\n      <p id=\"dash-chart-title\">Revenue</p>\n      <ResponsiveContainer width=\"100%\" height={250}>\n        <AreaChart data={RevenueData} title=\"All Goals\">\n          <CartesianGrid stroke=\"lightgrey\" strokeDasharray=\"2 2\" />\n          <XAxis dataKey=\"name\" tickLine={false} />\n          <YAxis unit=\"%\" tickLine={false} />\n          <Tooltip contentStyle={TooltipStyle} />\n          <Legend\n            verticalAlign=\"bottom\"\n            iconType=\"circle\"\n            wrapperStyle={{ paddingTop: \"10px\", paddingLeft: \"20px\" }}\n          />\n          <Area\n            type=\"natural\"\n            dataKey=\"Target\"\n            stroke=\"orange\"\n            fill=\"orange\"\n          />\n          <Area type=\"natural\" dataKey=\"Actual\" stroke=\"teal\" fill=\"teal\" />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nexport default RevenueChart\n","export const ExpenseData = [\n  {\n    name: \"Jan\",\n    Target: 12,\n    Actual: 12,\n  },\n  {\n    name: \"Feb\",\n    Target: 24,\n    Actual: 27,\n  },\n  {\n    name: \"Mar\",\n    Target: 35,\n    Actual: 42,\n  },\n  {\n    name: \"Apr\",\n    Target: 45,\n    Actual: 56,\n  },\n  {\n    name: \"May\",\n    Target: 55,\n    Actual: 70,\n  },\n  {\n    name: \"Jun\",\n    Target: 70,\n    Actual: 80,\n  },\n  {\n    name: \"Jul\",\n    Target: 81,\n    Actual: 92,\n  },\n  {\n    name: \"Aug\",\n    Target: 93,\n    Actual: 107,\n  },\n  {\n    name: \"Sep\",\n    Target: 104,\n    Actual: 119,\n  },\n  {\n    name: \"Oct\",\n    Target: 119,\n    Actual: 130,\n  },\n  {\n    name: \"Nov\",\n    Target: 134,\n    Actual: 145,\n  },\n  {\n    name: \"Dec\",\n    Target: 148,\n    Actual: 158,\n  },\n]","import React from 'react';\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Legend,\n} from \"recharts\";\nimport {ExpenseData} from \"./ExpenseData\";\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport \"../dashboard.css\";\n\nconst ExpenseChart = () => {\n  return (\n    <div className=\"column col-md-6\" id=\"expenses\">\n      <p id=\"dash-chart-title\">Expenses</p>\n      <ResponsiveContainer width=\"100%\" height={250}>\n        <LineChart data={ExpenseData} title=\"All Goals\">\n          <CartesianGrid stroke=\"lightgrey\" strokeDasharray=\"2 2\" />\n          <XAxis dataKey=\"name\" tickLine={false} />\n          <YAxis unit=\"%\" tickLine={false} />\n          <Tooltip contentStyle={TooltipStyle} />\n          <Legend\n            verticalAlign=\"bottom\"\n            iconType=\"circle\"\n            wrapperStyle={{ paddingTop: \"10px\", paddingLeft: \"20px\" }}\n          />\n          <Line type=\"natural\" dataKey=\"Target\" stroke=\"orange\" />\n          <Line type=\"natural\" dataKey=\"Actual\" stroke=\"teal\" fill=\"teal\" />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nexport default ExpenseChart;\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Legend,\n} from \"recharts\";\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport \"../dashboard.css\";\n\nconst ProfitChart = () => {\n  const [data, setData] = useState([]);\n  const [, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function getData() {\n      await axios\n        .get(\"https://api.apispreadsheets.com/data/9058/\")\n        .then((response) => {\n          setLoading(false);\n          setData(response.data.data.slice(0,12))\n        });\n    }\n    getData();\n  }, []);\n\n  return (\n    <div className=\"column col-md-6\" id=\"profit\">\n      <p id=\"dash-chart-title\">Profit</p>\n      <ResponsiveContainer width=\"100%\" height={250}>\n        <LineChart data={data} title=\"All Goals\">\n          <CartesianGrid stroke=\"lightgrey\" strokeDasharray=\"2 2\" />\n          <XAxis dataKey=\"name\" tickLine={false} />\n          <YAxis unit=\"\" tickLine={false}/>\n          <Tooltip contentStyle={TooltipStyle} />\n          <Legend\n            verticalAlign=\"bottom\"\n            iconType=\"circle\"\n            wrapperStyle={{ paddingTop: \"10px\", paddingLeft: \"20px\" }}\n          />\n          <Line type=\"natural\" dataKey=\"Target\" stroke=\"orange\" />\n          <Line type=\"natural\" dataKey=\"Actual\" stroke=\"teal\" fill=\"teal\" />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nexport default ProfitChart;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ResponsiveContainer, Pie, PieChart, Tooltip, Legend, Cell } from \"recharts\";\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport { COLORS } from \"./Colors\";\nimport \"../dashboard.css\";\n\n  const DebtorsChart = () => {\n  \n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      await axios\n        .get(\"https://api.apispreadsheets.com/data/9418/\")\n        .then((response) => {\n          setData(response.data.data);\n        });\n    }\n    getData();\n  }, []);\n\n  return (\n    <div className=\"column col-md-6\" id=\"debtors\">\n      <p id=\"dash-chart-title\">Debtors Ageing</p>\n      <ResponsiveContainer width=\"100%\" height={250}>\n        <PieChart>\n          <Pie\n            data={data}\n            label={true}\n            innerRadius={40}\n            dataKey=\"Amount\"\n          >\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n          <Legend />\n          <Tooltip contentStyle={TooltipStyle} />\n        </PieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default DebtorsChart;\n","import React from \"react\";\nimport AllGoalsChart from \"./AllGoalsChart\";\nimport DepCompChart from \"./DepCompChart\";\nimport RevenueChart from \"./RevenueChart\";\nimport ExpenseChart from \"./ExpenseChart\";\nimport ProfitChart from \"./ProfitChart\";\nimport DebtorsChart from \"./DebtorsChart\";\nimport \"../dashboard.css\";\n\nconst Ceo = () => {\n  return (\n    <>\n      <div className=\"row\">\n        <AllGoalsChart />\n        <DepCompChart />\n      </div>\n      <div className=\"row\">\n        <RevenueChart />\n        <ExpenseChart />\n      </div>\n      <div className=\"row\">\n        <ProfitChart />\n        <DebtorsChart />\n      </div>\n    </>\n  );\n};\n\nexport default Ceo;\n","import React from \"react\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Ceo from \"./ceo/Ceo\";\nimport \"./dashboard.css\";\n\nconst Main = () => {\n  return (\n    <div id=\"dash-main\">\n      <Tabs defaultActiveKey=\"ceo\">\n        <Tab eventKey=\"ceo\" title=\"CEO\"><Ceo /></Tab>\n        <Tab eventKey=\"operations\" title=\"Operations\"></Tab>\n        <Tab eventKey=\"sales\" title=\"Sales\"></Tab>\n        <Tab eventKey=\"marketing\" title=\"Marketing\"></Tab>\n        <Tab eventKey=\"engineering\" title=\"Engineering\"></Tab>\n        <Tab eventKey=\"hr\" title=\"Human Resources\"></Tab>\n        <Tab eventKey=\"legal\" title=\"Legal\"></Tab>\n        <Tab eventKey=\"finance\" title=\"Finance\"></Tab>\n        <Tab eventKey=\"it\" title=\"IT\"></Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/logoTransparent.41d041af.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport TangibleLogo from \"../images/logoTransparent.png\";\nimport * as BsIcons from \"react-icons/bs\";\nimport \"./navbar.css\";\n\nconst NavbarMain = () => {\n\n  return (\n    <div id=\"navbar-main\">\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <img id=\"navbar-logo\" src={TangibleLogo} alt=\"Logo\" />\n        <Navbar.Brand href=\"#home\">Tangible</Navbar.Brand>\n        <div style={{ marginLeft: \"100px\" }}>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav.Item style={{ color: \"#E76F51\", marginRight: \"10px\" }}>\n              Quick Links\n            </Nav.Item>\n            <BsIcons.BsBoxArrowInRight color=\"lightgrey\" size={30} />\n            <Nav className=\"mr-4 ml-4\">\n              <NavDropdown title=\"SALES\" id=\"nav-items\">\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/sales/customers\">\n                    Customers\n                  </Link>\n                </NavDropdown.Item>\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/sales/createlead\">\n                    Create Lead\n                  </Link>\n                </NavDropdown.Item>\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/sales/leadsummary\">\n                    Manage Leads\n                  </Link>\n                </NavDropdown.Item>\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/sales/existing\">\n                    Existing Business\n                  </Link>\n                </NavDropdown.Item>\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/sales/target\">\n                    Target\n                  </Link>\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/tasks/create\">\n                    Create Todo\n                  </Link>\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav className=\"mr-4\">\n              <NavDropdown title=\"FINANCE\" id=\"nav-items\">\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/finance/receivables\">\n                    Receivables\n                  </Link>\n                </NavDropdown.Item>\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/finance/budgets\">\n                    Budget\n                  </Link>\n                </NavDropdown.Item>\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/finance/fundrequests\">\n                    Fund Requests\n                  </Link>\n                </NavDropdown.Item>\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/finance/requestfunds\">\n                    New Fund Request\n                  </Link>\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/tasks/create\">\n                    Create Todo\n                  </Link>\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav className=\"mr-4\">\n              <NavDropdown title=\"MARKETING\" id=\"nav-items\">\n                <NavDropdown.Item href=\"\">Record Collection</NavDropdown.Item>\n                <NavDropdown.Item href=\"\">Hello Mister</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav className=\"mr-4\">\n              <NavDropdown title=\"OPERATIONS\" id=\"nav-items\">\n                <NavDropdown.Item href=\"\">Record Collection</NavDropdown.Item>\n                <NavDropdown.Item href=\"\">Hello Mister</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav className=\"mr-4\">\n              <NavDropdown title=\"ENGINEERING\" id=\"nav-items\">\n                <NavDropdown.Item href=\"\">Record Collection</NavDropdown.Item>\n                <NavDropdown.Item href=\"\">Hello Mister</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav className=\"mr-4\">\n              <NavDropdown title=\"HR\" id=\"nav-items\">\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/hr/requisition\">\n                    Employee Requisition\n                  </Link>\n                </NavDropdown.Item>\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/hr/exit\">\n                    Employee Exit\n                  </Link>\n                </NavDropdown.Item>\n                <NavDropdown.Item>\n                  <Link id=\"link\" to=\"/hr/grievance\">\n                    Employee Grievance\n                  </Link>\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"/hr/onboarding\">\n                  Employee Onboarding\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"/tasks/create\">\n                  Create Todo\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav className=\"mr-4\">\n              <NavDropdown title=\"ADMIN\" id=\"nav-items\">\n                <NavDropdown.Item href=\"\"></NavDropdown.Item>\n                <NavDropdown.Item href=\"\">Hello Mister</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Create Todo\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav className=\"mr-4\">\n              <NavDropdown title=\"IT\" id=\"nav-items\">\n                <NavDropdown.Item href=\"\">Record Collection</NavDropdown.Item>\n                <NavDropdown.Item href=\"\">Hello Mister</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </div>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavbarMain;\n","export const ChartData = [\n  {\n    userId: 2,\n    data: [\n      {\n        name: 'Completed',\n        value: 5,\n        fill: \"#35ad2a\",\n      },\n      {\n        name: 'Not Due',\n        value: 7,\n        fill: \"blue\",\n      },\n      {\n        name: 'Almost Due',\n        value: 5,\n        fill: \"orange\",\n      },\n      {\n        name: 'Due Today',\n        value: 2,\n        fill: \"grey\",\n      },\n      {\n        name: 'Overdue',\n        value: 4,\n        fill: \"red\",\n      },\n      {\n        name: 'Aborted',\n        value: 2,\n        fill: \"magenta\",\n      }\n    ]\n  },\n  {\n    userId: 4,\n    data: [\n      {\n        name: 'Completed',\n        value: 2,\n        fill: \"#35ad2a\",\n      },\n      {\n        name: 'Not Due',\n        value: 6,\n        fill: \"blue\",\n      },\n      {\n        name: 'Almost Due',\n        value: 3,\n        fill: \"orange\",\n      },\n      {\n        name: 'Due Today',\n        value: 5,\n        fill: \"grey\",\n      },\n      {\n        name: 'Overdue',\n        value: 8,\n        fill: \"red\",\n      },\n      {\n        name: 'Aborted',\n        value: 1,\n        fill: \"magenta\",\n      }\n    ]\n  },\n  {\n    userId: 7,\n    data: [\n      {\n        name: 'Completed',\n        value: 1,\n        fill: \"#35ad2a\",\n      },\n      {\n        name: 'Not Due',\n        value: 2,\n        fill: \"blue\",\n      },\n      {\n        name: 'Almost Due',\n        value: 3,\n        fill: \"orange\",\n      },\n      {\n        name: 'Due Today',\n        value: 4,\n        fill: \"grey\",\n      },\n      {\n        name: 'Overdue',\n        value: 5,\n        fill: \"red\",\n      },\n      {\n        name: 'Aborted',\n        value: 6,\n        fill: \"magenta\",\n      }\n    ]\n  },\n  {\n    userId: 8,\n    data: [\n      {\n        name: 'Completed',\n        value: 6,\n        fill: \"#35ad2a\",\n      },\n      {\n        name: 'Not Due',\n        value: 5,\n        fill: \"blue\",\n      },\n      {\n        name: 'Almost Due',\n        value: 4,\n        fill: \"orange\",\n      },\n      {\n        name: 'Due Today',\n        value: 3,\n        fill: \"grey\",\n      },\n      {\n        name: 'Overdue',\n        value: 2,\n        fill: \"red\",\n      },\n      {\n        name: 'Aborted',\n        value: 1,\n        fill: \"magenta\",\n      }\n    ]\n  },\n  {\n    userId: 9,\n    data: [\n      {\n        name: 'Completed',\n        value: 3,\n        fill: \"#35ad2a\",\n      },\n      {\n        name: 'Not Due',\n        value: 5,\n        fill: \"blue\",\n      },\n      {\n        name: 'Almost Due',\n        value: 7,\n        fill: \"orange\",\n      },\n      {\n        name: 'Due Today',\n        value: 7,\n        fill: \"grey\",\n      },\n      {\n        name: 'Overdue',\n        value: 5,\n        fill: \"red\",\n      },\n      {\n        name: 'Aborted',\n        value: 3,\n        fill: \"magenta\",\n      }\n    ]\n  },\n  {\n    userId: 10,\n    data: [\n      {\n        name: 'Completed',\n        value: 9,\n        fill: \"#35ad2a\",\n      },\n      {\n        name: 'Not Due',\n        value: 7,\n        fill: \"blue\",\n      },\n      {\n        name: 'Almost Due',\n        value: 5,\n        fill: \"orange\",\n      },\n      {\n        name: 'Due Today',\n        value: 5,\n        fill: \"grey\",\n      },\n      {\n        name: 'Overdue',\n        value: 7,\n        fill: \"red\",\n      },\n      {\n        name: 'Aborted',\n        value: 9,\n        fill: \"magenta\",\n      }\n    ]\n  },\n  {\n    userId: 11,\n    data: [\n      {\n        name: 'Completed',\n        value: 6,\n        fill: \"#35ad2a\",\n      },\n      {\n        name: 'Not Due',\n        value: 6,\n        fill: \"blue\",\n      },\n      {\n        name: 'Almost Due',\n        value: 6,\n        fill: \"orange\",\n      },\n      {\n        name: 'Due Today',\n        value: 2,\n        fill: \"grey\",\n      },\n      {\n        name: 'Overdue',\n        value: 4,\n        fill: \"red\",\n      },\n      {\n        name: 'Aborted',\n        value: 8,\n        fill: \"magenta\",\n      }\n    ]\n  },\n  {\n    userId: 12,\n    data: [\n      {\n        name: 'Completed',\n        value: 1,\n        fill: \"#35ad2a\",\n      },\n      {\n        name: 'Not Due',\n        value: 2,\n        fill: \"blue\",\n      },\n      {\n        name: 'Almost Due',\n        value: 3,\n        fill: \"orange\",\n      },\n      {\n        name: 'Due Today',\n        value: 1,\n        fill: \"grey\",\n      },\n      {\n        name: 'Overdue',\n        value: 2,\n        fill: \"red\",\n      },\n      {\n        name: 'Aborted',\n        value: 3,\n        fill: \"magenta\",\n      }\n    ]\n  }\n]","import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  Tooltip,\n} from \"recharts\";\nimport { ChartData } from \"./ChartData\";\n\nconst TaskCharts = (props) => {\n  \n  const {user_id} = props;\n  const index = ChartData.findIndex(row => row.userId === user_id)\n  console.log(index);\n  \n  if (index >=0 ) {\n    return (\n      <BarChart width={150} height={120} data={ChartData[index].data}>\n        <XAxis dataKey=\"name\" tick={{display:\"none\"}}/>\n        <Tooltip />\n        <Bar dataKey=\"value\" fill=\"fill\"/>\n      </BarChart>\n    );\n  } else {return (<div>No data available</div>)}\n};\n\nexport default TaskCharts;\n","import { Link } from \"react-router-dom\";\nimport {AvatarGenerator} from 'random-avatar-generator';\nimport TaskCharts from \"./TaskCharts\";\nimport \"./team.css\";\nimport * as BsIcons from \"react-icons/bs\";\n\nconst generator = new AvatarGenerator();\n\nexport const TeamColumns = [\n  {\n    Header: \"\",\n    accessor: \"user_id\",\n    Cell: (employee) => (\n      <div id=\"avatar-container\">\n        <img\n          src={generator.generateRandomAvatar(employee.value) || `/images/${employee.value}.png`}\n          alt=\"profile pic\"\n          id=\"avatar\"\n        />\n      </div>\n    ),\n  },\n  {\n    Header: \"Name\",\n    accessor: \"team_member\",\n    Cell: (employee) => (\n      <Link to={`/users/${employee.row.original.user_id}`}>\n        <div id=\"username\">{employee.value}</div>\n      </Link>\n    ),\n  },\n  {\n    Header: \"Message || Review\",\n    accessor: \"\",\n    Cell: (\n      <div id=\"action-button-group\">\n        <BsIcons.BsChat size={30} color=\"grey\" id=\"action-button\"/>\n        <BsIcons.BsPersonCheck size={35} color=\"grey\" id=\"action-button\"/>\n      </div>\n    ),\n  },\n  {\n    Header: \"Task Status\",\n    accessor: \"\",\n    Cell: (status) => (\n      <div id=\"task-charts\">\n        <TaskCharts user_id={status.row.original.user_id} />\n      </div>\n    ),\n  },\n  {\n    Header: \"Health\",\n    accessor: \"\",\n  },\n];\n","import React, {useState, useEffect, useMemo} from 'react';\nimport {useTable, useSortBy, usePagination, useGlobalFilter} from \"react-table\";\nimport {useAuth0} from '@auth0/auth0-react';\nimport { TeamColumns } from \"./TeamColumns\";\nimport UsersApi from \"../../apis/UsersApi\";\nimport './team.css';\n\nconst MyTeam = () => {\n  \n  const columns = useMemo(() => TeamColumns, []);\n  const {user} = useAuth0();\n  const [team, setTeam] = useState([]);\n  const data = useMemo(() => team, [team]);\n\n  // get team members\n  useEffect(() => {\n    async function getTeam() {\n      await UsersApi.get(`/teamMembers/${user.email}`).then((response) => {\n        setTeam(response.data.teamMembers.rows);\n      })\n    }\n    getTeam();\n  }, [user.email]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    // nextPage,\n    // previousPage,\n    // canNextPage,\n    // canPreviousPage,\n    // pageOptions,\n    // gotoPage,\n    // pageCount,\n    // setPageSize,\n    // state,\n    // setGlobalFilter,\n    prepareRow,\n  } = useTable(\n    { columns, data, initialState: { pageSize: 100 } },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n  return (\n    <div id=\"my-team\"> \n      <p id=\"team-page-title\">My Team</p>\n      <table {...getTableProps()} className=\"table table-hover\" id=\"team-table\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted ? (column.isSortedDesc ? \" ↓\" : \" ↑\") : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default MyTeam\n","import React, { useState } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"./hr.css\";\n\nconst EmployeeRequisition = () => {\n  const [hireType, setHireType] = useState();\n  const [department, setDepartment] = useState();\n  const [designation, setDesignation] = useState();\n  const [tenure, setTenure] = useState();\n  const [joiningDate, setJoiningDate] = useState();\n  const [salary, setSalary] = useState();\n  const [assignee, setAssignee] = useState();\n  const [remarks, setRemarks] = useState();\n  const [focused, setFocused] = useState();\n\n  return (\n    <div id=\"emp-req\">\n      <Paper style={{width:'800px', padding:\"20px 0px 20px 65px\"}} elevation=\"5\">\n        <h4 className=\"mb-4\" id=\"emp-req-title\">Employee Requisition</h4>\n        <Form>\n          <div className=\"row\">\n            <div className=\"column col-md-5 mr-5\">\n              <FormGroup>\n                <FormLabel>Hiring Type</FormLabel>\n                <FormControl\n                  as=\"select\"\n                  value=\"hireType\"\n                  onChange={(e) => setHireType(e.target.value)}\n                  required\n                >\n                  <option></option>\n                  <option>New</option>\n                  <option>Replacement</option>\n                  <option>Temp</option>\n                </FormControl>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Department</FormLabel>\n                <FormControl\n                  as=\"select\"\n                  value={department}\n                  onChange={(e) => setDepartment(e.target.value)}\n                  required\n                >\n                  <option></option>\n                  <option>HR</option>\n                  <option>Admin</option>\n                  <option>Sales</option>\n                </FormControl>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Designation</FormLabel>\n                <FormControl\n                  as=\"select\"\n                  value={designation}\n                  onChange={(e) => setDesignation(e.target.value)}\n                  required\n                >\n                  <option></option>\n                  <option>General Manager</option>\n                  <option>Asst Vice President</option>\n                  <option>Senior Consultant</option>\n                </FormControl>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Tenure in months (for Temps only)</FormLabel>\n                <FormControl\n                  type=\"number\"\n                  min=\"0\"\n                  disabled={hireType !== \"Temp\"}\n                  value={tenure}\n                  onChange={(e) => setTenure(e.target.value)}\n                  required\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Assign To</FormLabel>\n                <FormControl\n                  as=\"select\"\n                  value={assignee}\n                  onChange={(e) => setAssignee(e.target.value)}\n                  required\n                />\n              </FormGroup>\n            </div>\n            <div className=\"column col-md-5\">\n              <FormGroup>\n                <FormLabel>Desired Joining Date</FormLabel>\n                <br />\n                <SingleDatePicker\n                  id=\"join_date\"\n                  date={joiningDate}\n                  onDateChange={(date) => setJoiningDate(date)}\n                  focused={focused}\n                  onFocusChange={({ focused }) => setFocused(focused)}\n                  displayFormat={() => \"DD/MM/YYYY\"}\n                  numberOfMonths={1}\n                  appendToBody={true}\n                  required\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Expected Salary per Month</FormLabel>\n                <FormControl\n                  type=\"number\"\n                  min=\"0\"\n                  value={salary}\n                  onChange={(e) => setSalary(e.target.value)}\n                  required\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Remarks (Optional)</FormLabel>\n                <FormControl\n                  as=\"textarea\"\n                  value={remarks}\n                  onChange={(e) => setRemarks(e.target.value)}\n                  rows={4}\n                  maxLength={200}\n                  placeHolder=\"max 200 characters\"\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div id=\"submit-emp-req\"><Button type=\"submit\">Submit</Button></div>\n        </Form>\n      </Paper>\n    </div>\n  );\n};\n\nexport default EmployeeRequisition;\n","import React, { useState } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"./hr.css\";\n \nconst EmployeeExit = () => {\n  const [employeeId, setEmployeeId] = useState();\n  const [exitType, setExitType] = useState();\n  const [resignReason, setResignReason] = useState([]);\n  const [terminationReason, setTerminationReason] = useState([]);\n  const [requestedDate, setRequestedDate] = useState();\n  const [proposedDate, setProposedDate] = useState();\n  const [receivedDate, setReceivedDate] = useState();\n  const [recommendation, setRecommendation] = useState();\n  const [assignee, setAssignee] = useState();\n  const [remarks, setRemarks] = useState();\n  const [relFocused, setRelFocused] = useState();\n  const [propFocused, setPropFocused] = useState();\n  const [receivedFocused, setReceivedFocused] = useState();\n\n  return (\n    <div id=\"emp-exit\">\n      <Paper style={{width:'800px', padding:\"20px 0px 20px 65px\"}} elevation={5}>\n        <h4 className=\"mb-4\" id=\"emp-req-title\">Employee Exit</h4>\n        <Form>\n          <div className=\"row\">\n            <div className=\"column col-md-5 mr-5\">\n              <FormGroup>\n                <FormLabel>Employee</FormLabel>\n                <FormControl\n                  as=\"select\"\n                  value={employeeId}\n                  onChange={(e) => setEmployeeId(e.target.value)}\n                  required\n                >\n                  <option></option>\n                </FormControl>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Intimation Received On</FormLabel>\n                <br />\n                <SingleDatePicker\n                  id=\"received_date\"\n                  date={receivedDate}\n                  onDateChange={(date) => setReceivedDate(date)}\n                  focused={receivedFocused}\n                  onFocusChange={({ focused }) => setReceivedFocused(focused)}\n                  displayFormat={() => \"DD/MM/YYYY\"}\n                  numberOfMonths={1}\n                  appendToBody={true}\n                  required\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Exit Type</FormLabel>\n                <FormControl\n                  as=\"select\"\n                  value={exitType}\n                  onChange={(e) => setExitType(e.target.value)}\n                  required\n                >\n                  <option></option>\n                  <option>Resignation</option>\n                  <option>Termination</option>\n                  <option>Contract Ended</option>\n                  <option>Superannuation</option>\n                </FormControl>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Reason for Resignation</FormLabel>\n                <FormControl\n                  as=\"select\"\n                  value={resignReason}\n                  onChange={(e) => setResignReason(e.target.value)}\n                  required\n                >\n                  <option></option>\n                  <option>Better Role</option>\n                  <option>Better Salary</option>\n                  <option>Manager Issues</option>\n                  <option>Long Working Hours</option>\n                  <option>Cultural Issues</option>\n                  <option>Lack of Motivation</option>\n                </FormControl>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Reason for Termination</FormLabel>\n                <FormControl\n                  as=\"select\"\n                  value={terminationReason}\n                  onChange={(e) => setTerminationReason(e.target.value)}\n                  required\n                >\n                  <option></option>\n                  <option>Performance</option>\n                  <option>Disciplinary</option>\n                  <option>Redundancy</option>\n                </FormControl>\n              </FormGroup>\n            </div>\n            <div className=\"column col-md-5\">\n              <FormGroup style={{float:\"left\"}}>\n                <FormLabel>Requested Exit Date</FormLabel>\n                <br />\n                <SingleDatePicker\n                  id=\"req_rel_date\"\n                  date={requestedDate}\n                  onDateChange={(date) => setRequestedDate(date)}\n                  focused={relFocused}\n                  onFocusChange={({ focused }) => setRelFocused(focused)}\n                  displayFormat={() => \"DD/MM/YYYY\"}\n                  numberOfMonths={1}\n                  appendToBody={true}\n                  required\n                />\n              </FormGroup>\n              <FormGroup style={{float:\"right\"}}>\n                <FormLabel>Proposed Exit Date</FormLabel>\n                <br />\n                <SingleDatePicker\n                  id=\"prop_rel_date\"\n                  date={proposedDate}\n                  onDateChange={(date) => setProposedDate(date)}\n                  focused={propFocused}\n                  onFocusChange={({ focused }) => setPropFocused(focused)}\n                  displayFormat={() => \"DD/MM/YYYY\"}\n                  numberOfMonths={1}\n                  appendToBody={true}\n                  required\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Manager Recommendation</FormLabel>\n                <FormControl\n                  as=\"select\"\n                  value={recommendation}\n                  onChange={(e) => setRecommendation(e.target.value)}\n                  required\n                >\n                  <option></option>\n                  <option>Let Go</option>\n                  <option>Try to Retain</option>\n                  <option>Must Retain</option>\n                  <option>Place on PIP</option>\n                  <option>Not Sure</option>\n                </FormControl>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Remarks (Optional)</FormLabel>\n                <FormControl\n                  as=\"textarea\"\n                  value={remarks}\n                  onChange={(e) => setRemarks(e.target.value)}\n                  rows={4}\n                  maxLength={200}\n                  placeHolder=\"max 200 characters\"\n                />\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Assign To</FormLabel>\n                <FormControl\n                  as=\"select\"\n                  value={assignee}\n                  onChange={(e) => setAssignee(e.target.value)}\n                  required\n                />\n              </FormGroup>\n            </div>\n          </div>\n          <div id=\"submit-emp-req\"><Button type=\"submit\">Submit</Button></div>\n        </Form>\n      </Paper>\n    </div>\n  );\n};\n\nexport default EmployeeExit;\n","import React, { useState} from \"react\";\nimport {\n  Form,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"./hr.css\";\n\nconst EmployeeGrievance = () => {\n  const [employeeId, setEmployeeId] = useState();\n  const [grievanceType, setGrievanceType] = useState([]);\n  const [receivedDate, setReceivedDate] = useState();\n  const [assignee, setAssignee] = useState();\n  const [remarks, setRemarks] = useState();\n  const [focused, setFocused] = useState();\n\n  return (\n    <div id=\"emp-grievance\">\n      <Paper style={{width:'400px', padding:\"20px 30px\"}} elevation=\"5\">\n        <h4 className=\"mb-4\" id=\"emp-req-title\">Employee Grievance</h4>\n        <Form>\n          <FormGroup>\n            <FormLabel>Employee</FormLabel>\n            <FormControl\n              as=\"select\"\n              value={employeeId}\n              onChange={(e) => setEmployeeId(e.target.value)}\n              required\n            >\n              <option></option>\n            </FormControl>\n          </FormGroup>\n          <FormGroup>\n            <FormLabel>Intimation Received On</FormLabel>\n            <br />\n            <SingleDatePicker\n              id=\"received_date\"\n              date={receivedDate}\n              onDateChange={(date) => setReceivedDate(date)}\n              focused={focused}\n              onFocusChange={({ focused }) => setFocused(focused)}\n              displayFormat={() => \"DD/MM/YYYY\"}\n              numberOfMonths={1}\n              appendToBody={true}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <FormLabel>Grievance Type</FormLabel>\n            <FormControl\n              as=\"select\"\n              value={grievanceType}\n              onChange={(e) => setGrievanceType(e.target.value)}\n              required\n            >\n              <option></option>\n              <option>Salary</option>\n              <option>Role</option>\n              <option>Working Hours</option>\n              <option>Cultural Issues</option>\n              <option>Manager</option>\n              <option>Misconduct</option>\n            </FormControl>\n          </FormGroup>\n          <FormGroup>\n            <FormLabel>Remarks</FormLabel>\n            <FormControl\n              as=\"textarea\"\n              value={remarks}\n              onChange={(e) => setRemarks(e.target.value)}\n              rows={4}\n              maxLength={200}\n              placeHolder=\"max 200 characters\"\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <FormLabel>Assign To</FormLabel>\n            <FormControl\n              as=\"select\"\n              value={assignee}\n              onChange={(e) => setAssignee(e.target.value)}\n              required\n            />\n          </FormGroup>\n          <div id=\"submit-emp-req\"><Button type=\"submit\">Submit</Button></div>\n        </Form>\n      </Paper>\n    </div>\n  );\n};\n\nexport default EmployeeGrievance;\n","import React from 'react';\nimport \"./hr.css\"\n\nconst EmployeeOnboarding = () => {\n  return (\n    <div id=\"emp-onboarding\">\n      <h1>Employee Onboarding</h1>\n    </div>\n  )\n}\n\nexport default EmployeeOnboarding\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport \"./hr.css\";\nimport EmployeeRequisition from \"./EmployeeRequisition\";\nimport EmployeeExit from \"./EmployeeExit\";\nimport EmployeeGrievance from \"./EmployeeGrievance\";\nimport EmployeeOnboarding from \"./EmployeeOnboarding\";\n\nconst HrRouter = () => {\n  \n  const {path} = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={path+\"exit\"} exact component={EmployeeExit} />\n      <Route path={path+\"requisition\"} exact component={EmployeeRequisition} />\n      <Route path={path+\"grievance\"} exact component={EmployeeGrievance} />\n      <Route path={path+\"onboarding\"} exact component={EmployeeOnboarding} />\n    </Switch>\n  )\n}\n\nexport default HrRouter\n","import { format } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport {VscChromeClose, VscCheck} from \"react-icons/vsc\";\nimport {BsEye} from 'react-icons/bs';\n\nconst months = [\n  { name: \"JAN\" },\n  { name: \"FEB\" },\n  { name: \"MAR\" },\n  { name: \"APR\" },\n  { name: \"MAY\" },\n  { name: \"JUN\" },\n  { name: \"JUL\" },\n  { name: \"AUG\" },\n  { name: \"SEP\" },\n  { name: \"OCT\" },\n  { name: \"NOV\" },\n  { name: \"DEC\" },\n];\n\nconst quarters = [\n  { name: \"Q1\" },\n  { name: \"Q2\" },\n  { name: \"Q3\" },\n  { name: \"Q4\" },\n];\n\nexport const Columns = [\n  {\n    Header: \"ID\",\n    accessor: \"request_id\",\n  },\n  {\n    Header: \"Description\",\n    accessor: \"description\",\n  },\n  {\n    Header: \"Budgeted\",\n    accessor: \"budgeted\",\n    Cell: (budgeted) => {\n      if (budgeted.value === true) return <div style={{textAlign:\"center\", padding:\"0px\"}}><VscCheck color=\"green\"/></div>;\n      else return <div style={{textAlign:\"center\", padding:\"0px\"}}><VscChromeClose color=\"red\"/></div>;\n    },\n  },\n  {\n    Header: \"Request Date\",\n    accessor: \"created_at\",\n    Cell: ({ value }) => {\n      return format(new Date(value), \"dd/MM/yyyy\");\n    },\n  },\n  {\n    Header: \"Project / Task\",\n    accessor: \"\",\n    Cell: ((request) => {\n      if (request.row.original.project_title) return request.row.original.project_title;\n      if (request.row.original.task_title) return request.row.original.task_title;\n      else return <p style={{color:\"red\", fontWeight:\"bold\", marginBottom:\"0px\"}}>Unassigned</p>\n    })\n  },\n  {\n    Header: \"Initiator\",\n    accessor: \"full_name\",\n  },\n  {\n    Header: \"Expense Head\",\n    accessor: \"expense_head\",\n  },\n  {\n    Header: \"Amount\",\n    accessor: \"amount\",\n    Cell: (request) => {\n      if (request.row.original.frequency === 'Annual' || request.row.original.frequency === 'Exact') return request.value;\n      if (request.row.original.frequency === 'Monthly') return ((12 - months.findIndex((month) => month.name === request.row.original.starting)) * request.value);\n      return ((4 - quarters.findIndex((quarter) => quarter.name === request.row.original.starting)) * request.value)\n    }\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n  },\n  {\n    Header: \"View\",\n    accessor: \"\",\n    Cell: ((request) =>\n      <Link to={`/finance/fundrequests/${request.row.original.request_id}`}><div style={{textAlign:\"center\"}}>\n        <BsEye size={20} color=\"#264653\"/>\n      </div></Link>\n    ),\n  },\n];\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"http://localhost:5000/api/finance\"\n});","import React, { useState, useEffect, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport { GlobalFilter } from \"../common/GlobalFilter\";\nimport { Columns } from \"./FundRequestsColumns\";\nimport FinanceApi from '../../apis/FinanceApi';\nimport \"./finance.css\";\n\nconst FundRequests = () => {\n  const [requests, setRequests] = useState([]);\n  const [, setApproved] = useState([]);\n  const [, setRejected] = useState([]);\n  const [, setPending] = useState([]);\n  const [, setFetchingRequests] = useState(true);\n  const columns = useMemo(() => Columns, []);\n  const data = useMemo(() => requests, [requests]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    state,\n    setGlobalFilter,\n    prepareRow,\n  } = useTable(\n    { columns, data, initialState: { pageSize: 7 } },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  useEffect(() => {\n    async function getRequests () {\n      await FinanceApi.get('/fundRequests').then(res => {\n        setRequests(res.data.fundRequests.rows);\n        setApproved(res.data.fundRequests.rows.filter(row=> row.status==='Approved'))\n        setRejected(res.data.fundRequests.rows.filter(row=> row.status==='Rejected'))\n        setPending(res.data.fundRequests.rows.filter(row=> row.status==='Pending L1'))\n        setFetchingRequests(false);\n      })\n    }\n    getRequests()\n  }, [])\n\n  return (\n    <div id=\"fund-requests\" className=\"justify-content-center\">\n      <div className=\"row\">\n        <p id=\"invoices-counter\" style={{marginRight:\"120px\"}}>\n          Showing {Math.min(pageSize, requests.length)} of {requests.length} Requests\n        </p>\n        <ButtonGroup\n          className=\"mr-5\"\n          style={{ alignItems: \"center\", marginRight:\"10px\", marginBottom:\"0px\", height:\"32px\" }}\n        >\n          <Button variant=\"outline-secondary\">Pending</Button>\n          <Button variant=\"outline-secondary\">Approved</Button>\n          <Button variant=\"outline-secondary\">Rejected</Button>\n          <Button active variant=\"outline-secondary\" id=\"all\">\n            All\n          </Button>\n        </ButtonGroup>\n        <Link to=\"/finance/requestfunds\">\n          <Button variant=\"info\" className=\"ml-5 mr-5\">\n            + New\n          </Button>\n        </Link>\n        <div id=\"invoices-filter\" className=\"ml-5\">\n          <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n        </div>\n        <table {...getTableProps()} className=\"table table-hover mt-2\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted ? (column.isSortedDesc ? \" ↓\" : \" ↑\") : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div className=\"pagination\">\n        <div>\n          Page {pageIndex + 1} of {pageOptions.length}\n        </div>\n        <span style={{ marginLeft: \"220px\" }}>\n          Go to page:{\" \"}\n          <input\n            type=\"number\"\n            min={1}\n            max={Math.ceil(requests.length / pageSize)}\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const pageNumber = e.target.value\n                ? Number(e.target.value) - 1\n                : 0;\n              gotoPage(pageNumber);\n            }}\n            style={{\n              width: \"50px\",\n              marginRight: \"2px\",\n              marginLeft: \"2px\",\n              textAlign: \"center\",\n            }}\n          />\n        </span>\n        <button\n          type=\"button\"\n          className=\"btn btn-sm btn-info\"\n          onClick={() => gotoPage(0)}\n          disabled={!canPreviousPage}\n          style={{\n            height: \"25px\",\n            width: \"30px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          {\"<<\"}\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n          style={{\n            height: \"25px\",\n            width: \"50px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          Prev\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => nextPage()}\n          disabled={!canNextPage}\n          style={{\n            height: \"25px\",\n            width: \"50px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          Next\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n          style={{\n            height: \"25px\",\n            width: \"30px\",\n            marginRight: \"220px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          {\">>\"}\n        </button>\n        <select\n          value={pageSize}\n          onChange={(e) => setPageSize(Number(e.target.value))}\n          style={{ fontSize: \"0.9rem\" }}\n        >\n          {[5, 10, 15].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FundRequests;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"http://localhost:5000/api/departments\"\n});","import React from 'react';\n\nconst ExpenseHeads = (props) => {\n  const {department, onChange, value} = props;\n  switch (department) {\n    case '':\n      return (\n        <select className='form-control' id=\"expense-head\" onChange={onChange} value={value} required>\n          <option></option>\n        </select>\n      );\n    case 'CEO':\n      return (\n        <select className='form-control' id=\"expense-head\" onChange={onChange} value={value} required>\n          <option></option>\n          <option value=\"Eat Pizza\">Eat Pizza</option>\n          <option value=\"Drink Beer\">Drink Beer</option>\n        </select>\n      );\n    case 'Sales':\n      return (\n        <select className='form-control' id=\"expense-head\" onChange={onChange} value={value} required>\n          <option></option>\n          <option value=\"CRM\">CRM</option>\n          <option value=\"Conference Attendance\">Conference Attendance</option>\n          <option value=\"Customer Meeting\">Customer Meeting</option>\n          <option value=\"Training\">Training</option>\n          <option value=\"Others\">Others</option>\n        </select>\n      );\n    case 'Finance':\n    return (\n      <select className='form-control' id=\"expense-head\" onChange={onChange} value={value} required>\n        <option></option>\n        <option value=\"Audit\">Audit</option>\n        <option value=\"Regulatory\">Regulatory</option>\n        <option value=\"Training\">Training</option>\n        <option value=\"ERP\">ERP</option>\n        <option value=\"Others\">Others</option>\n      </select>\n    );\n    case 'Marketing':\n    return (\n      <select className='form-control' id=\"expense-head\" onChange={onChange} value={value} required>\n        <option></option>\n        <option value=\"Collaterals\">Collaterals</option>\n        <option value=\"Conference Attendance\">Conference Attendance</option>\n        <option value=\"Conference Hosting\">Conference Hosting</option>\n        <option value=\"Advertising\">Advertising</option>\n        <option value=\"Agency Fees\">Agency Fees</option>\n        <option value=\"Gifting\">Gifting</option>\n        <option value=\"Training\">Training</option>\n        <option value=\"Others\">Others</option>\n      </select>\n    );\n    case 'Operations':\n    return (\n      <select className='form-control' id=\"expense-head\" onChange={onChange} value={value} required>\n        <option></option>\n        <option value=\"Vehicles\">Vehicles</option>\n        <option value=\"Warehouse R&M\">Warehouse R&M</option>\n        <option value=\"Packaging Material\">Packaging Material</option>\n        <option value=\"Storage Infrastructure\">Storage Infrastructure</option>\n        <option value=\"Handheld Equipment\">Handheld Equipment</option>\n        <option value=\"POL Materials\">POL Materials</option>\n        <option value=\"Fuel\">Fuel</option>\n        <option value=\"AMC\">AMC</option>\n        <option value=\"Audit\">Audit</option>\n        <option value=\"Training\">Training</option>\n        <option value=\"Others\">Others</option>\n      </select>\n    );\n    case 'Engineering':\n    return (\n      <select className='form-control' id=\"expense-head\" onChange={onChange} value={value} required>\n        <option></option>\n        <option value=\"Plant R&M\">Plant R&M</option>\n        <option value=\"Fuel\">Fuel</option>\n        <option value=\"Raw Material\">Raw Material</option>\n        <option value=\"POL Material\">POL Materials</option>\n        <option value=\"Fixed Equipment\">Fixed Equipment</option>\n        <option value=\"Loose Equipment\">Loose Equipment</option>\n        <option value=\"Vehicles\">Vehicles</option>\n        <option value=\"AMC\">AMC</option>\n        <option value=\"Audit\">Audit</option>\n        <option value=\"Training\">Training</option>\n        <option value=\"Others\">Others</option>\n      </select>\n    );\n    case 'Human Resources':\n    return (\n      <select className='form-control' id=\"expense-head\" onChange={onChange} value={value} required>\n        <option></option>\n        <option value=\"HRMS\">HRMS</option>\n        <option value=\"Welfare\">Welfare</option>\n        <option value=\"Training\">Training</option>\n        <option value=\"Audit\">Audit</option>\n        <option value=\"Others\">Others</option>\n      </select>\n    );\n    case 'Administration':\n    return (\n      <select className='form-control' id=\"expense-head\" onChange={onChange} value={value} required>\n        <option></option>\n        <option value=\"Rent\">Rent</option>\n        <option value=\"Electricity\">Electricity</option>\n        <option value=\"Water\">Water</option>\n        <option value=\"Housekeeping\">Housekeeping</option>\n        <option value=\"Vehicle\">Vehicle</option>\n        <option value=\"Fuel\">Fuel</option>\n        <option value=\"Landline\">Landline</option>\n        <option value=\"Mobile\">Mobile</option>\n        <option value=\"Wifi Dongles\">Wifi Dongles</option>\n        <option value=\"Stationery\">Stationery</option>\n        <option value=\"Courier\">Courier</option>\n        <option value=\"Regulatory\">Regulatory</option>\n        <option value=\"Training\">Training</option>\n        <option value=\"Others\">Others</option>\n      </select>\n    );\n    case 'IT':\n    return (\n      <select className='form-control' id=\"expense-head\" onChange={onChange} value={value} required>\n        <option></option>\n        <option value=\"Broadband\">Broadband</option>\n        <option value=\"Cloud\">Cloud</option>\n        <option value=\"Web Hosting\">Web Hosting</option>\n        <option value=\"Applications\">Applications</option>\n        <option value=\"IT Assets\">IT Assets</option>\n        <option value=\"AMC\">AMC</option>\n        <option value=\"Training\">Training</option>\n        <option value=\"Others\">Others</option>\n      </select>\n    );\n    default: return null\n  }\n}\n\nexport default ExpenseHeads\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport {\n  Form,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {FcMoneyTransfer} from 'react-icons/fc';\nimport UsersApi from \"../../apis/UsersApi\";\nimport ProjectsApi from \"../../apis/ProjectsApi\";\nimport TasksApi from \"../../apis/TasksApi\";\nimport DepartmentsApi from \"../../apis/DepartmentsApi\";\nimport FinanceApi from \"../../apis/FinanceApi\";\nimport ExpenseHeads from \"./ExpenseHeads\";\n\nconst RequestFunds = () => {\n  const { user } = useAuth0();\n  const history = useHistory();\n  const [userId, setUserId] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [projectId, setProjectId] = useState();\n  const [tasks, setTasks] = useState([]);\n  const [taskId, setTaskId] = useState();\n  const [departments, setDepartments] = useState([]);\n  const [departmentName, setDepartmentName] = useState(\"\");\n  const [expenseHead, setExpenseHead] = useState();\n  const [budgeted, setBudgeted] = useState(\"true\");\n  const [assignTo, setAssignTo] = useState();\n  const [frequency, setFrequency] = useState();\n  const [amount, setAmount] = useState();\n  const [starting, setStarting] = useState(null);\n  const [date, setDate] = useState();\n  const [description, setDescription] = useState();\n  const [fetchingUser, setFetchingUser] = useState(true);\n  const [fetchingProjects, setFetchingProjects] = useState(true);\n  const [fetchingTasks, setFetchingTasks] = useState(true);\n  const [fetchingDepartments, setFetchingDepartments] = useState(true);\n\n  const months = [\n    { name: \"JAN\" },\n    { name: \"FEB\" },\n    { name: \"MAR\" },\n    { name: \"APR\" },\n    { name: \"MAY\" },\n    { name: \"JUN\" },\n    { name: \"JUL\" },\n    { name: \"AUG\" },\n    { name: \"SEP\" },\n    { name: \"OCT\" },\n    { name: \"NOV\" },\n    { name: \"DEC\" },\n  ];\n\n  const quarters = [\n    { name: \"Q1\" },\n    { name: \"Q2\" },\n    { name: \"Q3\" },\n    { name: \"Q4\" },\n  ];\n\n  // get user_id\n  useEffect(() => {\n    async function getUserId() {\n      await UsersApi.get(`/userId/${user.email}`).then((response) => {\n        setUserId(response.data.userId.rows[0]);\n        setFetchingUser(false);\n      });\n    }\n    getUserId();\n  }, [user.email]);\n\n  // get projects by user\n  useEffect(() => {\n    async function getProjects() {\n      await ProjectsApi.get(`/user/${user.email}`).then((response) => {\n        setProjects(response.data.projectsByUser.rows);\n        setFetchingProjects(false);\n      });\n    }\n    getProjects();\n  }, [user.email]);\n\n  // get tasks by user\n  useEffect(() => {\n    async function getTasks() {\n      await TasksApi.get(`/user/${user.email}`).then((response) => {\n        setTasks(response.data.tasksByUser.rows);\n        setFetchingTasks(false);\n      });\n    }\n    getTasks();\n  }, [user.email]);\n\n  // get departments\n  useEffect(() => {\n    async function getDepartments() {\n      await DepartmentsApi.get(\"/\").then((response) => {\n        setDepartments(response.data.allDepartments.rows);\n        setFetchingDepartments(false);\n      });\n    }\n    getDepartments();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await FinanceApi.post(\"/fundRequest\", {\n        budgeted: budgeted,\n        project_id: projectId,\n        description: description,\n        initiator: userId.user_id,\n        expense_head: expenseHead,\n        assign_to: assignTo,\n        task_id: taskId,\n        frequency: frequency,\n        amount: amount,\n        starting: starting,\n        department: departments.filter(\n          (row) => row.department_name === departmentName\n        )[0].department_id,\n        required_by: date,\n        status: 'Pending L1',\n      }).then(res => {\n        if(res.status === 200) {\n          alert(\"Requisition Created Successfully\")      \n        } else {\n          alert(\"Could not create requisition\")\n        }\n      });\n    } catch (error) {if (error) {\n      alert(\"Could not create requisition\")\n    }}\n    history.push(\"/finance/fundrequests\");\n  };\n\n  const allFetched =\n    !fetchingUser &&\n    !fetchingProjects &&\n    !fetchingTasks &&\n    !fetchingDepartments;\n\n  if (allFetched) {\n    return (\n      <div id=\"request-funds\" className=\"container\">\n        <div className=\"row\">\n          <FcMoneyTransfer size={40}/>\n          <h4 id=\"req-funds-title\">Funds Requisition</h4>\n        </div>\n        <Form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <FormGroup className=\"mr-5\">\n              <FormLabel>Role</FormLabel>\n              <select\n                id=\"department\"\n                value={departmentName}\n                onChange={(e) => setDepartmentName(e.target.value)}\n                className=\"form-control\"\n                required\n              >\n                <option></option>\n                {departments.map((department) => (\n                  <option\n                    value={department.department_name}\n                    key={department.department_id}\n                  >\n                    {department.department_name}\n                  </option>\n                ))}\n              </select>\n            </FormGroup>\n            <FormGroup className=\"mr-5\">\n              <FormLabel>Expense Head</FormLabel>\n              <ExpenseHeads\n                department={departmentName}\n                value={expenseHead}\n                onChange={(e) => setExpenseHead(e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup id=\"assign-to\" className=\"mr-5\">\n              <FormLabel>Assign To</FormLabel>\n              <FormControl\n                as=\"select\"\n                value={assignTo}\n                onChange={(e) => setAssignTo(e.target.value)}\n                required\n              >\n                <option></option>\n                <option value=\"Project\">Project</option>\n                <option value=\"Task\">Task</option>\n                <option value=\"NA\">NA</option>\n              </FormControl>\n            </FormGroup>\n            <FormGroup\n              style={{ display: assignTo !== \"Project\" ? \"none\" : \"block\" }}\n              id=\"assign-toggle\"\n            >\n              <FormLabel>Select Project</FormLabel>\n              <FormControl\n                as=\"select\"\n                value={projectId}\n                onChange={(e) => setProjectId(e.target.value)}\n                required={assignTo === \"Project\"}\n              >\n                <option></option>\n                {projects.map((project) => (\n                  <option value={project.project_id} key={project.project_id}>\n                    {project.project_title}\n                  </option>\n                ))}\n              </FormControl>\n            </FormGroup>\n            <FormGroup\n              style={{ display: assignTo !== \"Task\" ? \"none\" : \"block\" }}\n              id=\"assign-toggle\"\n            >\n              <FormLabel>Select Task</FormLabel>\n              <FormControl\n                as=\"select\"\n                value={taskId}\n                onChange={(e) => setTaskId(e.target.value)}\n                required={assignTo === \"Task\"}\n              >\n                <option></option>\n                {tasks.map((task) => (\n                  <option value={task.task_id} key={task.task_id}>\n                    {task.task_title}\n                  </option>\n                ))}\n              </FormControl>\n            </FormGroup>\n          </div>\n          <div className=\"row mt-2\">\n            <FormGroup>\n              <FormLabel className=\"mb-3\">Budgeted ?</FormLabel>\n              <div className=\"input-group\" id=\"budgeted\">\n                <span className=\"input-group-prepend mr-3\">Yes</span>\n                <input\n                  name=\"expenseType\"\n                  value={true}\n                  type=\"radio\"\n                  className=\"budgeted-radio\"\n                  id=\"true\"\n                  checked={budgeted === \"true\"}\n                  onClick={(e) => setBudgeted(e.target.value)}\n                />\n                <span className=\"input-group-prepend ml-4 mr-3\">No</span>\n                <input\n                  name=\"expenseType\"\n                  value={false}\n                  type=\"radio\"\n                  className=\"budgeted-radio\"\n                  id=\"false\"\n                  checked={budgeted === \"false\"}\n                  onClick={(e) => setBudgeted(e.target.value)}\n                />\n              </div>\n            </FormGroup>\n            <FormGroup id=\"funds-frequency\">\n              <FormLabel>Frequency</FormLabel>\n              <FormControl\n                as=\"select\"\n                value={frequency}\n                onChange={(e) => {\n                  setFrequency(e.target.value);\n                  setStarting(\"\");\n                }}\n                required\n              >\n                <option></option>\n                <option value=\"Monthly\">Monthly</option>\n                <option value=\"Quarterly\">Quarterly</option>\n                <option value=\"Annual\">Annual</option>\n                <option value=\"Exact\">Exact</option>\n              </FormControl>\n            </FormGroup>\n            <FormGroup\n              id=\"funds-frequency\"\n              style={{\n                display: !frequency ? \"none\" : \"block\",\n              }}\n            >\n              <FormLabel>Amount</FormLabel>\n              <FormControl\n                type=\"number\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                min={0}\n                style={{ textAlign: \"center\" }}\n                required\n              />\n            </FormGroup>\n            <div className=\"row\">\n              <FormGroup\n                id=\"funds-frequency\"\n                style={{\n                  display: frequency !== \"Exact\" ? \"none\" : \"block\",\n                }}\n              >\n                <FormLabel className=\"ml-3\">Required By</FormLabel>\n                <DatePicker\n                  selected={date}\n                  onChange={(date) => setDate(date)}\n                  dateFormat=\"dd/MM/yyyy\"\n                  required={frequency === \"Exact\"}\n                  value={date}\n                />\n              </FormGroup>\n            </div>\n            <FormGroup\n              id=\"funds-starting\"\n              style={{\n                display:\n                  !frequency || frequency === \"Annual\" || frequency === \"Exact\"\n                    ? \"none\"\n                    : \"block\",\n              }}\n            >\n              <FormLabel>Starting From</FormLabel>\n              <FormControl\n                as=\"select\"\n                value={starting}\n                onChange={(e) => setStarting(e.target.value)}\n                required={frequency === \"Monthly\" || frequency === 'Quarterly'}\n              >\n                <option>{null}</option>\n                {frequency === \"Monthly\"\n                  ? months.map((month) => <option>{month.name}</option>)\n                  : frequency === \"Quarterly\"\n                  ? quarters.map((quarter) => <option>{quarter.name}</option>)\n                  : null}\n              </FormControl>\n            </FormGroup>\n            <FormGroup\n              style={{\n                display: !frequency || frequency === \"Exact\" ? \"none\" : \"block\",\n              }}\n              id=\"frequent-amount\"\n            >\n              <FormLabel className=\"mb-3 ml-3\">\n                <u>Total</u>\n              </FormLabel>\n              <br />\n              <h6>\n                {frequency === \"Monthly\" && starting\n                  ? (12 -\n                      months.findIndex((month) => month.name === starting)) *\n                    amount\n                  : frequency === \"Quarterly\" && starting\n                  ? (4 -\n                      quarters.findIndex(\n                        (quarter) => quarter.name === starting\n                      )) *\n                    amount\n                  : frequency === \"Annual\"\n                  ? amount\n                  : null}\n              </h6>\n            </FormGroup>\n          </div>\n          <div className=\"row\">\n            <FormGroup id=\"req-description\">\n              <FormLabel>Requirement Description</FormLabel>\n              <FormControl\n                as=\"textarea\"\n                placeholder=\"not exceeding 100 characters ...\"\n                rows={3}\n                maxLength={100}\n                required\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              />\n            </FormGroup>\n            <div\n              style={{\n                textAlign: \"center\",\n                marginTop: \"60px\",\n                marginLeft: \"40px\",\n              }}\n            >\n              <Button variant=\"info\" type=\"submit\" style={{ width: \"150px\" }}>\n                Create Requisition\n              </Button>\n            </div>\n          </div>\n        </Form>\n      </div>\n    );\n  } else return <div id=\"fund-requests\">Fetching Data ...</div>;\n};\n\nexport default RequestFunds;\n","import React, { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Bar, BarChart, Tooltip, XAxis } from \"recharts\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { FaThumbsUp, FaThumbsDown, FaCommentAlt } from \"react-icons/fa\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport { VscChromeClose, VscCheck } from \"react-icons/vsc\";\nimport FinanceApi from \"../../apis/FinanceApi\";\nimport \"./finance.css\";\n\nconst EditFundsRequest = () => {\n  const { id } = useParams();\n  const { user } = useAuth0();\n  const history = useHistory();\n  const generator = new AvatarGenerator();\n  const [request, setRequest] = useState([]);\n  // const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState();\n  const [fetchingRequest, setFetchingRequest] = useState(true);\n\n  const months = [\n    { short: \"JAN\", long: \"January\", tiny: \"J\" },\n    { short: \"FEB\", long: \"February\", tiny: \"F\" },\n    { short: \"MAR\", long: \"March\", tiny: \"M\" },\n    { short: \"APR\", long: \"April\", tiny: \"A\" },\n    { short: \"MAY\", long: \"May\", tiny: \"M\" },\n    { short: \"JUN\", long: \"June\", tiny: \"J\" },\n    { short: \"JUL\", long: \"July\", tiny: \"J\" },\n    { short: \"AUG\", long: \"August\", tiny: \"A\" },\n    { short: \"SEP\", long: \"September\", tiny: \"S\" },\n    { short: \"OCT\", long: \"October\", tiny: \"O\" },\n    { short: \"NOV\", long: \"November\", tiny: \"N\" },\n    { short: \"DEC\", long: \"December\", tiny: \"D\" },\n  ];\n\n  const quarters = [\n    { name: \"Q1\" },\n    { name: \"Q2\" },\n    { name: \"Q3\" },\n    { name: \"Q4\" },\n  ];\n\n  useEffect(() => {\n    async function getRequest() {\n      await FinanceApi.get(`/fundRequests/${id}`).then((res) => {\n        setRequest(res.data.fundRequestById.rows[0]);\n        setFetchingRequest(false);\n      });\n    }\n    getRequest();\n  }, [id]);\n\n  function totalAmount(frequency, starting, amount) {\n    if (frequency === \"Monthly\") {\n      return (\n        (12 - months.findIndex((month) => month.short === starting)) * amount\n      );\n    }\n    if (frequency === \"Quarterly\") {\n      return (\n        (4 - quarters.findIndex((quarter) => quarter.name === starting)) *\n        amount\n      );\n    } else return amount;\n  }\n\n  const chartData = [\n    {\n      month: \"J\",\n      spend: 0,\n    },\n    {\n      month: \"F\",\n      spend: 0,\n    },\n    {\n      month: \"M\",\n      spend: 0,\n    },\n    {\n      month: \"A\",\n      spend: 700,\n    },\n    {\n      month: \"M\",\n      spend: 700,\n    },\n    {\n      month: \"J\",\n      spend: 700,\n    },\n    {\n      month: \"J\",\n      spend: 700,\n    },\n    {\n      month: \"A\",\n      spend: 700,\n    },\n    {\n      month: \"S\",\n      spend: 700,\n    },\n    {\n      month: \"O\",\n      spend: 700,\n    },\n    {\n      month: \"N\",\n      spend: 700,\n    },\n    {\n      month: \"D\",\n      spend: 700,\n    },\n  ];\n\n  const handleApprove = async (e) => {\n    e.preventDefault();\n    try {\n      await FinanceApi.patch(`fundRequests/${id}`, {\n        status: \"Approved\",\n        comments: {\n          user: user.nickname,\n          content: comment,\n        },\n      });\n    } catch (error) {}\n    history.push(\"/finance/fundrequests\");\n    alert(\"Updated Successfully\");\n  };\n\n  const handleReject = async (e) => {\n    if (!comment) {\n      alert(\"Please add a comment before submitting!\");\n    } else {\n      e.preventDefault();\n      try {\n        await FinanceApi.patch(`fundRequests/${id}`, {\n          status: \"Rejected\",\n          comments: {\n            user: user.nickname,\n            content: comment,\n          },\n        });\n      } catch (error) {}\n      history.push(\"/finance/fundrequests\");\n      alert(\"Updated Successfully\");\n    }\n  };\n\n  const handleComment = async (e) => {\n    e.preventDefault();\n    try {\n      await FinanceApi.patch(`fundRequests/${id}`, {\n        status: request.status,\n        comments: {\n          user: user.nickname,\n          content: comment,\n        },\n      });\n    } catch (error) {}\n    history.push(\"/finance/fundrequests\");\n    alert(\"Updated Successfully\");\n  };\n\n  const allFetched = !fetchingRequest;\n\n  if (allFetched) {\n    return (\n      // Main container\n      <div id=\"edit-fund-req\">\n        {/* First horizontal container */}\n        <div className=\"row\" style={{ marginLeft: \"20px\" }}>\n          {/* First section of first horizontal */}\n          <div className=\"column mr-2\" id=\"efr-left\">\n            <p id=\"efr-small-title\">Request ID</p>\n            <p id=\"efr-output\">{request.request_id}</p>\n            <hr id=\"hr\" />\n            <p id=\"efr-small-title\">Initiated By</p>\n            <img\n              id=\"initiator-avatar\"\n              src={generator.generateRandomAvatar(request.initiator)}\n              alt=\"profile-pic\"\n            />\n            <p id=\"efr-output\">{request.initiator_name}</p>\n            <hr id=\"hr\" />\n            <p id=\"efr-small-title\">Created On</p>\n            <p id=\"efr-output\">\n              {format(new Date(request.created_at), \"do MMM yyyy\")}\n            </p>\n            <hr id=\"hr\" />\n            <p id=\"efr-small-title\">Status</p>\n            <p id=\"efr-output\">{request.status}</p>\n            <hr id=\"hr\" />\n          </div>\n          {/* Second section of first horizontal */}\n          <div className=\"column mr-2\" id=\"efr-middle\">\n            <p id=\"efr-small-title\">Description</p>\n            <p id=\"efr-output\">{request.description}</p>\n            <hr id=\"hr\" />\n            {request.project_id ? (\n              <>\n                <p id=\"efr-small-title\">Project Title</p>\n                <p id=\"efr-output\">{request.project_title}</p>\n                <hr id=\"hr\" />\n              </>\n            ) : request.task_id ? (\n              <>\n                <p id=\"efr-small-title\">Task Title</p>\n                <p id=\"efr-output\">{request.task_title}</p>\n                <hr id=\"hr\" />\n              </>\n            ) : (\n              <>\n                <p id=\"efr-small-title\">Project / Task</p>\n                <p id=\"efr-output\">This requisition is unassigned</p>\n                <hr id=\"hr\" />\n              </>\n            )}\n            <p id=\"efr-small-title\">Department</p>\n            <p id=\"efr-output\">{request.department_name}</p>\n            <hr id=\"hr\" />\n            <p id=\"efr-small-title\">Expense Head</p>\n            <p id=\"efr-output\">{request.expense_head}</p>\n            <hr id=\"hr\" />\n            <p id=\"efr-small-title\">Budgeted</p>\n            {request.budgeted === true ? (\n              <VscCheck size={35} color=\"#2A9D8F\" />\n            ) : (\n              <VscChromeClose size={35} color=\"#E76F51\" />\n            )}\n            <hr id=\"hr\" />\n          </div>\n          {/* Third section of first horizontal */}\n          <div className=\"column mr-5\" id=\"efr-right\">\n            <p id=\"efr-small-title\">Amount</p>\n            <p id=\"efr-output\">\n              US$ {request.amount}{\" \"}\n              {request.frequency === \"Monthly\"\n                ? `every month starting ${\n                    months.filter((row) => row.short === request.starting)[0]\n                      .long\n                  }`\n                : request.frequency === \"Quarterly\"\n                ? `every quarter starting ${request.starting}`\n                : request.frequency === \"Exact\"\n                ? `on or before ${format(\n                    new Date(request.required_by),\n                    \"do MMM yyyy\"\n                  )}`\n                : `this year`}\n            </p>\n            <hr id=\"hr\" />\n            <div\n              style={{\n                display:\n                  request.frequency === \"Annual\" ||\n                  request.frequency === \"Exact\"\n                    ? \"none\"\n                    : \"flex\",\n              }}\n            >\n              <div className=\"mr-5\" style={{ width: \"200px\" }}>\n                <p id=\"efr-small-title\">Total This Year</p>\n                <p id=\"efr-output\">\n                  US${\" \"}\n                  {totalAmount(\n                    request.frequency,\n                    request.starting,\n                    request.amount\n                  )}\n                </p>\n              </div>\n              <BarChart\n                data={chartData}\n                width={350}\n                height={100}\n                margin={{ right: 30 }}\n              >\n                <XAxis dataKey=\"month\" tickLine={false} />\n                <Bar dataKey=\"spend\" fill=\"#F4A261\" />\n                <Tooltip />\n              </BarChart>\n            </div>\n            <hr\n              id=\"hr\"\n              style={{\n                display:\n                  request.frequency === \"Annual\" ||\n                  request.frequency === \"Exact\"\n                    ? \"none\"\n                    : \"flex\",\n              }}\n            />\n            <Form>\n              <div style={{ width: \"490px\" }}>\n                <p id=\"efr-small-title\">\n                  Add a comment <em>(mandatory if rejecting)</em>\n                </p>\n                <FormControl\n                  as=\"textarea\"\n                  maxLength={150}\n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                  rows={3}\n                  placeholder=\"max 150 characters\"\n                  style={{ backgroundColor: \"#FCF8EC\" }}\n                  required\n                />\n              </div>\n              <div className=\"row ml-0 mt-3\">\n                <div\n                  className=\"mr-4\"\n                  style={{\n                    display: request.status === \"Approved\" ? \"none\" : \"block\",\n                  }}\n                >\n                  <Button\n                    type=\"submit\"\n                    variant=\"success\"\n                    onClick={handleApprove}\n                  >\n                    <FaThumbsUp size={20} />\n                  </Button>\n                </div>\n                <div\n                  className=\"mr-4\"\n                  style={{\n                    display: request.status === \"Rejected\" ? \"none\" : \"block\",\n                  }}\n                >\n                  <Button variant=\"danger\" type=\"submit\" onClick={handleReject}>\n                    <FaThumbsDown size={20} />\n                  </Button>\n                </div>\n                <div>\n                  <Button\n                    type=\"submit\"\n                    disabled={!comment}\n                    onClick={handleComment}\n                  >\n                    <FaCommentAlt size={20}/>\n                  </Button>\n                </div>\n              </div>\n            </Form>\n          </div>\n        </div>\n        <div className=\"row ml-4 mt-3\">\n          <div\n            style={{\n              width: \"480px\",\n              padding: \"20px\",\n              border: \"1px solid #BDD6E0\",\n              borderRadius: \"10px\",\n            }}\n            className=\"column\"\n          >\n            <h5 style={{ fontWeight: \"bold\" }}>Comments</h5>\n            <hr id=\"hr\" />\n            {request.comments &&\n              request.comments.map((obj) => (\n                <div\n                  className=\"mb-2\"\n                  style={{\n                    textAlign: obj.user === user.nickname ? \"right\" : \"left\",\n                  }}\n                >\n                  <p\n                    style={{\n                      color: \"brown\",\n                      fontWeight: \"bold\",\n                      margin: \"0px\",\n                    }}\n                  >\n                    {obj.user}:{\" \"}\n                  </p>\n                  <p style={{ margin: \"0px\" }}>{obj.content}</p>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  } else\n    return (\n      <div id=\"edit-fund-req\">\n        <h5>Fetching Data...</h5>\n      </div>\n    );\n};\n\nexport default EditFundsRequest;\n","import React from 'react'\n\nconst SendPricingForm = () => {\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport default SendPricingForm\n","import React from \"react\";\nimport \"./finance.css\"\n\nconst Ageing = (props) => {\n  const { dueDate } = props;\n  const today = Date.UTC(\n    new Date().getFullYear(),\n    new Date().getMonth(),\n    new Date().getDate()\n  );\n  const subjectDate = Date.UTC(\n    new Date(dueDate).getFullYear(),\n    new Date(dueDate).getMonth(),\n    new Date(dueDate).getDate()\n  );\n  \n  const dateDiff = (today - subjectDate)/(1000*60*60*24)\n\n  return dateDiff < 0 ? (\n    <p id=\"not-due\">Not Due</p>\n  ) : dateDiff > 0 && dateDiff <=15 ? (\n    <p id=\"days0-15\">0-15 days</p>\n  ) : dateDiff > 15 && dateDiff <=30 ? (\n    <p id=\"days15-30\">15-30 days</p>\n  ) : dateDiff > 30 && dateDiff <=60 ? (\n    <p id=\"days30-60\">30-60 days</p>\n  ) : dateDiff > 60 && dateDiff <=90 ? (\n    <p id=\"days60-90\">60-90 days</p>\n  ) : (\n    <p id=\"ageing-danger\">90+ days</p>\n  );\n};\n\n\nexport default Ageing;\n","import { format } from \"date-fns\";\nimport {Link} from \"react-router-dom\";\nimport Ageing from \"./Ageing\";\nimport * as RiIcons from \"react-icons/ri\";\n\nexport const Columns = [\n  {\n    Header: \"Customer\",\n    accessor: \"customer_name\",\n  },\n  {\n    Header: \"Update\",\n    accessor: \"\",\n    Cell: ((invoice) =>\n      <Link to={`/finance/receivables/${invoice.row.original.invoice_number}`}><div style={{textAlign:\"center\"}}>\n        <RiIcons.RiMoneyDollarCircleLine size={30} color=\"#2A9D8F\" />\n      </div></Link>\n    ),\n  },\n  {\n    Header: \"Division\",\n    accessor: \"division_name\",\n  },\n  {\n    Header: \"Invoice No.\",\n    accessor: \"invoice_number\",\n  },\n  {\n    Header: \"Invoice Date\",\n    accessor: \"invoice_date\",\n    Cell: ({ value }) => {\n      return format(new Date(value), \"do MMM yyyy\");\n    },\n  },\n  {\n    Header: \"Due Date\",\n    accessor: \"due_date\",\n    Cell: ({ value }) => {\n      return format(new Date(value), \"do MMM yyyy\");\n    },\n  },\n  {\n    Header: \"Billed\",\n    accessor: \"invoice_amount\",\n  },\n  {\n    Header: \"Received\",\n    accessor: \"amount_received\",\n  },\n  {\n    Header: \"Outstanding\",\n    accessor: \"outstanding\",\n  },\n  {\n    Header: \"Ageing\",\n    accessor: \"\",\n    Cell: (status) => (\n      <div style={{ textAlign: \"center\" }}>\n        <Ageing dueDate={status.row.original.due_date} />\n      </div>\n    ),\n  },\n];\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport FinanceApi from \"../../apis/FinanceApi\";\nimport { GlobalFilter } from \"../common/GlobalFilter\";\nimport { Columns } from \"./InvoicesColumns\";\nimport \"./finance.css\";\n\nconst Invoices = () => {\n  const [invoices, setInvoices] = useState([]);\n  const columns = useMemo(() => Columns, []);\n  const data = useMemo(() => invoices, [invoices]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    state,\n    setGlobalFilter,\n    prepareRow,\n  } = useTable(\n    { columns, data, initialState: { pageSize: 7 } },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  useEffect(() => {\n    async function getInvoices() {\n      await FinanceApi.get(\"/invoices\").then((response) => {\n        setInvoices(response.data.invoices.rows);\n      });\n    }\n    getInvoices();\n  }, []);\n\n  return (\n    <div id=\"fin-collect\">\n      <div id=\"invoices-filter\" className=\"mb-3\">\n        <GlobalFilter\n          filter={globalFilter}\n          setFilter={setGlobalFilter}\n        />\n      </div>\n      <p id=\"invoices-counter\">\n        Showing {pageSize} of {invoices.length} invoices ...\n      </p>\n      <table {...getTableProps()} className=\"table table-hover\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted ? (column.isSortedDesc ? \" ↓\" : \" ↑\") : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div className=\"pagination\">\n        <div>\n          Page {pageIndex + 1} of {pageOptions.length}\n        </div>\n        <span style={{ marginLeft: \"220px\" }}>\n          Go to page:{\" \"}\n          <input\n            type=\"number\"\n            min={1}\n            max={Math.ceil(invoices.length / pageSize)}\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const pageNumber = e.target.value\n                ? Number(e.target.value) - 1\n                : 0;\n              gotoPage(pageNumber);\n            }}\n            style={{\n              width: \"50px\",\n              marginRight: \"2px\",\n              marginLeft: \"2px\",\n              textAlign: \"center\",\n            }}\n          />\n        </span>\n        <button\n          type=\"button\"\n          className=\"btn btn-sm btn-info\"\n          onClick={() => gotoPage(0)}\n          disabled={!canPreviousPage}\n          style={{\n            height: \"25px\",\n            width: \"30px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          {\"<<\"}\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n          style={{\n            height: \"25px\",\n            width: \"50px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          Prev\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => nextPage()}\n          disabled={!canNextPage}\n          style={{\n            height: \"25px\",\n            width: \"50px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          Next\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n          style={{\n            height: \"25px\",\n            width: \"30px\",\n            marginRight: \"220px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          {\">>\"}\n        </button>\n        <select\n          value={pageSize}\n          onChange={(e) => setPageSize(Number(e.target.value))}\n          style={{ fontSize: \"0.9rem\" }}\n        >\n          {[5, 10, 15].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default Invoices;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport FinanceApi from \"../../apis/FinanceApi\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"./finance.css\";\n\nconst UpdateCollection = () => {\n  const [invoice, setInvoice] = useState([]);\n  const [newReceived, setNewReceived] = useState();\n  const [loading, setLoading] = useState(true);\n  const { id } = useParams();\n  let history = useHistory();\n\n  function ageing(dueDate) {\n    const today = Date.UTC(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate()\n    );\n    const subjectDate = Date.UTC(\n      new Date(dueDate).getFullYear(),\n      new Date(dueDate).getMonth(),\n      new Date(dueDate).getDate()\n    );\n    const overdueDays = (today - subjectDate) / (1000 * 60 * 60 * 24);\n    if (overdueDays > 0 ) {return overdueDays} else {return \"Not Due\"};\n  }\n\n  useEffect(() => {\n    async function getInvoice() {\n      await FinanceApi.get(`invoices/${id}`).then(\n        (response) => {\n          setInvoice(response.data.invoiceById.rows[0]);\n          setLoading(false);\n        }\n      );\n    }\n    getInvoice();\n  }, [id]);\n\n  const handleSubmit = async (e, data) => {\n    e.preventDefault();\n    try {\n      await FinanceApi.patch(`invoices/${id}`, {\n        amount_received: newReceived,\n      });\n    } catch (error) {}\n    history.push(\"/finance/receivables\");\n    alert(\"Updated Successfully\");\n  };\n\n  return (\n    <div id=\"collect-update\">\n      <h4 id=\"invoice-number\">Invoice No. {invoice.invoice_number}</h4>\n      <Form>\n        <Paper elevation={3}>\n          <table className=\"table\">\n            <tr>\n              <td id=\"collect-left-col\">Invoice Date</td>\n              <td>\n                {!loading\n                  ? format(new Date(invoice.invoice_date), \"do MMM yyyy\")\n                  : \"Loading\"}\n              </td>\n            </tr>\n            <tr>\n              <td id=\"collect-left-col\">Due Date</td>\n              <td>\n                {!loading\n                  ? format(new Date(invoice.due_date), \"do MMM yyyy\")\n                  : \"Loading\"}\n              </td>\n            </tr>\n            <tr>\n              <td id=\"collect-left-col\">Customer</td>\n              <td>{invoice.customer_name}</td>\n            </tr>\n            <tr>\n              <td id=\"collect-left-col\">Division</td>\n              <td>{invoice.division_name}</td>\n            </tr>\n            <tr>\n              <td id=\"collect-left-col\">Billed Amount</td>\n              <td>$ {invoice.invoice_amount}</td>\n            </tr>\n            <tr>\n              <td id=\"collect-left-col\">Received Till Date</td>\n              <td>$ {invoice.amount_received}</td>\n            </tr>\n            <tr>\n              <td id=\"collect-left-col\">Outstanding</td>\n              <td>$ {invoice.invoice_amount - invoice.amount_received}</td>\n            </tr>\n            <tr>\n              <td id=\"collect-left-col\">Days Outstanding</td>\n              <td>{ageing(invoice.due_date)}</td>\n            </tr>\n            <tr>\n              <td id=\"collect-left-col\">New $ Received</td>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  value={newReceived}\n                  onChange={(e) => setNewReceived(e.target.value)}\n                  required\n                />\n              </td>\n            </tr>\n          </table>\n        </Paper>\n        <div style={{ textAlign: \"center\" }}>\n          <Button\n            type=\"submit\"\n            variant=\"info\"\n            style={{ widht: \"75px\", marginRight:\"20px\" }}\n            onClick={handleSubmit}\n            disabled={!newReceived}\n          >\n            Update\n          </Button>\n          <Link to=\"/finance/receivables\"><Button variant=\"warning\" style={{ width: \"75px\" }}>\n            Back\n          </Button></Link>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default UpdateCollection;\n","import React from 'react';\nimport './finance.css';\n\nconst Budgets = () => {\n\n  return (\n    <div id=\"budgets\">\n      <h5>Budgets</h5>\n    </div>\n  )\n}\n\nexport default Budgets;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport \"./finance.css\";\nimport FundRequests from \"./FundRequests\";\nimport RequestFunds from \"./RequestFunds\";\nimport EditFundsRequest from \"./EditFundsRequest\";\nimport SendPricingForm from \"./SendPricingForm\";\nimport Invoices from \"./Invoices\";\nimport UpdateCollection from \"./UpdateCollection\";\nimport Budgets from './Budgets';  \n\nconst FinanceRouter = () => {\n  \n  const {path} = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={path+\"fundrequests\"} exact component={FundRequests} />\n      <Route path={path+\"requestfunds\"} exact component={RequestFunds} />\n      <Route path={path+\"sendpricingform\"} exact component={SendPricingForm} />\n      <Route path={path+\"receivables\"} exact component={Invoices} />\n      <Route path={path+\"receivables/:id\"} exact component={UpdateCollection} />\n      <Route path={path+\"fundrequests/:id\"} exact component={EditFundsRequest} />\n      <Route path={path+\"budgets\"} exact component={Budgets} />\n    </Switch>\n  )\n}\n\nexport default FinanceRouter\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"http://localhost:5000/api/customers\"\n});","import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  Tooltip,\n} from \"recharts\";\n\nconst SummaryChart = (props) => {\n  \n  const {customerId} = props;\n\n  function chartData (customerId) {\n    return  {\n      'data': [\n        {\n          'name': \"Target\",\n          'value': parseInt(customerId.row.original.target),\n          'fill': \"#E76F51\",  \n        },\n        {\n          'name': \"Actual\",\n          'value': parseInt(customerId.row.original.actual),\n          'fill': \"#E9C46A\",  \n        },\n        {\n          'name': \"Collected\",\n          'value': parseInt(customerId.row.original.collected),\n          'fill': \"#2A9D8F\",  \n        },\n      ]\n    }\n  }\n\n  return (\n    <BarChart width={170} height={100} data={chartData(customerId).data}>\n      <XAxis dataKey=\"name\" tick={{display:\"none\"}}/>\n      <Tooltip />\n      <Bar dataKey=\"value\" fill=\"fill\"/>\n    </BarChart>\n  );\n};\n\nexport default SummaryChart;\n","import {Link} from \"react-router-dom\";\nimport SummaryChart from \"./SummaryChart\";\n\nexport const CustomerColumns = [\n  {\n    Header: \"Name\",\n    accessor: \"customer_name\",\n    Cell:(customer) => (\n      <Link to={`/sales/customers/${customer.row.original.customer_id}`}>\n        <div id=\"customer-link\">{customer.value}</div>\n      </Link>\n    )\n  },\n  {\n    Header: \"Country\",\n    accessor: \"country\",\n  },\n  {\n    Header: \"State\",\n    accessor: \"state\",\n  },\n  {\n    Header: \"Industry\",\n    accessor: \"industry\",\n  },\n  {\n    Header: \"Target | Actual | Collected\",\n    accessor: \"customer_id\",\n    Cell: (value) => (\n      <div id=\"summary-chart\">\n        <SummaryChart customerId={value}/>\n      </div>\n    ),\n  },\n  {\n    Header: \"Share\",\n    accessor: \"\",\n  },\n]","import React, { useState, useEffect, useMemo } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  usePagination,\n  useGlobalFilter,\n} from \"react-table\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport { GlobalFilter } from \"../common/GlobalFilter\";\nimport CustomersApi from \"../../apis/CustomersApi\";\nimport { CustomerColumns } from \"./CustomerColumns\";\nimport \"./sales.css\";\n\nconst Customers = () => {\n  const [customers, setCustomers] = useState([]);\n  const columns = useMemo(() => CustomerColumns, []);\n  const data = useMemo(() => customers, [customers]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    state,\n    setGlobalFilter,\n    prepareRow,\n  } = useTable(\n    { columns, data, initialState: { pageSize: 5 } },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  useEffect(() => {\n    async function getCustomers() {\n      await CustomersApi.get(\"/customerList\").then(\n        (response) => {\n          setCustomers(response.data.customerList.rows);\n        }\n      );\n    }\n    getCustomers();\n  }, []);\n\n  return (\n    <div id=\"sales-customers\">\n      <div id=\"customer-filter\">\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n      </div>\n      <p id=\"customer-counter\">\n        Showing {pageSize} of {customers.length} customers\n      </p>\n      <ButtonGroup id=\"customer-period-toggler\">\n        <Button variant=\"outline-secondary\">Month</Button>\n        <Button variant=\"outline-secondary\">Quarter</Button>\n        <Button variant=\"outline-secondary\" active>Year</Button>\n      </ButtonGroup>\n      <table {...getTableProps()} className=\"table table-hover\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} id=\"customer-header\">\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted ? (column.isSortedDesc ? \" ↓\" : \" ↑\") : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()} id=\"customer-row\">{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div className=\"pagination\">\n        <div>\n          Page {pageIndex + 1} of {pageOptions.length}\n        </div>\n        <span style={{ marginLeft: \"220px\" }}>\n          Go to page:{\" \"}\n          <input\n            type=\"number\"\n            min={1}\n            max={Math.ceil(customers.length / pageSize)}\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const pageNumber = e.target.value\n                ? Number(e.target.value) - 1\n                : 0;\n              gotoPage(pageNumber);\n            }}\n            style={{\n              width: \"50px\",\n              marginRight: \"2px\",\n              marginLeft: \"2px\",\n              textAlign: \"center\",\n            }}\n          />\n        </span>\n        <button\n          type=\"button\"\n          className=\"btn btn-sm btn-info\"\n          onClick={() => gotoPage(0)}\n          disabled={!canPreviousPage}\n          style={{\n            height: \"25px\",\n            width: \"30px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          {\"<<\"}\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n          style={{\n            height: \"25px\",\n            width: \"50px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          Prev\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => nextPage()}\n          disabled={!canNextPage}\n          style={{\n            height: \"25px\",\n            width: \"50px\",\n            marginRight: \"2px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          Next\n        </button>\n        <button\n          className=\"btn btn-sm btn-info\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n          style={{\n            height: \"25px\",\n            width: \"30px\",\n            marginRight: \"220px\",\n            marginLeft: \"2px\",\n          }}\n        >\n          {\">>\"}\n        </button>\n        <select\n          value={pageSize}\n          onChange={(e) => setPageSize(Number(e.target.value))}\n          style={{ fontSize: \"0.9rem\" }}\n        >\n          {[5, 10, 15].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default Customers;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"http://localhost:5000/api/divisions\"\n});","export const TooltipStyle = {\n  border: 0,\n  borderRadius: \"8px\",\n  fontSize: 14,\n  boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n}","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport UsersApi from \"../../apis/UsersApi\";\nimport CustomersApi from \"../../apis/CustomersApi\";\nimport DivisionsApi from \"../../apis/DivisionsApi\";\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport \"./sales.css\";\n\nconst CreateLead = () => {\n  const history = useHistory();\n  const { user } = useAuth0();\n  const today = new Date();\n  const currentMonth = today.getMonth();\n  const [customers, setCustomers] = useState([]);\n  const [customerId, setCustomerId] = useState();\n  const [region, setRegion] = useState();\n  const [divisions, setDivisions] = useState([]);\n  const [divisionId, setDivisionId] = useState();\n  const [source, setSource] = useState();\n  const [assignees, setAssignees] = useState([]);\n  const [assigneeId, setAssigneeId] = useState();\n  const [status, setStatus] = useState();\n  const [customerType, setCustomerType] = useState(\"Existing\");\n  const [userId, setUserId] = useState([]);\n  const [prospect, setProspect] = useState();\n  const [likelihood, setLikelihood] = useState();\n  const [jan, setJan] = useState(0);\n  const [feb, setFeb] = useState(0);\n  const [mar, setMar] = useState(0);\n  const [apr, setApr] = useState(0);\n  const [may, setMay] = useState(0);\n  const [jun, setJun] = useState(0);\n  const [jul, setJul] = useState(0);\n  const [aug, setAug] = useState(0);\n  const [sep, setSep] = useState(0);\n  const [oct, setOct] = useState(0);\n  const [nov, setNov] = useState(0);\n  const [dec, setDec] = useState(0);\n\n  // get user fullname and department to feed assignee dropdown menu\n  useEffect(() => {\n    async function getAssignees() {\n      const response = await UsersApi.get(\"/salesMarketing\");\n      setAssignees(response.data.salesMarketing.rows);\n    }\n    getAssignees();\n  }, []);\n\n  // Populate customer dropdown\n  useEffect(() => {\n    async function getCustomers() {\n      const response = await CustomersApi.get(\"/\");\n      setCustomers(response.data.customers.rows);\n    }\n    getCustomers();\n  }, []);\n\n  // Populate divisions dropdown\n  useEffect(() => {\n    async function getDivisions() {\n      const response = await DivisionsApi.get(\"/\");\n      setDivisions(response.data.divisions.rows);\n    }\n    getDivisions();\n  }, []);\n\n  // get identity of logged in user\n  useEffect(() => {\n    async function getUserId() {\n      const response = await UsersApi.get(`/userId/${user.email}`);\n      setUserId(response.data.userId.rows[0]);\n    }\n    getUserId();\n  }, [user.email]);\n\n  console.log(userId.user_id);\n\n  const chartData = [\n    {\n      name: \"JAN\",\n      value: jan,\n    },\n    {\n      name: \"FEB\",\n      value: feb,\n    },\n    {\n      name: \"MAR\",\n      value: mar,\n    },\n    {\n      name: \"APR\",\n      value: apr,\n    },\n    {\n      name: \"MAY\",\n      value: may,\n    },\n    {\n      name: \"JUN\",\n      value: jun,\n    },\n    {\n      name: \"JUL\",\n      value: jul,\n    },\n    {\n      name: \"AUG\",\n      value: aug,\n    },\n    {\n      name: \"SEP\",\n      value: sep,\n    },\n    {\n      name: \"OCT\",\n      value: oct,\n    },\n    {\n      name: \"NOV\",\n      value: nov,\n    },\n    {\n      name: \"DEC\",\n      value: dec,\n    },\n  ];\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await CustomersApi.post(\"/leads\", {\n        customer_type: customerType,\n        customer_id: customerId,\n        division: divisionId,\n        assignee: assigneeId,\n        prospect: prospect,\n        region: region,\n        source: source,\n        status: status,\n        pipeline: {\n          January: jan,\n          February: feb,\n          March: mar,\n          April: apr,\n          May: may,\n          June: jun,\n          July: jul,\n          August: aug,\n          September: sep,\n          October: oct,\n          November: nov,\n          December: dec,\n        },\n        created_by: userId.user_id,\n        likelihood: likelihood,\n      });\n    } catch (error) {}\n    history.push(\"/sales/customers\");\n    alert(\"Lead Created Successfully\");\n  };\n\n  return (\n    <div id=\"sales-lead\">\n      <h5 id=\"lead-title\">Create Lead</h5>\n      <div id=\"lead-input-group\" className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">Customer Type</span>\n        </div>\n        <input\n          className=\"lead-radio\"\n          type=\"radio\"\n          id=\"existing\"\n          name=\"customerType\"\n          value=\"Existing\"\n          checked={customerType === \"Existing\"}\n          onClick={(e) => setCustomerType(e.target.value)}\n        />\n        <label id=\"lead-radio-text\" for=\"existing\">\n          Existing\n        </label>\n        <input\n          className=\"lead-radio\"\n          type=\"radio\"\n          id=\"new\"\n          name=\"customerType\"\n          value=\"New\"\n          checked={customerType === \"New\"}\n          onClick={(e) => setCustomerType(e.target.value)}\n        />\n        <label id=\"lead-radio-text\" for=\"new\">\n          New\n        </label>\n      </div>\n      <Form onSubmit={handleSubmit}>\n        <table className=\"table\" id=\"lead-basic\">\n          <thead>\n            <tr>\n              <th>Customer</th>\n              <th>Region</th>\n              <th>Division</th>\n              <th>Source</th>\n              <th>Assign To</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              {customerType === \"Existing\" ? (\n                <td>\n                  <select\n                    value={customerId}\n                    className=\"form-control\"\n                    onChange={(e) => setCustomerId(e.target.value)}\n                  >\n                    <option></option>\n                    {customers.map((customer) => (\n                      <option\n                        key={customer.customer_id}\n                        value={customer.customer_id}\n                      >\n                        {customer.customer_name}\n                      </option>\n                    ))}\n                  </select>\n                </td>\n              ) : (\n                <td>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"enter prospect name\"\n                    value={prospect}\n                    onChange={(e) => setProspect(e.target.value)}\n                  />\n                </td>\n              )}\n              <td>\n                <select\n                  value={region}\n                  className=\"form-control\"\n                  onChange={(e) => setRegion(e.target.value)}\n                  required\n                >\n                  <option></option>\n                  <option value=\"United States\">United States</option>\n                  <option value=\"France\">France</option>\n                  <option value=\"Canada\">Canada</option>\n                </select>\n              </td>\n              <td>\n                <select\n                  value={divisionId}\n                  className=\"form-control\"\n                  onChange={(e) => setDivisionId(e.target.value)}\n                  required\n                >\n                  <option></option>\n                  {divisions.map((division) => (\n                    <option\n                      key={division.division_id}\n                      value={division.division_id}\n                    >\n                      {division.division_name}\n                    </option>\n                  ))}\n                </select>\n              </td>\n              <td>\n                <select\n                  value={source}\n                  className=\"form-control\"\n                  onChange={(e) => setSource(e.target.value)}\n                  required\n                >\n                  <option></option>\n                  <option value=\"Direct Contact\">Direct Contact</option>\n                  <option value=\"Website\">Website</option>\n                  <option value=\"Phone\">Phone</option>\n                  <option value=\"Exhibition\">Exhibition</option>\n                  <option value=\"Social Media\">Social Media</option>\n                  <option value=\"Referral\">Referral</option>\n                  <option value=\"Campaign\">Campaign</option>\n                </select>\n              </td>\n              <td>\n                <select\n                  value={assigneeId}\n                  className=\"form-control\"\n                  onChange={(e) => setAssigneeId(e.target.value)}\n                  required\n                >\n                  <option></option>\n                  {assignees.map((assignee) => (\n                    <option key={assignee.user_id} value={assignee.user_id}>\n                      {assignee.full_name} - {assignee.department_name}\n                    </option>\n                  ))}\n                </select>\n              </td>\n              <td>\n                <select\n                  value={status}\n                  onChange={(e) => {setStatus(e.target.value); setLikelihood(\"\")}}\n                  className=\"form-control\"\n                  required\n                >\n                  <option></option>\n                  <option value=\"Prospect\">Prospect</option>\n                  <option value=\"In Discussions\">In Discussions</option>\n                  <option value=\"Proposal Submitted\">Proposal Submitted</option>\n                  <option value=\"Won\">Won</option>\n                  <option value=\"Aborted\">Aborted</option>\n                </select>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <h5 id=\"lead-title-months\">\n          Revenue Distribution (zero value allowed but not blank)\n        </h5>\n        <table className=\"table\" id=\"lead-months\">\n          <thead>\n            <th>JAN</th>\n            <th>FEB</th>\n            <th>MAR</th>\n            <th>APR</th>\n            <th>MAY</th>\n            <th>JUN</th>\n          </thead>\n          <tr>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                disabled={currentMonth > 0}\n                min={0}\n                value={jan}\n                onChange={(e) => setJan(e.target.value)}\n                required\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                disabled={currentMonth > 1}\n                min={0}\n                value={feb}\n                onChange={(e) => setFeb(e.target.value)}\n                required\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                disabled={currentMonth > 2}\n                min={0}\n                value={mar}\n                onChange={(e) => setMar(e.target.value)}\n                required\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                disabled={currentMonth > 3}\n                min={0}\n                value={apr}\n                onChange={(e) => setApr(e.target.value)}\n                required\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                disabled={currentMonth > 4}\n                min={0}\n                value={may}\n                onChange={(e) => setMay(e.target.value)}\n                required\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                disabled={currentMonth > 5}\n                min={0}\n                value={jun}\n                onChange={(e) => setJun(e.target.value)}\n                required\n              />\n            </td>\n          </tr>\n        </table>\n        <table className=\"table\" id=\"lead-months\">\n          <thead>\n            <th>JUL</th>\n            <th>AUG</th>\n            <th>SEP</th>\n            <th>OCT</th>\n            <th>NOV</th>\n            <th>DEC</th>\n          </thead>\n          <tr>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                disabled={currentMonth > 6}\n                min={0}\n                value={jul}\n                onChange={(e) => setJul(e.target.value)}\n                required\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                disabled={currentMonth > 7}\n                min={0}\n                value={aug}\n                onChange={(e) => setAug(e.target.value)}\n                required\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                disabled={currentMonth > 8}\n                min={0}\n                value={sep}\n                onChange={(e) => setSep(e.target.value)}\n                required\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                disabled={currentMonth > 9}\n                min={0}\n                value={oct}\n                onChange={(e) => setOct(e.target.value)}\n                required\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                disabled={currentMonth > 10}\n                min={0}\n                value={nov}\n                onChange={(e) => setNov(e.target.value)}\n                required\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                disabled={currentMonth > 11}\n                min={0}\n                value={dec}\n                onChange={(e) => setDec(e.target.value)}\n                required\n              />\n            </td>\n          </tr>\n        </table>\n        <div id=\"lead-submit\">\n          <Button variant=\"primary\" type=\"submit\">\n            Create Lead\n          </Button>\n        </div>\n        <div id=\"likelihood\">\n          <label htmlFor=\"likely\">Likelihood of Conversion (%)</label>\n          <select\n            id=\"likely\"\n            className=\"form-control\"\n            required\n            value={likelihood}\n            onChange={(e) => setLikelihood(e.target.value)}\n          >\n            <option></option>\n            <option selected={status==='Aborted'} value=\"0\">0</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n            <option value=\"30\">30</option>\n            <option value=\"40\">40</option>\n            <option value=\"50\">50</option>\n            <option value=\"60\">60</option>\n            <option value=\"70\">70</option>\n            <option value=\"80\">80</option>\n            <option value=\"90\">90</option>\n            <option selected={status==='Won'} value=\"100\">100</option>\n          </select>\n        </div>\n      </Form>\n      <h5 id=\"lead-chart-title\">\n        Expected Sales ${\" \"}\n        {chartData.reduce((value, data) => value + parseInt(data.value), 0)}\n      </h5>\n      <ResponsiveContainer width={600} height={200}>\n        <BarChart data={chartData}>\n          <CartesianGrid stroke=\"lightgrey\" strokeDasharray=\"2 2\" />\n          <XAxis dataKey=\"name\" tickLine={false} />\n          <YAxis\n            unit=\"$\"\n            tickLine={false}\n            domain={[\n              0,\n              Math.max(\n                jan,\n                feb,\n                mar,\n                apr,\n                may,\n                jun,\n                jul,\n                aug,\n                sep,\n                oct,\n                nov,\n                dec\n              ),\n            ]}\n          />\n          <Tooltip contentStyle={TooltipStyle} />\n          <Bar dataKey=\"value\" fill=\"#2A9D8F\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default CreateLead;\n","import React from 'react'\n\nconst CustomerDetails = () => {\n  return (\n    <div id=\"customer-details\">\n      <h1>Customer Landing Page</h1>\n    </div>\n  )\n}\n\nexport default CustomerDetails\n","import React, { useState, useEffect } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport \"./sales.css\";\nimport * as FcIcons from \"react-icons/fc\";\nimport * as FaIcons from \"react-icons/fa\";\nimport CustomersApi from \"../../apis/CustomersApi\";\n\nconst LeadSummary = () => {\n  const currency = '$';\n  const generator = new AvatarGenerator();\n  const [leads, setLeads] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const prospectLeads = leads.filter((lead) => lead.status === \"Prospect\");\n  const discussionLeads = leads.filter(\n    (lead) => lead.status === \"In Discussions\"\n  );\n  const submittedLeads = leads.filter(\n    (lead) => lead.status === \"Proposal Submitted\"\n  );\n  const wonLeads = leads.filter((lead) => lead.status === \"Won\");\n  const abortedLeads = leads.filter((lead) => lead.status === \"Aborted\");\n\n  const ageing = (leadDate) => {\n    const today = Date.UTC(\n      new Date().getFullYear(),\n      new Date().getMonth(),\n      new Date().getDate()\n    );\n    const subjectDate = Date.UTC(\n      new Date(leadDate).getFullYear(),\n      new Date(leadDate).getMonth(),\n      new Date(leadDate).getDate()\n    );\n    const dateDiff = (today - subjectDate) / (1000 * 60 * 60 * 24);\n    return dateDiff;\n  };\n\n  useEffect(() => {\n    async function getLeads() {\n      await CustomersApi.get(\"/leadSummary\").then(\n        (response) => {\n          setLeads(response.data.leadSummary.rows);\n          setLoading(false);\n        }\n      );\n    }\n    getLeads();\n  }, []);\n\n  if (!loading) {\n    return (\n      <div id=\"lead-summary\">\n        <div className=\"row\">\n          <div className=\"column\" id=\"lead-container-main\">\n            <div\n              id=\"heading-container\"\n              className=\"row justify-content-center mr-4\"\n              style={{ backgroundColor: \"#264653\", color: \"white\" }}\n            >\n              <p id=\"heading-text\">Prospect</p>\n            </div>\n            {prospectLeads.map((lead) => (\n              <div\n                id=\"content-container\"\n                className=\"row mr-4\"\n                style={{ backgroundColor: \"#DEEBF0\", color: \"black\" }}\n              >\n                <div className=\"row\">\n                  <div className=\"column\">\n                    <img\n                      src={generator.generateRandomAvatar(lead.assignee)}\n                      alt=\"avatar\"\n                      id=\"lead-avatar\"\n                    />\n                  </div>\n                  <div className=\"column\">\n                    <strong>\n                      <span>Lead Manager :</span>\n                    </strong>\n                    <br />\n                    <span>{lead.full_name}</span>\n                    <br />\n                    <hr id=\"lead-break-sm\" />\n                    <strong>\n                      <span>Lead Source</span>\n                    </strong>\n                    <br />\n                    <span>{lead.source}</span>\n                  </div>\n                  <div className=\"container\">\n                    <hr id=\"lead-break-md\" />\n                    <strong>\n                      <span>Customer</span>\n                    </strong>\n                    <br />\n                    <span>\n                      {lead.customer_type === \"New\"\n                        ? lead.prospect\n                        : lead.customer_name}\n                    </span>\n                    <br />\n                    <hr id=\"lead-break-outer\" />\n                    <FcIcons.FcGlobe size={25} id=\"lead-sum-icon\" />\n                    <span>{lead.region}</span>\n                    <br />\n                    <FcIcons.FcFactory size={25} id=\"lead-sum-icon\" />\n                    <span>{lead.division_name}</span>\n                    <br />\n                    <FcIcons.FcMoneyTransfer size={25} id=\"lead-sum-icon\" />\n                    <span>\n                      {currency} {Object.values(lead.pipeline).reduce(\n                        (a, b) => parseInt(a) + parseInt(b)\n                      )}\n                    </span>\n                    <br />\n                    <FcIcons.FcCalendar size={25} id=\"lead-sum-icon\" />\n                    <span>{ageing(lead.created_on)} days old</span>\n                    <Link to={`/sales/editlead/${lead.lead_id}`}><FaIcons.FaRegEdit\n                      size={20}\n                      style={{ float: \"right\", marginRight: \"20px\" }}\n                    /></Link>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"column\" id=\"lead-container-main\">\n            <div\n              id=\"heading-container\"\n              className=\"row justify-content-center mr-4\"\n              style={{ backgroundColor: \"#F4A261\", color: \"white\" }}\n            >\n              <p id=\"heading-text\">In Discussions</p>\n            </div>\n              {discussionLeads.map((lead) => (\n                <div\n                id=\"content-container\"\n                className=\"row mr-4\"\n                style={{ backgroundColor: \"#FEF4EB\", color: \"black\" }}\n              >\n                <div className=\"row\">\n                  <div className=\"column\">\n                    <img\n                      src={generator.generateRandomAvatar(lead.assignee)}\n                      alt=\"avatar\"\n                      id=\"lead-avatar\"\n                    />\n                  </div>\n                  <div className=\"column\">\n                    <strong>\n                      <span>Lead Manager :</span>\n                    </strong>\n                    <br />\n                    <span>{lead.full_name}</span>\n                    <br />\n                    <hr id=\"lead-break-sm\" />\n                    <strong>\n                      <span>Lead Source</span>\n                    </strong>\n                    <br />\n                    <span>{lead.source}</span>\n                  </div>\n                  <div className=\"container\">\n                    <hr id=\"lead-break-md\" />\n                    <strong>\n                      <span>Customer</span>\n                    </strong>\n                    <br />\n                    <span>\n                      {lead.customer_type === \"New\"\n                        ? lead.prospect\n                        : lead.customer_name}\n                    </span>\n                    <br />\n                    <hr id=\"lead-break-outer\" />\n                    <FcIcons.FcGlobe size={25} id=\"lead-sum-icon\" />\n                    <span>{lead.region}</span>\n                    <br />\n                    <FcIcons.FcFactory size={25} id=\"lead-sum-icon\" />\n                    <span>{lead.division_name}</span>\n                    <br />\n                    <FcIcons.FcMoneyTransfer size={25} id=\"lead-sum-icon\" />\n                    <span>\n                    {currency} {Object.values(lead.pipeline).reduce(\n                        (a, b) => parseInt(a) + parseInt(b)\n                      )}\n                    </span>\n                    <br />\n                    <FcIcons.FcCalendar size={25} id=\"lead-sum-icon\" />\n                    <span>{ageing(lead.created_on)} days old</span>\n                    <Link to={`/sales/editlead/${lead.lead_id}`}><FaIcons.FaRegEdit\n                      size={20}\n                      style={{ float: \"right\", marginRight: \"20px\" }}\n                    /></Link>\n                  </div>\n                </div>\n                </div>\n              ))}\n          </div>\n          <div className=\"column\" id=\"lead-container-main\">\n            <div\n              id=\"heading-container\"\n              className=\"row justify-content-center mr-4\"\n              style={{ backgroundColor: \"#E9C46A\", color: \"white\" }}\n            >\n              <p id=\"heading-text\">Proposal Submitted</p>\n            </div>\n              {submittedLeads.map((lead) => (\n                <div\n                id=\"content-container\"\n                className=\"row mr-4\"\n                style={{ backgroundColor: \"#FCF8EC\", color: \"black\" }}\n              >\n                <div className=\"row\">\n                  <div className=\"column\">\n                    <img\n                      src={generator.generateRandomAvatar(lead.assignee)}\n                      alt=\"avatar\"\n                      id=\"lead-avatar\"\n                    />\n                  </div>\n                  <div className=\"column\">\n                    <strong>\n                      <span>Lead Manager :</span>\n                    </strong>\n                    <br />\n                    <span>{lead.full_name}</span>\n                    <br />\n                    <hr id=\"lead-break-sm\" />\n                    <strong>\n                      <span>Lead Source</span>\n                    </strong>\n                    <br />\n                    <span>{lead.source}</span>\n                  </div>\n                  <div className=\"container\">\n                    <hr id=\"lead-break-md\" />\n                    <strong>\n                      <span>Customer</span>\n                    </strong>\n                    <br />\n                    <span>\n                      {lead.customer_type === \"New\"\n                        ? lead.prospect\n                        : lead.customer_name}\n                    </span>\n                    <br />\n                    <hr id=\"lead-break-outer\" />\n                    <FcIcons.FcGlobe size={25} id=\"lead-sum-icon\" />\n                    <span>{lead.region}</span>\n                    <br />\n                    <FcIcons.FcFactory size={25} id=\"lead-sum-icon\" />\n                    <span>{lead.division_name}</span>\n                    <br />\n                    <FcIcons.FcMoneyTransfer size={25} id=\"lead-sum-icon\" />\n                    <span>\n                    {currency} {Object.values(lead.pipeline).reduce(\n                        (a, b) => parseInt(a) + parseInt(b)\n                      )}\n                    </span>\n                    <br />\n                    <FcIcons.FcCalendar size={25} id=\"lead-sum-icon\" />\n                    <span>{ageing(lead.created_on)} days old</span>\n                    <Link to={`/sales/editlead/${lead.lead_id}`}><FaIcons.FaRegEdit\n                      size={20}\n                      style={{ float: \"right\", marginRight: \"20px\" }}\n                    /></Link>\n                  </div>\n                </div>\n                </div>\n              ))}\n          </div>\n          <div className=\"column\" id=\"lead-container-main\">\n            <div\n              id=\"heading-container\"\n              className=\"row justify-content-center mr-4\"\n              style={{ backgroundColor: \"#2A9D8F\", color: \"white\" }}\n            >\n              <p id=\"heading-text\">Won</p>\n            </div>\n              {wonLeads.map((lead) => (\n                <div\n                id=\"content-container\"\n                className=\"row mr-4\"\n                style={{ backgroundColor: \"#E0F7F4\", color: \"black\" }}\n              >\n                <div className=\"row\">\n                  <div className=\"column\">\n                    <img\n                      src={generator.generateRandomAvatar(lead.assignee)}\n                      alt=\"avatar\"\n                      id=\"lead-avatar\"\n                    />\n                  </div>\n                  <div className=\"column\">\n                    <strong>\n                      <span>Lead Manager :</span>\n                    </strong>\n                    <br />\n                    <span>{lead.full_name}</span>\n                    <br />\n                    <hr id=\"lead-break-sm\" />\n                    <strong>\n                      <span>Lead Source</span>\n                    </strong>\n                    <br />\n                    <span>{lead.source}</span>\n                  </div>\n                  <div className=\"container\">\n                    <hr id=\"lead-break-md\" />\n                    <strong>\n                      <span>Customer</span>\n                    </strong>\n                    <br />\n                    <span>\n                      {lead.customer_type === \"New\"\n                        ? lead.prospect\n                        : lead.customer_name}\n                    </span>\n                    <br />\n                    <hr id=\"lead-break-outer\" />\n                    <FcIcons.FcGlobe size={25} id=\"lead-sum-icon\" />\n                    <span>{lead.region}</span>\n                    <br />\n                    <FcIcons.FcFactory size={25} id=\"lead-sum-icon\" />\n                    <span>{lead.division_name}</span>\n                    <br />\n                    <FcIcons.FcMoneyTransfer size={25} id=\"lead-sum-icon\" />\n                    <span>\n                    {currency} {Object.values(lead.pipeline).reduce(\n                        (a, b) => parseInt(a) + parseInt(b)\n                      )}\n                    </span>\n                    <br />\n                    <FcIcons.FcCalendar size={25} id=\"lead-sum-icon\" />\n                    <span>{ageing(lead.created_on)} days old</span>\n                    <Link to={`/sales/editlead/${lead.lead_id}`}><FaIcons.FaRegEdit\n                      size={20}\n                      style={{ float: \"right\", marginRight: \"20px\"}}\n                    /></Link>\n                  </div>\n                </div>\n                </div>\n              ))}\n          </div>\n          <div className=\"column\" id=\"lead-container-main\">\n            <div\n              id=\"heading-container\"\n              className=\"row justify-content-center\"\n              style={{ backgroundColor: \"#E76F51\", color: \"white\" }}\n            >\n              <p id=\"heading-text\">Lost / Cold</p>\n            </div>\n              {abortedLeads.map((lead) => (\n                <div\n                id=\"content-container\"\n                className=\"row\"\n                style={{ backgroundColor: \"#FCEDE9\", color: \"black\" }}\n              >\n                <div className=\"row\">\n                  <div className=\"column\">\n                    <img\n                      src={generator.generateRandomAvatar(lead.assignee)}\n                      alt=\"avatar\"\n                      id=\"lead-avatar\"\n                    />\n                  </div>\n                  <div className=\"column\">\n                    <strong>\n                      <span>Lead Manager :</span>\n                    </strong>\n                    <br />\n                    <span>{lead.full_name}</span>\n                    <br />\n                    <hr id=\"lead-break-sm\" />\n                    <strong>\n                      <span>Lead Source</span>\n                    </strong>\n                    <br />\n                    <span>{lead.source}</span>\n                  </div>\n                  <div className=\"container\">\n                    <hr id=\"lead-break-md\" />\n                    <strong>\n                      <span>Customer</span>\n                    </strong>\n                    <br />\n                    <span>\n                      {lead.customer_type === \"New\"\n                        ? lead.prospect\n                        : lead.customer_name}\n                    </span>\n                    <br />\n                    <hr id=\"lead-break-outer\" />\n                    <FcIcons.FcGlobe size={25} id=\"lead-sum-icon\" />\n                    <span>{lead.region}</span>\n                    <br />\n                    <FcIcons.FcFactory size={25} id=\"lead-sum-icon\" />\n                    <span>{lead.division_name}</span>\n                    <br />\n                    <FcIcons.FcMoneyTransfer size={25} id=\"lead-sum-icon\" />\n                    <span>\n                    {currency} {Object.values(lead.pipeline).reduce(\n                        (a, b) => parseInt(a) + parseInt(b)\n                      )}\n                    </span>\n                    <br />\n                    <FcIcons.FcCalendar size={25} id=\"lead-sum-icon\" />\n                    <span>{ageing(lead.created_on)} days old</span>\n                    <Link to={`/sales/editlead/${lead.lead_id}`}><FaIcons.FaRegEdit\n                      size={20}\n                      style={{ float: \"right\", marginRight: \"20px\"}}\n                    /></Link>\n                  </div>\n                </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  } else return <div id=\"lead-summary\">Fetching Details...</div>;\n};\n\nexport default LeadSummary;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport UsersApi from \"../../apis/UsersApi\";\nimport CustomersApi from \"../../apis/CustomersApi\";\nimport DivisionsApi from \"../../apis/DivisionsApi\";\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport \"./sales.css\";\n\nconst EditLead = () => {\n  const { id } = useParams();\n  const history = useHistory();\n  const { user } = useAuth0();\n  const today = new Date();\n  const currentMonth = today.getMonth();\n  const [loading, setLoading] = useState(true);\n  const [customers, setCustomers] = useState([]);\n  const [customerId, setCustomerId] = useState();\n  const [region, setRegion] = useState();\n  const [divisions, setDivisions] = useState([]);\n  const [divisionId, setDivisionId] = useState();\n  const [source, setSource] = useState();\n  const [assignees, setAssignees] = useState([]);\n  const [assigneeId, setAssigneeId] = useState();\n  const [status, setStatus] = useState();\n  const [customerType, setCustomerType] = useState();\n  const [userId, setUserId] = useState([]);\n  const [prospect, setProspect] = useState();\n  const [likelihood, setLikelihood] = useState();\n  const [jan, setJan] = useState(0);\n  const [feb, setFeb] = useState(0);\n  const [mar, setMar] = useState(0);\n  const [apr, setApr] = useState(0);\n  const [may, setMay] = useState(0);\n  const [jun, setJun] = useState(0);\n  const [jul, setJul] = useState(0);\n  const [aug, setAug] = useState(0);\n  const [sep, setSep] = useState(0);\n  const [oct, setOct] = useState(0);\n  const [nov, setNov] = useState(0);\n  const [dec, setDec] = useState(0);\n\n  // get user fullname and department to feed assignee dropdown menu\n  useEffect(() => {\n    async function getAssignees() {\n      const response = await UsersApi.get(\"/salesMarketing\");\n      setAssignees(response.data.salesMarketing.rows);\n    }\n    getAssignees();\n  }, []);\n\n  // Populate customer dropdown\n  useEffect(() => {\n    async function getCustomers() {\n      const response = await CustomersApi.get(\"/\");\n      setCustomers(response.data.customers.rows);\n    }\n    getCustomers();\n  }, []);\n\n  // Populate divisions dropdown\n  useEffect(() => {\n    async function getDivisions() {\n      const response = await DivisionsApi.get(\"/\");\n      setDivisions(response.data.divisions.rows);\n    }\n    getDivisions();\n  }, []);\n\n  // get identity of logged in user\n  useEffect(() => {\n    async function getUserId() {\n      const response = await UsersApi.get(`/userId/${user.email}`);\n      setUserId(response.data.userId.rows[0]);\n    }\n    getUserId();\n  }, [user.email]);\n\n  // get leads by id\n  useEffect(() => {\n    async function getLead() {\n      await CustomersApi.get(`/editLead/${id}`).then(\n        (response) => {\n          setCustomerType(response.data.editLead.rows[0].customer_type);\n          setRegion(response.data.editLead.rows[0].region);\n          setCustomerId(response.data.editLead.rows[0].customer_id);\n          setDivisionId(response.data.editLead.rows[0].division);\n          setSource(response.data.editLead.rows[0].source);\n          setAssigneeId(response.data.editLead.rows[0].assignee);\n          setStatus(response.data.editLead.rows[0].status);\n          setProspect(response.data.editLead.rows[0].prospect);\n          setLikelihood(response.data.editLead.rows[0].likelihood);\n          setJan(response.data.editLead.rows[0].pipeline.January);\n          setFeb(response.data.editLead.rows[0].pipeline.February);\n          setMar(response.data.editLead.rows[0].pipeline.March);\n          setApr(response.data.editLead.rows[0].pipeline.April);\n          setMay(response.data.editLead.rows[0].pipeline.May);\n          setJun(response.data.editLead.rows[0].pipeline.June);\n          setJul(response.data.editLead.rows[0].pipeline.July);\n          setAug(response.data.editLead.rows[0].pipeline.August);\n          setSep(response.data.editLead.rows[0].pipeline.September);\n          setOct(response.data.editLead.rows[0].pipeline.October);\n          setNov(response.data.editLead.rows[0].pipeline.November);\n          setDec(response.data.editLead.rows[0].pipeline.December);\n          setLoading(false);\n        }\n      );\n    }\n    getLead();\n  }, [id]);\n\n  const chartData = [\n    {\n      name: \"JAN\",\n      value: jan,\n    },\n    {\n      name: \"FEB\",\n      value: feb,\n    },\n    {\n      name: \"MAR\",\n      value: mar,\n    },\n    {\n      name: \"APR\",\n      value: apr,\n    },\n    {\n      name: \"MAY\",\n      value: may,\n    },\n    {\n      name: \"JUN\",\n      value: jun,\n    },\n    {\n      name: \"JUL\",\n      value: jul,\n    },\n    {\n      name: \"AUG\",\n      value: aug,\n    },\n    {\n      name: \"SEP\",\n      value: sep,\n    },\n    {\n      name: \"OCT\",\n      value: oct,\n    },\n    {\n      name: \"NOV\",\n      value: nov,\n    },\n    {\n      name: \"DEC\",\n      value: dec,\n    },\n  ];\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await CustomersApi.put(`/editlead/${id}`, {\n        customer_type: customerType,\n        customer_id: customerId,\n        division: divisionId,\n        assignee: assigneeId,\n        prospect: prospect,\n        region: region,\n        source: source,\n        status: status,\n        pipeline: {\n          January: jan,\n          February: feb,\n          March: mar,\n          April: apr,\n          May: may,\n          June: jun,\n          July: jul,\n          August: aug,\n          September: sep,\n          October: oct,\n          November: nov,\n          December: dec,\n        },\n        created_by: userId.user_id,\n        likelihood: likelihood,\n      });\n    } catch (error) {}\n    history.push(\"/sales/leadsummary\");\n    alert(\"Lead Updated Successfully\");\n  };\n\n  if (!loading) {\n    return (\n      <div id=\"sales-lead\">\n        <h5 id=\"lead-title\">Update Lead</h5>\n        <div id=\"lead-input-group\" className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Customer Type</span>\n          </div>\n          <input\n            className=\"lead-radio\"\n            type=\"radio\"\n            id=\"existing\"\n            name=\"customerType\"\n            value=\"Existing\"\n            checked={customerType === \"Existing\"}\n            onClick={(e) => setCustomerType(e.target.value)}\n          />\n          <label id=\"lead-radio-text\" for=\"existing\">\n            Existing\n          </label>\n          <input\n            className=\"lead-radio\"\n            type=\"radio\"\n            id=\"new\"\n            name=\"customerType\"\n            value=\"New\"\n            checked={customerType === \"New\"}\n            onClick={(e) => setCustomerType(e.target.value)}\n          />\n          <label id=\"lead-radio-text\" for=\"new\">\n            New\n          </label>\n        </div>\n        <Form onSubmit={handleSubmit}>\n          <table className=\"table\" id=\"lead-basic\">\n            <thead>\n              <tr>\n                <th>Customer</th>\n                <th>Region</th>\n                <th>Division</th>\n                <th>Source</th>\n                <th>Assign To</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                {customerType === \"Existing\" ? (\n                  <td>\n                    <select\n                      value={customerId}\n                      className=\"form-control\"\n                      onChange={(e) => setCustomerId(e.target.value)}\n                    >\n                      <option></option>\n                      {customers.map((customer) => (\n                        <option\n                          key={customer.customer_id}\n                          value={customer.customer_id}\n                        >\n                          {customer.customer_name}\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                ) : (\n                  <td>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"enter prospect name\"\n                      value={prospect}\n                      onChange={(e) => setProspect(e.target.value)}\n                    />\n                  </td>\n                )}\n                <td>\n                  <select\n                    value={region}\n                    className=\"form-control\"\n                    onChange={(e) => setRegion(e.target.value)}\n                    required\n                  >\n                    <option></option>\n                    <option value=\"United States\">United States</option>\n                    <option value=\"France\">France</option>\n                    <option value=\"Canada\">Canada</option>\n                  </select>\n                </td>\n                <td>\n                  <select\n                    value={divisionId}\n                    className=\"form-control\"\n                    onChange={(e) => setDivisionId(e.target.value)}\n                    required\n                  >\n                    <option></option>\n                    {divisions.map((division) => (\n                      <option\n                        key={division.division_id}\n                        value={division.division_id}\n                      >\n                        {division.division_name}\n                      </option>\n                    ))}\n                  </select>\n                </td>\n                <td>\n                  <select\n                    value={source}\n                    className=\"form-control\"\n                    onChange={(e) => setSource(e.target.value)}\n                    required\n                  >\n                    <option></option>\n                    <option value=\"Direct Contact\">Direct Contact</option>\n                    <option value=\"Website\">Website</option>\n                    <option value=\"Phone\">Phone</option>\n                    <option value=\"Exhibition\">Exhibition</option>\n                    <option value=\"Social Media\">Social Media</option>\n                    <option value=\"Referral\">Referral</option>\n                    <option value=\"Campaign\">Campaign</option>\n                  </select>\n                </td>\n                <td>\n                  <select\n                    value={assigneeId}\n                    className=\"form-control\"\n                    onChange={(e) => setAssigneeId(e.target.value)}\n                    required\n                  >\n                    <option></option>\n                    {assignees.map((assignee) => (\n                      <option key={assignee.user_id} value={assignee.user_id}>\n                        {assignee.full_name} - {assignee.department_name}\n                      </option>\n                    ))}\n                  </select>\n                </td>\n                <td>\n                  <select\n                    value={status}\n                    onChange={(e) => setStatus(e.target.value)}\n                    className=\"form-control\"\n                    required\n                  >\n                    <option></option>\n                    <option value=\"Prospect\">Prospect</option>\n                    <option value=\"In Discussions\">In Discussions</option>\n                    <option value=\"Proposal Submitted\">\n                      Proposal Submitted\n                    </option>\n                    <option value=\"Won\">Won</option>\n                    <option value=\"Aborted\">Aborted</option>\n                  </select>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <h5 id=\"lead-title-months\">\n            Revenue Distribution (zero value allowed but not blank)\n          </h5>\n          <table className=\"table\" id=\"lead-months\">\n            <thead>\n              <th>JAN</th>\n              <th>FEB</th>\n              <th>MAR</th>\n              <th>APR</th>\n              <th>MAY</th>\n              <th>JUN</th>\n            </thead>\n            <tr>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  disabled={currentMonth > 0}\n                  min={0}\n                  value={jan}\n                  onChange={(e) => setJan(e.target.value)}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  disabled={currentMonth > 1}\n                  min={0}\n                  value={feb}\n                  onChange={(e) => setFeb(e.target.value)}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  disabled={currentMonth > 2}\n                  min={0}\n                  value={mar}\n                  onChange={(e) => setMar(e.target.value)}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  disabled={currentMonth > 3}\n                  min={0}\n                  value={apr}\n                  onChange={(e) => setApr(e.target.value)}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  disabled={currentMonth > 4}\n                  min={0}\n                  value={may}\n                  onChange={(e) => setMay(e.target.value)}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  disabled={currentMonth > 5}\n                  min={0}\n                  value={jun}\n                  onChange={(e) => setJun(e.target.value)}\n                  required\n                />\n              </td>\n            </tr>\n          </table>\n          <table className=\"table\" id=\"lead-months\">\n            <thead>\n              <th>JUL</th>\n              <th>AUG</th>\n              <th>SEP</th>\n              <th>OCT</th>\n              <th>NOV</th>\n              <th>DEC</th>\n            </thead>\n            <tr>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  disabled={currentMonth > 6}\n                  min={0}\n                  value={jul}\n                  onChange={(e) => setJul(e.target.value)}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  disabled={currentMonth > 7}\n                  min={0}\n                  value={aug}\n                  onChange={(e) => setAug(e.target.value)}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  disabled={currentMonth > 8}\n                  min={0}\n                  value={sep}\n                  onChange={(e) => setSep(e.target.value)}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  disabled={currentMonth > 9}\n                  min={0}\n                  value={oct}\n                  onChange={(e) => setOct(e.target.value)}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  disabled={currentMonth > 10}\n                  min={0}\n                  value={nov}\n                  onChange={(e) => setNov(e.target.value)}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  disabled={currentMonth > 11}\n                  min={0}\n                  value={dec}\n                  onChange={(e) => setDec(e.target.value)}\n                  required\n                />\n              </td>\n            </tr>\n          </table>\n          <div id=\"lead-submit\">\n            <Link to=\"/sales/leadsummary\"><Button variant=\"warning\">Back to Leads</Button></Link>\n          </div>\n          <div id=\"lead-submit\">\n            <Button variant=\"primary\" type=\"submit\">\n              Update Lead\n            </Button>\n          </div>\n          <div id=\"likelihood\">\n          <label htmlFor=\"likely\">Likelihood of Conversion (%)</label>\n          <select\n            id=\"likely\"\n            className=\"form-control\"\n            required\n            value={likelihood}\n            onChange={(e) => setLikelihood(e.target.value)}\n            disabled={status==='Won'}\n          >\n            <option></option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n            <option value=\"30\">30</option>\n            <option value=\"40\">40</option>\n            <option value=\"50\">50</option>\n            <option value=\"60\">60</option>\n            <option value=\"70\">70</option>\n            <option value=\"80\">80</option>\n            <option value=\"90\">90</option>\n            <option selected={status==='Won'} value=\"100\">100</option>\n          </select>\n        </div>\n        </Form>\n        <h5 id=\"lead-chart-title\">\n          Expected Sales $ \n          {chartData.reduce((value, data) => value + parseInt(data.value), 0)}\n        </h5>\n        <ResponsiveContainer width={600} height={200}>\n          <BarChart data={chartData}>\n            <CartesianGrid stroke=\"lightgrey\" strokeDasharray=\"2 2\" />\n            <XAxis dataKey=\"name\" tickLine={false} />\n            <YAxis\n              unit=\"$\"\n              tickLine={false}\n              domain={[\n                0,\n                Math.max(\n                  jan,\n                  feb,\n                  mar,\n                  apr,\n                  may,\n                  jun,\n                  jul,\n                  aug,\n                  sep,\n                  oct,\n                  nov,\n                  dec\n                ),\n              ]}\n            />\n            <Tooltip contentStyle={TooltipStyle} />\n            <Bar dataKey=\"value\" fill=\"#2A9D8F\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  } else\n    return (\n      <div id=\"sales-lead\">\n        <h5>Fetching Data...</h5>\n      </div>\n    );\n};\n\nexport default EditLead;\n","import React, {useState, useEffect}from 'react';\nimport CustomersApi from \"../../apis/CustomersApi\";\n\nconst ExistingBusiness = () => {\n\n  const [customer, setCustomer] = useState([])\n\n  useEffect(() => {\n    async function getCustomer() {\n      await CustomersApi.get('/customerData').then((response) => {\n        setCustomer(response.data.customerData.rows[0]);\n      });\n    };\n    getCustomer();\n  }, []);\n\n  const columns = [Object.keys(customer).map((column)=>({value: column}))]\n  const rows = [Object.values(customer).map((row)=>({value: row}))]\n  const data = [columns, rows]\n  console.log(data);\n\n  return (\n    <div id=\"existing-biz\">\n      <h5>Existing Business</h5>\n    </div>\n  )\n}\n\nexport default ExistingBusiness\n","export const COLORS = [\n  '#3066BE',\n  '#20A39E',\n  '#61D095',\n  '#FFBA49',\n  '#EF5B5B',\n  '#A4036F',\n  '#5CADDB',\n  '#F2928D',\n]","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  Bar,\n  BarChart,\n  Pie,\n  PieChart,\n  Tooltip,\n  Legend,\n  Cell,\n} from \"recharts\";\nimport * as FcIcons from \"react-icons/fc\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CustomersApi from \"../../apis/CustomersApi\";\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport { COLORS } from \"../common/Colors\";\nimport \"./sales.css\";\n\nconst SalesTarget = () => {\n  const [divTargets, setDivTargets] = useState([]);\n  const [monthTargets, setMonthTargets] = useState([]);\n  const [staffTargets, setStaffTargets] = useState([]);\n  const [regionTargets, setRegionTargets] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function getDivTargets() {\n      CustomersApi.get(\"/targetsByDivision\").then((res) => {\n        setDivTargets(res.data.targetsByDivision.rows);\n        setLoading(false);\n      });\n    }\n    getDivTargets();\n  }, []);\n\n  useEffect(() => {\n    async function getMonthTargets() {\n      CustomersApi.get(\"/targetsByMonth\").then((res) => {\n        setMonthTargets(res.data.targetsByMonth.rows[0]);\n      });\n    }\n    getMonthTargets();\n  }, []);\n\n  useEffect(() => {\n    async function getStaffTargets() {\n      CustomersApi.get(\"/targetsByStaff\").then((res) => {\n        setStaffTargets(res.data.targetsByStaff.rows);\n      });\n    }\n    getStaffTargets();\n  }, []);\n\n  useEffect(() => {\n    async function getRegionTargets() {\n      CustomersApi.get(\"/targetsByRegion\").then((res) => {\n        setRegionTargets(res.data.targetsByRegion.rows);\n      });\n    }\n    getRegionTargets();\n  }, []);\n\n  const divData = divTargets.map((target) => ({\n    division: Object.values(target)[0],\n    target: parseInt(Object.values(target)[1] / 1000),\n  }));\n\n  const regionData = regionTargets.map((target) => ({\n    region: Object.values(target)[0],\n    target: parseInt(Object.values(target)[1] / 1000),\n  }));\n\n  const monthData = Object.keys(monthTargets).map((key) => {\n    return {\n      month: key.toUpperCase(),\n      target: parseInt(monthTargets[key] / 1000),\n    };\n  });\n\n  const staffData = staffTargets.map((target) => ({\n    staff: Object.values(target)[1],\n    target: parseInt(Object.values(target)[2] / 1000),\n  }));\n\n  if (!loading) {\n    return (\n      <div className=\"container\" id=\"sales-target\">\n        <div className=\"row justify-content-center\">\n          <h5\n            style={{\n              fontWeight: \"bold\",\n              marginRight: \"20px\",\n              marginTop: \"10px\",\n              color: \"slategray\",\n            }}\n          >\n            View By :\n          </h5>\n          <Link to=\"/sales/target/division\"><FcIcons.FcFactory id=\"sales-target-icon\" size={40} title=\"Division\"/></Link>\n          <Link to=\"/sales/target/month\"><FcIcons.FcCalendar id=\"sales-target-icon\" size={40} title=\"Month\"/></Link>\n          <Link to=\"/sales/target/region\"><FcIcons.FcGlobe id=\"sales-target-icon\" size={38} title=\"Region\"/></Link>\n          <Link to=\"/sales/target/staff\"><FcIcons.FcBusinesswoman id=\"sales-target-icon\" size={38} title=\"Salesperson\"/></Link>\n        </div>\n        <Paper elevation={5} id=\"sales-target-divpie\">\n          <u>\n            <h5 id=\"div-target-title\">Division wise targets (in USD '000)</h5>\n          </u>\n          <ResponsiveContainer width=\"100%\" height=\"95%\">\n            <PieChart>\n              <Pie\n                data={divData}\n                label={true}\n                innerRadius={50}\n                dataKey=\"target\"\n                nameKey=\"division\"\n                isAnimationActive={false}\n              >\n                {divData.map((entry, index) => (\n                  <Cell\n                    key={`cell-${index}`}\n                    fill={COLORS[index % COLORS.length]}\n                  />\n                ))}\n              </Pie>\n              <Legend />\n              <Tooltip contentStyle={TooltipStyle} />\n            </PieChart>\n          </ResponsiveContainer>\n        </Paper>\n        <Paper elevation={5} id=\"sales-target-monthbar\">\n          <u>\n            <h5 id=\"div-target-title\">Month wise targets (in USD '000)</h5>\n          </u>\n          <ResponsiveContainer width=\"100%\" height=\"95%\">\n            <BarChart data={monthData} margin={{ top: 0 }}>\n              <XAxis dataKey=\"month\" tickLine={false} />\n              <YAxis />\n              <Bar dataKey=\"target\" fill=\"#2A9D8F\" />\n              <Tooltip\n                contentStyle={TooltipStyle}\n                cursor={{ fill: \"#2A9D8F\", opacity: \"0.2\" }}\n              />\n            </BarChart>\n          </ResponsiveContainer>\n        </Paper>\n        <Paper elevation={5} id=\"sales-target-divpie\">\n          <u>\n            <h5 id=\"div-target-title\">Region wise targets (in USD '000)</h5>\n          </u>\n          <ResponsiveContainer width=\"100%\" height=\"95%\">\n            <PieChart>\n              <Pie\n                data={regionData}\n                label={true}\n                innerRadius={50}\n                dataKey=\"target\"\n                nameKey=\"region\"\n                isAnimationActive={false}\n              >\n                {regionData.map((entry, index) => (\n                  <Cell\n                    key={`cell-${index}`}\n                    fill={COLORS[index % COLORS.length]}\n                  />\n                ))}\n              </Pie>\n              <Legend />\n              <Tooltip contentStyle={TooltipStyle} />\n            </PieChart>\n          </ResponsiveContainer>\n        </Paper>\n        <Paper elevation={5} id=\"sales-target-staffbar\">\n          <u>\n            <h5 id=\"div-target-title\">Targets by Salesperson (in USD '000)</h5>\n          </u>\n          <ResponsiveContainer width=\"100%\" height=\"95%\">\n            <BarChart\n              data={staffData}\n              margin={{ top: 0 }}\n              layout=\"vertical\"\n              barSize={20}\n            >\n              <XAxis type=\"number\" />\n              <YAxis\n                dataKey=\"staff\"\n                tickLine={false}\n                type=\"category\"\n                scale=\"band\"\n                width={140}\n              />\n              <Bar dataKey=\"target\" fill=\"#264653\" />\n              <Tooltip\n                contentStyle={TooltipStyle}\n                cursor={{ fill: \"#264653\", opacity: \"0.2\" }}\n              />\n            </BarChart>\n          </ResponsiveContainer>\n        </Paper>\n      </div>\n    );\n  } else\n    return (\n      <div id=\"sales-target\">\n        <h5>Fetching Data...</h5>\n      </div>\n    );\n};\n\nexport default SalesTarget;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  Bar,\n  BarChart,\n  Line,\n  LineChart,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport Button from \"react-bootstrap/Button\";\nimport * as FcIcons from \"react-icons/fc\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CustomersApi from \"../../apis/CustomersApi\";\nimport DivisionsApi from \"../../apis/DivisionsApi\";\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport \"./sales.css\";\n\nconst TargetsMonth = () => {\n  const [allTargets, setAllTargets] = useState([]);\n  const [divMonthTargets, setDivMonthTargets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [gettingDivs, setGettingDivs] = useState(true);\n  const [divisions, setDivisions] = useState([]);\n  const [actuals, setActuals] = useState([]);\n  const [gettingActuals, setGettingActuals] = useState(true);\n  const [allActuals, setAllActuals] = useState([]);\n  const [gettingAll, setGettingAll] = useState(true);\n  const [gettingAllActuals, setGettingAllActuals] = useState(true);\n\n  // get all targets\n  useEffect(() => {\n    async function getAllTargets() {\n      await CustomersApi.get(\"/allTargetsMonth\").then((res) => {\n        setAllTargets(res.data.allTargetsMonth.rows[0]);\n        setGettingAll(false);\n      });\n    }\n    getAllTargets();\n  }, []);\n\n  // get divisional targets\n  useEffect(() => {\n    async function divMonthTargets() {\n      await CustomersApi.get(\"/targetsDivMonth\").then((res) => {\n        setDivMonthTargets(res.data.targetsDivMonth.rows);\n        setLoading(false);\n      });\n    }\n    divMonthTargets();\n  }, []);\n\n  // get all divisions\n  useEffect(() => {\n    async function getDivisions() {\n      await DivisionsApi.get(\"/\").then((res) => {\n        setDivisions(res.data.divisions.rows);\n        setGettingDivs(false);\n      });\n    }\n    getDivisions();\n  }, []);\n\n  // get all actuals\n  useEffect(() => {\n    async function getAllActuals() {\n      await CustomersApi.get(\"/allActualsMonth\").then((res) => {\n        setAllActuals(res.data.allActualsMonth.rows);\n        setGettingAllActuals(false);\n      });\n    }\n    getAllActuals();\n  }, []);\n\n  // get divisional actuals\n  useEffect(() => {\n    async function getActuals() {\n      await CustomersApi.get(\"/actualsDivMonth\").then((res) => {\n        setActuals(res.data.actualsDivMonth.rows);\n        setGettingActuals(false);\n      });\n    }\n    getActuals();\n  }, []);\n\n  // plot all\n  function plotAll() {\n    const modifiedAllActuals = allActuals.map((actual) => {\n      return {\n        month: months[actual.month - 1],\n        actual: parseInt(actual.actual),\n      };\n    });\n    const chartData = Object.keys(allTargets).map((key) => {\n      return {\n        month: key.toUpperCase(),\n        target: parseInt(allTargets[key]) / 1000,\n        actual:\n          modifiedAllActuals.filter((row) => row.month === key).length &&\n          modifiedAllActuals.filter((row) => row.month === key)[0].actual/1000,\n      };\n    });\n    return chartData;\n  }\n\n  //plot divisions\n  const plotDivMonth = (divName) => {\n    const division = divMonthTargets.filter(\n      (row) => row.division_name === divName\n    )[0];\n\n    const modifiedActuals = actuals.map((actual) => {\n      return {\n        division_name: actual.division_name,\n        month: months[actual.month - 1],\n        actual: parseInt(actual.actual),\n      };\n    });\n\n    const actual = modifiedActuals.filter(\n      (row) => row.division_name === divName\n    );\n\n    const divMonthData = Object.keys(division).map((key) => {\n      return {\n        month: key.toUpperCase(),\n        target: parseInt(division[key] / 1000),\n        actual:\n          actual.filter((row) => row.month === key).length &&\n          actual.filter((row) => row.month === key)[0].actual / 1000,\n      };\n    });\n\n    const rowsWithoutDivision = divMonthData.filter(\n      (row) => row.month !== \"DIVISION_NAME\"\n    );\n\n    return rowsWithoutDivision;\n  };\n\n  // function to calculate cumulative values\n  function accumulate(row, column, array) {\n    switch (array.indexOf(row)) {\n      case 0:\n        return array[0][column];\n      case 1:\n        return array[0][column] + array[1][column];\n      case 2:\n        return array[0][column] + array[1][column] + array[2][column];\n      case 3:\n        return (\n          array[0][column] +\n          array[1][column] +\n          array[2][column] +\n          array[3][column]\n        );\n      case 4:\n        return (\n          array[0][column] +\n          array[1][column] +\n          array[2][column] +\n          array[3][column] +\n          array[4][column]\n        );\n      case 5:\n        return (\n          array[0][column] +\n          array[1][column] +\n          array[2][column] +\n          array[3][column] +\n          array[4][column] +\n          array[5][column]\n        );\n      case 6:\n        return (\n          array[0][column] +\n          array[1][column] +\n          array[2][column] +\n          array[3][column] +\n          array[4][column] +\n          array[5][column] +\n          array[6][column]\n        );\n      case 7:\n        return (\n          array[0][column] +\n          array[1][column] +\n          array[2][column] +\n          array[3][column] +\n          array[4][column] +\n          array[5][column] +\n          array[6][column] +\n          array[7][column]\n        );\n      case 8:\n        return (\n          array[0][column] +\n          array[1][column] +\n          array[2][column] +\n          array[3][column] +\n          array[4][column] +\n          array[5][column] +\n          array[6][column] +\n          array[7][column] +\n          array[8][column]\n        );\n      case 9:\n        return (\n          array[0][column] +\n          array[1][column] +\n          array[2][column] +\n          array[3][column] +\n          array[4][column] +\n          array[5][column] +\n          array[6][column] +\n          array[7][column] +\n          array[8][column] +\n          array[9][column]\n        );\n      case 10:\n        return (\n          array[0][column] +\n          array[1][column] +\n          array[2][column] +\n          array[3][column] +\n          array[4][column] +\n          array[5][column] +\n          array[6][column] +\n          array[7][column] +\n          array[8][column] +\n          array[9][column] +\n          array[10][column]\n        );\n      case 11:\n        return (\n          array[0][column] +\n          array[1][column] +\n          array[2][column] +\n          array[3][column] +\n          array[4][column] +\n          array[5][column] +\n          array[6][column] +\n          array[7][column] +\n          array[8][column] +\n          array[9][column] +\n          array[10][column] +\n          array[11][column]\n        );\n      default: return null\n    }\n  }\n\n  // plot all cumulative\n  function plotAllCumulative() {\n    const modifiedAllActuals = allActuals.map((actual) => {\n      return {\n        month: months[actual.month - 1],\n        actual: parseInt(actual.actual),\n      };\n    });\n    const chartData = Object.keys(allTargets).map((key) => {\n      return {\n        month: key.toUpperCase(),\n        target: parseInt(allTargets[key]) / 1000,\n        actual:\n          modifiedAllActuals.filter((row) => row.month === key).length &&\n          modifiedAllActuals.filter((row) => row.month === key)[0].actual/1000,\n      };\n    });\n    const cumulative = chartData.map(monthRow => {\n      return {\n        month: monthRow.month,\n        target: accumulate(monthRow, \"target\", chartData),\n        actual: accumulate(monthRow, \"actual\", chartData), \n      }\n    })\n    return cumulative;\n  }\n\n  // plot cumulative (divisions)\n  const plotCumulative = (divName) => {\n    const division = divMonthTargets.filter(\n      (row) => row.division_name === divName\n    )[0];\n\n    const modifiedActuals = actuals.map((actual) => {\n      return {\n        division_name: actual.division_name,\n        month: months[actual.month - 1],\n        actual: parseInt(actual.actual),\n      };\n    });\n\n    const actual = modifiedActuals.filter(\n      (row) => row.division_name === divName\n    );\n\n    const allRows = Object.keys(division).map((key) => {\n      return {\n        month: key.toUpperCase(),\n        target: parseInt(division[key] / 1000),\n        actual:\n          actual.filter((row) => row.month === key).length &&\n          actual.filter((row) => row.month === key)[0].actual / 1000,\n      };\n    });\n\n    const rowsWithoutDivision = allRows.filter(\n      (row) => row.month !== \"DIVISION_NAME\"\n    );\n\n    const lineChartData = rowsWithoutDivision.map((monthRow) => {\n      return {\n        month: monthRow.month,\n        target: accumulate(monthRow, \"target\", rowsWithoutDivision),\n        actual: accumulate(monthRow, \"actual\", rowsWithoutDivision),\n      };\n    });\n    return lineChartData;\n  };\n\n  const months = [\n    \"jan\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"may\",\n    \"jun\",\n    \"jul\",\n    \"aug\",\n    \"sep\",\n    \"oct\",\n    \"nov\",\n    \"dec\",\n  ];\n\n  if (\n    !loading &&\n    !gettingDivs &&\n    !gettingActuals &&\n    !gettingAll &&\n    !gettingAllActuals\n  ) {\n    return (\n      <div className=\"container\" id=\"target-div-month\">\n        <div className=\"row justify-content-center align-items-center mb-2\">\n          <h5 className=\"mr-5\" style={{ fontWeight: \"bold\" }}>\n            Displaying targets by Division{\" \"}\n          </h5>\n          <em>\n            <h5 className=\"mr-3\" style={{ fontWeight: \"bold\", color: \"brown\" }}>\n              {\" \"}\n              View instead by :{\" \"}\n            </h5>\n          </em>\n          <Link to=\"/sales/target/month\">\n            <FcIcons.FcCalendar\n              id=\"sales-target-icon\"\n              size={35}\n              title=\"Month\"\n            />\n          </Link>\n          <Link to=\"/sales/target/region\">\n            <FcIcons.FcGlobe id=\"sales-target-icon\" size={35} title=\"Region\" />\n          </Link>\n          <Link to=\"/sales/target/staff\">\n            <FcIcons.FcBusinesswoman\n              id=\"sales-target-icon\"\n              size={35}\n              title=\"Salesperson\"\n            />\n          </Link>\n          <Link to=\"/sales/target\">\n            <Button className=\"btn-sm ml-5\" variant=\"info\">\n              Back\n            </Button>\n          </Link>\n        </div>\n        <div className=\"row\">\n          <Paper\n            elevation={5}\n            id=\"target-divmonth-bar\"\n            style={{ backgroundColor: \"#E0F7F4\" }}\n          >\n            <h6 id=\"div-target-title\">ALL DIVISIONS - Monthwise (USD '000)</h6>\n            <ResponsiveContainer width=\"100%\" height=\"80%\">\n              <BarChart margin={{ top: 0 }} data={plotAll()}>\n                <XAxis dataKey=\"month\" tickLine={false} />\n                <YAxis />\n                <Bar dataKey=\"target\" fill=\"#F4A261\" />\n                <Bar dataKey=\"actual\" fill=\"#2A9D8F\" />\n                <Legend />\n                <Tooltip\n                  contentStyle={TooltipStyle}\n                  cursor={{ fill: \"#2A9D8F\", opacity: \"0.2\" }}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </Paper>\n          <Paper\n            elevation={5}\n            id=\"target-divmonth-bar\"\n            style={{ backgroundColor: \"#E0F7F4\" }}\n          >\n            <h6 id=\"div-target-title\">ALL DIVISIONS - Cumulative (USD '000)</h6>\n            <ResponsiveContainer width=\"99%\" height=\"80%\">\n              <LineChart margin={{ top: 0 }} data={plotAllCumulative()}>\n                <XAxis dataKey=\"month\" tickLine={false} scale=\"band\"/>\n                <YAxis />\n                <Line dataKey=\"target\" stroke=\"#F4A261\" strokeWidth={2}/>\n                <Line dataKey=\"actual\" stroke=\"#2A9D8F\" strokeWidth={2}/>\n                <Legend />\n                <Tooltip\n                  contentStyle={TooltipStyle}\n                  cursor={{ fill: \"#2A9D8F\", opacity: \"0.2\" }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </Paper>\n        </div>\n        {divisions.map((div) => {\n          return (\n            <div className=\"row\">\n              <Paper elevation={5} id=\"target-divmonth-bar\">\n                <h6 id=\"div-target-title\">\n                  {div.division_name} - Monthwise (USD '000)\n                </h6>\n                <ResponsiveContainer width=\"100%\" height=\"80%\">\n                  <BarChart\n                    margin={{ top: 0 }}\n                    data={plotDivMonth(div.division_name)}\n                  >\n                    <XAxis dataKey=\"month\" tickLine={false} />\n                    <YAxis />\n                    <Bar dataKey=\"target\" fill=\"#F4A261\" />\n                    <Bar dataKey=\"actual\" fill=\"#2A9D8F\" />\n                    <Legend />\n                    <Tooltip\n                      contentStyle={TooltipStyle}\n                      cursor={{ fill: \"#2A9D8F\", opacity: \"0.2\" }}\n                    />\n                  </BarChart>\n                </ResponsiveContainer>\n              </Paper>\n              <Paper elevation={5} id=\"target-divmonth-bar\">\n                <h6 id=\"div-target-title\">\n                  {div.division_name} - Cumulative (USD '000)\n                </h6>\n                <ResponsiveContainer width=\"100%\" height=\"80%\">\n                  <LineChart\n                    margin={{ top: 0 }}\n                    data={plotCumulative(div.division_name)}\n                  >\n                    <XAxis dataKey=\"month\" tickLine={false} scale=\"band\" />\n                    <YAxis />\n                    <Line dataKey=\"target\" stroke=\"#F4A261\" strokeWidth={2} />\n                    <Line dataKey=\"actual\" stroke=\"#2A9D8F\" strokeWidth={2} />\n                    <Legend />\n                    <Tooltip\n                      contentStyle={TooltipStyle}\n                      cursor={{ fill: \"#2A9D8F\", opacity: \"0.2\" }}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </Paper>\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return <div>Fetching data...</div>;\n  }\n};\n\nexport default TargetsMonth;\n","import React, { useState, useEffect } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  Bar,\n  BarChart,\n  Line,\n  LineChart,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport Button from 'react-bootstrap/Button';\nimport * as FcIcons from \"react-icons/fc\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CustomersApi from \"../../apis/CustomersApi\";\nimport UsersApi from \"../../apis/UsersApi\";\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport \"./sales.css\";\n\nconst TargetsStaffMonth = () => {\n  const [staffMonthTargets, setStaffMonthTargets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [gettingStaff, setGettingStaff] = useState(true);\n  const [staff, setStaff] = useState([]);\n  const [actuals, setActuals] = useState([]);\n  const [gettingActuals, setGettingActuals] = useState(true);\n\n  useEffect(() => {\n    async function staffMonthTargets() {\n      CustomersApi.get(\"/targetsStaffMonth\").then((res) => {\n        setStaffMonthTargets(res.data.targetsStaffMonth.rows);\n        setLoading(false);\n      });\n    }\n    staffMonthTargets();\n  }, []);\n\n  useEffect(() => {\n    async function getStaff() {\n      UsersApi.get(\"/sales\").then((res) => {\n        setStaff(res.data.sales.rows);\n        setGettingStaff(false);\n      });\n    }\n    getStaff();\n  }, []);\n\n  useEffect(() => {\n    async function getActuals() {\n      CustomersApi.get(\"/actualsStaffMonth\").then((res) => {\n        setActuals(res.data.actualsStaffMonth.rows);\n        setGettingActuals(false);\n      });\n    }\n    getActuals();\n  }, []);\n\n  const plotStaffMonth = (salesPerson) => {\n    const person = staffMonthTargets.filter(\n      (row) => row.full_name === salesPerson\n    )[0];\n\n    const modifiedActuals = actuals.map((actual) => {\n      return {\n        sales_person: actual.full_name,\n        month: months[actual.month - 1],\n        actual: parseInt(actual.actual),\n      };\n    });\n\n    const actual = modifiedActuals.filter(\n      (row) => row.sales_person === salesPerson\n    );\n\n    const staffMonthData = Object.keys(person).map((key) => {\n      return {\n        month: key.toUpperCase(),\n        target: parseInt(person[key] / 1000),\n        actual:\n          actual.filter((row) => row.month === key).length &&\n          actual.filter((row) => row.month === key)[0].actual / 1000,\n      };\n    });\n\n    const rowsWithoutStaff = staffMonthData.filter(\n      (row) => row.month !== \"FULL_NAME\"\n    );\n\n    return rowsWithoutStaff;\n  };\n\n  const plotCumulative = (salesPerson) => {\n    const person = staffMonthTargets.filter(\n      (row) => row.full_name === salesPerson\n    )[0];\n\n    const modifiedActuals = actuals.map((actual) => {\n      return {\n        sales_person: actual.full_name,\n        month: months[actual.month - 1],\n        actual: parseInt(actual.actual),\n      };\n    });\n\n    const actual = modifiedActuals.filter(\n      (row) => row.sales_person === salesPerson\n    );\n\n    const allRows = Object.keys(person).map((key) => {\n      return {\n        month: key.toUpperCase(),\n        target: parseInt(person[key] / 1000),\n        actual:\n          actual.filter((row) => row.month === key).length &&\n          actual.filter((row) => row.month === key)[0].actual / 1000,\n      };\n    });\n\n    const rowsWithoutStaff = allRows.filter((row) => row.month !== \"FULL_NAME\");\n\n    function accumulate(row, column, array) {\n      switch (array.indexOf(row)) {\n        case 0:\n          return array[0][column];\n        case 1:\n          return array[0][column] + array[1][column];\n        case 2:\n          return array[0][column] + array[1][column] + array[2][column];\n        case 3:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column]\n          );\n        case 4:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column]\n          );\n        case 5:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column]\n          );\n        case 6:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column] +\n            array[6][column]\n          );\n        case 7:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column] +\n            array[6][column] +\n            array[7][column]\n          );\n        case 8:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column] +\n            array[6][column] +\n            array[7][column] +\n            array[8][column]\n          );\n        case 9:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column] +\n            array[6][column] +\n            array[7][column] +\n            array[8][column] +\n            array[9][column]\n          );\n        case 10:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column] +\n            array[6][column] +\n            array[7][column] +\n            array[8][column] +\n            array[9][column] +\n            array[10][column]\n          );\n        case 11:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column] +\n            array[6][column] +\n            array[7][column] +\n            array[8][column] +\n            array[9][column] +\n            array[10][column] +\n            array[11][column]\n          );\n        default: return null\n      }\n    }\n\n    const lineChartData = rowsWithoutStaff.map((monthRow) => {\n      return {\n        month: monthRow.month,\n        target: accumulate(monthRow, \"target\", rowsWithoutStaff),\n        actual: accumulate(monthRow, \"actual\", rowsWithoutStaff),\n      };\n    });\n    return lineChartData;\n  };\n\n  const months = [\n    \"jan\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"may\",\n    \"jun\",\n    \"jul\",\n    \"aug\",\n    \"sep\",\n    \"oct\",\n    \"nov\",\n    \"dec\",\n  ];\n\n  if (!loading && !gettingStaff && !gettingActuals) {\n    return (\n      <div className=\"container\" id=\"target-div-month\">\n        <div className=\"row justify-content-center align-items-center mb-2\">\n          <h5 className=\"mr-5\" style={{fontWeight:\"bold\"}}>Displaying targets by Staff </h5>\n          <em><h5 className=\"mr-3\" style={{fontWeight:\"bold\", color:\"brown\"}}> View instead by : </h5></em>\n          <Link to=\"/sales/target/division\"><FcIcons.FcFactory id=\"sales-target-icon\" size={35} title=\"Division\"/></Link>\n          <Link to=\"/sales/target/month\"><FcIcons.FcCalendar id=\"sales-target-icon\" size={35} title=\"Month\"/></Link>\n          <Link to=\"/sales/target/region\"><FcIcons.FcGlobe id=\"sales-target-icon\" size={35} title=\"Region\"/></Link>\n          <Link to=\"/sales/target\"><Button className=\"btn-sm ml-5\" variant=\"info\">Back</Button></Link>\n        </div>\n        {staff.map((eachStaff) => {\n          return (\n            <div className=\"row\">\n              <Paper elevation={5} id=\"target-divmonth-bar\">\n                <h6 id=\"div-target-title\">\n                  {eachStaff.full_name} - Monthwise (USD '000)\n                </h6>\n                <ResponsiveContainer width=\"100%\" height=\"80%\">\n                  <BarChart\n                    margin={{ top: 0 }}\n                    data={plotStaffMonth(eachStaff.full_name)}\n                  >\n                    <XAxis dataKey=\"month\" tickLine={false} />\n                    <YAxis />\n                    <Bar dataKey=\"target\" fill=\"#F4A261\" />\n                    <Bar dataKey=\"actual\" fill=\"#2A9D8F\" />\n                    <Legend />\n                    <Tooltip\n                      contentStyle={TooltipStyle}\n                      cursor={{ fill: \"#2A9D8F\", opacity: \"0.2\" }}\n                    />\n                  </BarChart>\n                </ResponsiveContainer>\n              </Paper>\n              <Paper elevation={5} id=\"target-divmonth-bar\">\n                <h6 id=\"div-target-title\">\n                  {eachStaff.full_name} - Cumulative (USD '000)\n                </h6>\n                <ResponsiveContainer width=\"100%\" height=\"80%\">\n                  <LineChart\n                    margin={{ top: 0 }}\n                    data={plotCumulative(eachStaff.full_name)}\n                  >\n                    <XAxis dataKey=\"month\" tickLine={false} scale=\"band\" />\n                    <YAxis />\n                    <Line dataKey=\"target\" stroke=\"#F4A261\" strokeWidth={2} />\n                    <Line dataKey=\"actual\" stroke=\"#2A9D8F\" strokeWidth={2} />\n                    <Legend />\n                    <Tooltip\n                      contentStyle={TooltipStyle}\n                      cursor={{ fill: \"#2A9D8F\", opacity: \"0.2\" }}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </Paper>\n            </div>\n          );\n        })}\n        ;\n      </div>\n    );\n  } else {\n    return <div>Fetching data...</div>;\n  }\n};\n\nexport default TargetsStaffMonth;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  Bar,\n  BarChart,\n  Line,\n  LineChart,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport Button from \"react-bootstrap/Button\";\nimport * as FcIcons from \"react-icons/fc\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CustomersApi from \"../../apis/CustomersApi\";\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport \"./sales.css\";\n\nconst TargetsRegionMonth = () => {\n  const [regionMonthTargets, setRegionMonthTargets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [gettingRegions, setGettingRegions] = useState(true);\n  const [regions, setRegions] = useState([]);\n  const [actuals, setActuals] = useState([]);\n  const [gettingActuals, setGettingActuals] = useState(true);\n\n  useEffect(() => {\n    async function regionMonthTargets() {\n      CustomersApi.get(\"/targetsRegionMonth\").then((res) => {\n        setRegionMonthTargets(res.data.targetsRegionMonth.rows);\n        setLoading(false);\n      });\n    }\n    regionMonthTargets();\n  }, []);\n\n  useEffect(() => {\n    async function getRegions() {\n      CustomersApi.get(\"/salesRegions\").then((res) => {\n        setRegions(res.data.salesRegions.rows);\n        setGettingRegions(false);\n      });\n    }\n    getRegions();\n  }, []);\n\n  useEffect(() => {\n    async function getActuals() {\n      CustomersApi.get(\"/actualsRegionMonth\").then((res) => {\n        setActuals(res.data.actualsRegionMonth.rows);\n        setGettingActuals(false);\n      });\n    }\n    getActuals();\n  }, []);\n\n  const plotRegionMonth = (region) => {\n    const country = regionMonthTargets.filter(\n      (row) => row.country === region\n    )[0];\n\n    const modifiedActuals = actuals.map((actual) => {\n      return {\n        country: actual.country,\n        month: months[actual.month - 1],\n        actual: parseInt(actual.actual),\n      };\n    });\n\n    const actual = modifiedActuals.filter((row) => row.country === region);\n\n    const regionMonthData = Object.keys(country).map((key) => {\n      return {\n        month: key.toUpperCase(),\n        target: parseInt(country[key] / 1000),\n        actual:\n          actual.filter((row) => row.month === key).length &&\n          actual.filter((row) => row.month === key)[0].actual / 1000,\n      };\n    });\n\n    const rowsWithoutRegion = regionMonthData.filter(\n      (row) => row.month !== \"COUNTRY\"\n    );\n\n    return rowsWithoutRegion;\n  };\n\n  const plotCumulative = (region) => {\n    const country = regionMonthTargets.filter(\n      (row) => row.country === region\n    )[0];\n\n    const modifiedActuals = actuals.map((actual) => {\n      return {\n        country: actual.country,\n        month: months[actual.month - 1],\n        actual: parseInt(actual.actual),\n      };\n    });\n\n    const actual = modifiedActuals.filter((row) => row.country === region);\n\n    const allRows = Object.keys(country).map((key) => {\n      return {\n        month: key.toUpperCase(),\n        target: parseInt(country[key] / 1000),\n        actual:\n          actual.filter((row) => row.month === key).length &&\n          actual.filter((row) => row.month === key)[0].actual / 1000,\n      };\n    });\n\n    const rowsWithoutRegion = allRows.filter((row) => row.month !== \"COUNTRY\");\n\n    function accumulate(row, column, array) {\n      switch (array.indexOf(row)) {\n        case 0:\n          return array[0][column];\n        case 1:\n          return array[0][column] + array[1][column];\n        case 2:\n          return array[0][column] + array[1][column] + array[2][column];\n        case 3:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column]\n          );\n        case 4:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column]\n          );\n        case 5:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column]\n          );\n        case 6:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column] +\n            array[6][column]\n          );\n        case 7:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column] +\n            array[6][column] +\n            array[7][column]\n          );\n        case 8:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column] +\n            array[6][column] +\n            array[7][column] +\n            array[8][column]\n          );\n        case 9:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column] +\n            array[6][column] +\n            array[7][column] +\n            array[8][column] +\n            array[9][column]\n          );\n        case 10:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column] +\n            array[6][column] +\n            array[7][column] +\n            array[8][column] +\n            array[9][column] +\n            array[10][column]\n          );\n        case 11:\n          return (\n            array[0][column] +\n            array[1][column] +\n            array[2][column] +\n            array[3][column] +\n            array[4][column] +\n            array[5][column] +\n            array[6][column] +\n            array[7][column] +\n            array[8][column] +\n            array[9][column] +\n            array[10][column] +\n            array[11][column]\n          );\n        default:\n          return null;\n      }\n    }\n\n    const lineChartData = rowsWithoutRegion.map((monthRow) => {\n      return {\n        month: monthRow.month,\n        target: accumulate(monthRow, \"target\", rowsWithoutRegion),\n        actual: accumulate(monthRow, \"actual\", rowsWithoutRegion),\n      };\n    });\n    return lineChartData;\n  };\n\n  const months = [\n    \"jan\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"may\",\n    \"jun\",\n    \"jul\",\n    \"aug\",\n    \"sep\",\n    \"oct\",\n    \"nov\",\n    \"dec\",\n  ];\n\n  if (!loading && !gettingRegions && !gettingActuals) {\n    return (\n      <div className=\"container\" id=\"target-div-month\">\n        <div className=\"row justify-content-center align-items-center mb-2\">\n          <h5 className=\"mr-5\" style={{ fontWeight: \"bold\" }}>\n            Displaying targets by Region{\" \"}\n          </h5>\n          <em>\n            <h5 className=\"mr-3\" style={{ fontWeight: \"bold\", color: \"brown\" }}>\n              {\" \"}\n              View instead by :{\" \"}\n            </h5>\n          </em>\n          <Link to=\"/sales/target/division\">\n            <FcIcons.FcFactory\n              id=\"sales-target-icon\"\n              size={35}\n              title=\"Division\"\n            />\n          </Link>\n          <Link to=\"/sales/target/month\">\n            <FcIcons.FcCalendar\n              id=\"sales-target-icon\"\n              size={35}\n              title=\"Month\"\n            />\n          </Link>\n          <Link to=\"/sales/target/staff\">\n            <FcIcons.FcBusinesswoman\n              id=\"sales-target-icon\"\n              size={35}\n              title=\"Salesperson\"\n            />\n          </Link>\n          <Link to=\"/sales/target\">\n            <Button className=\"btn-sm ml-5\" variant=\"info\">\n              Back\n            </Button>\n          </Link>\n        </div>\n        {regions.map((region) => {\n          return (\n            <div className=\"row\">\n              <Paper elevation={5} id=\"target-divmonth-bar\">\n                <h6 id=\"div-target-title\">\n                  {region.region_name} - Monthwise (USD '000)\n                </h6>\n                <ResponsiveContainer width=\"100%\" height=\"80%\">\n                  <BarChart\n                    margin={{ top: 0 }}\n                    data={plotRegionMonth(region.region_name)}\n                  >\n                    <XAxis dataKey=\"month\" tickLine={false} />\n                    <YAxis />\n                    <Bar dataKey=\"target\" fill=\"#F4A261\" />\n                    <Bar dataKey=\"actual\" fill=\"#2A9D8F\" />\n                    <Legend />\n                    <Tooltip\n                      contentStyle={TooltipStyle}\n                      cursor={{ fill: \"#2A9D8F\", opacity: \"0.2\" }}\n                    />\n                  </BarChart>\n                </ResponsiveContainer>\n              </Paper>\n              <Paper elevation={5} id=\"target-divmonth-bar\">\n                <h6 id=\"div-target-title\">\n                  {region.region_name} - Cumulative (USD '000)\n                </h6>\n                <ResponsiveContainer width=\"100%\" height=\"80%\">\n                  <LineChart\n                    margin={{ top: 0 }}\n                    data={plotCumulative(region.region_name)}\n                  >\n                    <XAxis dataKey=\"month\" tickLine={false} scale=\"band\" />\n                    <YAxis />\n                    <Line dataKey=\"target\" stroke=\"#F4A261\" strokeWidth={2} />\n                    <Line dataKey=\"actual\" stroke=\"#2A9D8F\" strokeWidth={2} />\n                    <Legend />\n                    <Tooltip\n                      contentStyle={TooltipStyle}\n                      cursor={{ fill: \"#2A9D8F\", opacity: \"0.2\" }}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </Paper>\n            </div>\n          );\n        })}\n        ;\n      </div>\n    );\n  } else {\n    return <div>Fetching data...</div>;\n  }\n};\n\nexport default TargetsRegionMonth;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  Bar,\n  BarChart,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { format } from \"date-fns\";\nimport Button from \"react-bootstrap/Button\";\nimport * as FcIcons from \"react-icons/fc\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CustomersApi from \"../../apis/CustomersApi\";\nimport { TooltipStyle } from \"./TooltipStyle\";\nimport \"./sales.css\";\n\nconst TargetsMonth = () => {\n  const [divTargets, setDivTargets] = useState([]);\n  const [staffTargets, setStaffTargets] = useState([]);\n  const [regionTargets, setRegionTargets] = useState([]);\n  const [gettingDivs, setGettingDivs] = useState(true);\n  const [gettingStaff, setGettingStaff] = useState(true);\n  const [gettingRegions, setGettingRegions] = useState(true);\n  const [divActuals, setDivActuals] = useState([]);\n  const [staffActuals, setStaffActuals] = useState([]);\n  const [regionActuals, setRegionActuals] = useState([]);\n  const [gettingDivActuals, setGettingDivActuals] = useState(true);\n  const [gettingStaffActuals, setGettingStaffActuals] = useState(true);\n  const [gettingRegionActuals, setGettingRegionActuals] = useState(true);\n  const [selectedMonth, setSelectedMonth] = useState(\n    format(new Date(), \"MMM\").toLowerCase()\n  );\n\n  useEffect(() => {\n    async function divMonthTargets() {\n      await CustomersApi.get(\"/targetsDivMonth\").then((res) => {\n        setDivTargets(res.data.targetsDivMonth.rows);\n        setGettingDivs(false);\n      });\n    }\n    divMonthTargets();\n  }, []);\n\n  useEffect(() => {\n    async function staffMonthTargets() {\n      await CustomersApi.get(\"/targetsStaffMonth\").then((res) => {\n        setStaffTargets(res.data.targetsStaffMonth.rows);\n        setGettingStaff(false);\n      });\n    }\n    staffMonthTargets();\n  }, []);\n\n  useEffect(() => {\n    async function regionMonthTargets() {\n      await CustomersApi.get(\"/targetsRegionMonth\").then((res) => {\n        setRegionTargets(res.data.targetsRegionMonth.rows);\n        setGettingRegions(false);\n      });\n    }\n    regionMonthTargets();\n  }, []);\n\n  useEffect(() => {\n    async function getDivActuals() {\n      await CustomersApi.get(\"/actualsDivMonth\").then((res) => {\n        setDivActuals(res.data.actualsDivMonth.rows);\n        setGettingDivActuals(false);\n      });\n    }\n    getDivActuals();\n  }, []);\n\n  useEffect(() => {\n    async function getStaffActuals() {\n      await CustomersApi.get(\"/actualsStaffMonth\").then((res) => {\n        setStaffActuals(res.data.actualsStaffMonth.rows);\n        setGettingStaffActuals(false);\n      });\n    }\n    getStaffActuals();\n  }, []);\n\n  useEffect(() => {\n    async function getRegionActuals() {\n      await CustomersApi.get(\"/actualsRegionMonth\").then((res) => {\n        setRegionActuals(res.data.actualsRegionMonth.rows);\n        setGettingRegionActuals(false);\n      });\n    }\n    getRegionActuals();\n  }, []);\n\n  const allFetched =\n    !gettingDivs &&\n    !gettingStaff &&\n    !gettingRegions &&\n    !gettingDivActuals &&\n    !gettingStaffActuals &&\n    !gettingRegionActuals;\n\n  const plotDivMonth = (monthName) => {\n    \n    const modifiedActuals = divActuals.map((actual) => {\n      return {\n        division: actual.division_name,\n        month: months[actual.month - 1].name,\n        actual: parseInt(actual.actual),\n      };\n    });\n\n    const filtered = modifiedActuals.filter(row => row.month === selectedMonth)\n\n    const chartData = divTargets.map((row) => {\n      return {\n        division: row.division_name,\n        target: parseInt(row[monthName]) / 1000,\n        actual: filtered.filter(thisRow => thisRow.division === row.division_name).length && filtered.filter(thisRow => thisRow.division === row.division_name)[0].actual / 1000\n      };\n    });\n    \n    return chartData\n  };\n\n  const plotRegionMonth = (monthName) => {\n    \n    const modifiedActuals = regionActuals.map((actual) => {\n      return {\n        region: actual.country,\n        month: months[actual.month - 1].name,\n        actual: parseInt(actual.actual),\n      };\n    });\n\n    const filtered = modifiedActuals.filter(row => row.month === selectedMonth)\n\n    const chartData = regionTargets.map((row) => {\n      return {\n        country: row.country,\n        target: parseInt(row[monthName]) / 1000,\n        actual: filtered.filter(thisRow => thisRow.region === row.country).length && filtered.filter(thisRow => thisRow.region === row.country)[0].actual / 1000\n      };\n    });\n\n    return chartData;\n  };\n\n  const plotStaffMonth = (monthName) => {\n    \n    const modifiedActuals = staffActuals.map((actual) => {\n      return {\n        name: actual.full_name,\n        month: months[actual.month - 1].name,\n        actual: parseInt(actual.actual),\n      };\n    });\n\n    const filtered = modifiedActuals.filter(row => row.month === selectedMonth)\n\n    const chartData = staffTargets.map((row) => {\n      return {\n        name: row.full_name,\n        target: parseInt(row[monthName]) / 1000,\n        actual: filtered.filter(thisRow => thisRow.name === row.full_name).length && filtered.filter(thisRow => thisRow.name === row.full_name)[0].actual / 1000\n      };\n    });\n\n    return chartData;\n  };\n\n  const months = [\n    { name: \"jan\", color: \"#DEEBF0\" },\n    { name: \"feb\", color: \"#FCF8EC\" },\n    { name: \"mar\", color: \"#FCEDE9\" },\n    { name: \"apr\", color: \"#E0F7F4\" },\n    { name: \"may\", color: \"#FEF4EB\" },\n    { name: \"jun\", color: \"#DEEBF0\" },\n    { name: \"jul\", color: \"#FCF8EC\" },\n    { name: \"aug\", color: \"#FCEDE9\" },\n    { name: \"sep\", color: \"#E0F7F4\" },\n    { name: \"oct\", color: \"#FEF4EB\" },\n    { name: \"nov\", color: \"#DEEBF0\" },\n    { name: \"dec\", color: \"#FCF8EC\" },\n  ];\n\n  return (\n    <div className=\"container\" id=\"target-div-month\">\n      <div className=\"row justify-content-center align-items-center mb-4\">\n        <h5 className=\"mr-5\" style={{ fontWeight: \"bold\", marginTop: \"5px\" }}>\n          Displaying targets by MONTH{\" \"}\n        </h5>\n        <em>\n          <h5\n            className=\"mr-3\"\n            style={{ fontWeight: \"bold\", color: \"brown\", marginTop: \"5px\" }}\n          >\n            {\" \"}\n            View instead by :{\" \"}\n          </h5>\n        </em>\n        <Link to=\"/sales/target/division\">\n          <FcIcons.FcFactory\n            id=\"sales-target-icon\"\n            size={35}\n            title=\"Division\"\n          />\n        </Link>\n        <Link to=\"/sales/target/region\">\n          <FcIcons.FcGlobe id=\"sales-target-icon\" size={35} title=\"Region\" />\n        </Link>\n        <Link to=\"/sales/target/staff\">\n          <FcIcons.FcBusinesswoman\n            id=\"sales-target-icon\"\n            size={35}\n            title=\"Salesperson\"\n          />\n        </Link>\n        <Link to=\"/sales/target\">\n          <Button className=\"btn-sm mr-5\" variant=\"info\">\n            Back\n          </Button>\n        </Link>\n        <h5 style={{ fontWeight: \"bold\", marginTop: \"5px\" }}>Select Month</h5>\n        <select\n          value={selectedMonth}\n          onChange={(e) => setSelectedMonth(e.target.value)}\n          className=\"form-control ml-3\"\n          style={{ width: \"100px\" }}\n        >\n          {months.map((month) => (\n            <option value={month.name}>{month.name.toUpperCase()}</option>\n          ))}\n        </select>\n      </div>\n      {allFetched ? (\n        <>\n          <div className=\"row\">\n            <Paper elevation={5} id=\"target-divmonth-bar\">\n              <h6 id=\"div-target-title\">\n                {selectedMonth.toUpperCase()} - Division wise (USD '000)\n              </h6>\n              <ResponsiveContainer width=\"100%\" height=\"80%\">\n                <BarChart\n                  margin={{ top: 0 }}\n                  data={plotDivMonth(selectedMonth)}\n                >\n                  <XAxis dataKey=\"division\" tickLine={false} />\n                  <YAxis />\n                  <Bar dataKey=\"target\" fill=\"#F4A261\" />\n                  <Bar dataKey=\"actual\" fill=\"#2A9D8F\" />\n                  <Legend />\n                  <Tooltip\n                    contentStyle={TooltipStyle}\n                    cursor={{ fill: \"#2A9D8F\", opacity: \"0.2\" }}\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n            <Paper elevation={5} id=\"target-divmonth-bar\">\n              <h6 id=\"div-target-title\">\n                {selectedMonth.toUpperCase()} - Region wise (USD '000)\n              </h6>\n              <ResponsiveContainer width=\"100%\" height=\"80%\">\n                <BarChart\n                  margin={{ top: 0 }}\n                  data={plotRegionMonth(selectedMonth)}\n                >\n                  <XAxis dataKey=\"country\" tickLine={false} />\n                  <YAxis />\n                  <Bar dataKey=\"target\" fill=\"#F4A261\" />\n                  <Bar dataKey=\"actual\" fill=\"#2A9D8F\" />\n                  <Legend />\n                  <Tooltip\n                    contentStyle={TooltipStyle}\n                    cursor={{ fill: \"#2A9D8F\", opacity: \"0.2\" }}\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n          </div>\n          <div className=\"row\">\n            <Paper\n              elevation={5}\n              id=\"target-divmonth-bar\"\n              style={{ height: \"500px\" }}\n            >\n              <h6 id=\"div-target-title\">\n                {selectedMonth.toUpperCase()} - Staff wise (USD '000)\n              </h6>\n              <ResponsiveContainer width=\"100%\" height=\"90%\">\n                <BarChart\n                  margin={{ top: 0 }}\n                  data={plotStaffMonth(selectedMonth)}\n                  layout=\"vertical\"\n                >\n                  <XAxis type=\"number\" />\n                  <YAxis\n                    dataKey=\"name\"\n                    tickLine={false}\n                    type=\"category\"\n                    width={140}\n                    scale=\"band\"\n                  />\n                  <Bar dataKey=\"target\" fill=\"#F4A261\" />\n                  <Bar dataKey=\"actual\" fill=\"#2A9D8F\" />\n                  <Legend />\n                  <Tooltip\n                    contentStyle={TooltipStyle}\n                    cursor={{ fill: \"#2A9D8F\", opacity: \"0.2\" }}\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n            <Paper elevation={5} id=\"target-divmonth-bar\">\n              <h6 id=\"div-target-title\">\n                {selectedMonth.toUpperCase()} - SUMMARY\n              </h6>\n            </Paper>\n          </div>\n        </>\n      ) : (\n        <div>\n          <h5>Fetching Data.....</h5>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TargetsMonth;\n","import React from 'react';\nimport {Switch, Route, useRouteMatch} from \"react-router-dom\";\nimport Customers from \"./Customers\";\nimport CreateLead from \"./CreateLead\";\nimport CustomerDetails from \"./CustomerDetails\";\nimport LeadSummary from \"./LeadSummary\";\nimport EditLead from \"./EditLead\";\nimport ExistingBusiness from \"./ExistingBusiness\";\nimport SalesTarget from \"./SalesTarget\";\nimport TargetsDivMonth from \"./TargetsDivMonth\";\nimport TargetsStaffMonth from \"./TargetsStaffMonth\";\nimport TargetsRegionMonth from \"./TargetsRegionMonth\";\nimport TargetsMonth from \"./TargetsMonth\";\nimport \"./sales.css\"\n\nconst SalesRouter = () => {\n  \n  const {path} = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={path+\"customers\"} exact component={Customers}/>\n      <Route path={path+\"createlead\"} exact component={CreateLead}/>\n      <Route path={path+\"customers/:id\"} exact component={CustomerDetails}/>\n      <Route path={path+\"leadsummary\"} exact component={LeadSummary}/>\n      <Route path={path+\"editlead/:id\"} exact component={EditLead}/>\n      <Route path={path+\"existing\"} exact component={ExistingBusiness}/>\n      <Route path={path+\"target\"} exact component={SalesTarget}/>\n      <Route path={path+\"target/division\"} exact component={TargetsDivMonth}/>\n      <Route path={path+\"target/staff\"} exact component={TargetsStaffMonth}/>\n      <Route path={path+\"target/region\"} exact component={TargetsRegionMonth}/>\n      <Route path={path+\"target/month\"} exact component={TargetsMonth}/>\n    </Switch>\n  )\n}\n\nexport default SalesRouter;","import React from \"react\";\nimport { format } from \"date-fns\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { MdArrowForward } from \"react-icons/md\";\nimport { BsPeopleFill } from \"react-icons/bs\";\nimport { RiDeleteBin6Fill, RiCloseFill } from \"react-icons/ri\";\nimport \"./notifications.css\";\n\nconst Main = (props) => {\n  const { isExpired } = props;\n  const invitees = [\n    { name: \"Malyaj Kaloni\" },\n    { name: \"Anshika Khaitan\" },\n    { name: \"Bruce Wayne\" },\n    { name: \"Clark Kent\" },\n    { name: \"Peter Parker\" },\n    { name: \"Chanakya\" },\n    { name: \"Birbal\" },\n    { name: \"Tenali Raman\" },\n    { name: \"Naseeruddin Hoja\" },\n    { name: \"Suppandi\" },\n    { name: \"Malyaj Kaloni\" },\n    { name: \"Anshika Khaitan\" },\n    { name: \"Bruce Wayne\" },\n    { name: \"Clark Kent\" },\n    { name: \"Peter Parker\" },\n    { name: \"Chanakya\" },\n    { name: \"Birbal\" },\n    { name: \"Tenali Raman\" },\n    { name: \"Naseeruddin Hoja\" },\n    { name: \"Suppandi\" },\n  ];\n\n  const handleDelete = () => {\n\n  }\n\n  const handleClose = () => {\n    \n  }\n\n  return (\n    <div id=\"not-main\">\n      <Paper id=\"event-modal\" elevation={4}>\n        <h5 style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n          Event Details\n        </h5>\n        <hr style={{ width: \"100%\", borderColor: \"lightgrey\" }} />\n        <h6 id=\"event-modal-title\">\n          Review of notifications module of Tangible\n        </h6>\n        <hr style={{ width: \"100%\", borderColor: \"lightgrey\" }} />\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"red\",\n            display: isExpired ? \"block\" : \"none\",\n          }}\n        >\n          This event has expired\n        </p>\n        <div style={{ textAlign: \"center\" }}>\n          <h4 style={{ color: \"#457F96\" }}>\n            {format(new Date(), \"do MMM, HH:MM\")}{\" \"}\n            <MdArrowForward\n              size={30}\n              color=\"brown\"\n              style={{ marginBottom: \"7px\" }}\n            />{\" \"}\n            {format(new Date(), \"do MMM, HH:MM\")}{\" \"}\n          </h4>\n        </div>\n        <div id=\"participant-container\">\n          <div id=\"event-participants\" className=\"row\">\n            <BsPeopleFill size={35} color=\"#2A9D8F\" />\n            <h6\n              style={{\n                textAlign: \"center\",\n                fontWeight: \"bold\",\n                marginLeft: \"10px\",\n                marginTop: \"7px\",\n              }}\n            >\n              Participants\n            </h6>\n          </div>\n          <div id=\"participant-list\" className=\"row\">\n            {invitees.map((invitee) => (\n              <p id=\"event-invitee\">{invitee.name}</p>\n            ))}\n          </div>\n        </div>\n        <div style={{ marginTop: \"10px\", textAlign: \"center\" }}>\n          <RiDeleteBin6Fill\n            color=\"red\"\n            size={30}\n            style={{ cursor: \"pointer\" }}\n            onClick={handleDelete}\n          />\n          <RiCloseFill\n            size={40}\n            style={{ marginLeft: \"20px\", cursor: \"pointer\" }}\n            color=\"#457F96\"\n            onClick={handleClose}\n          />\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport Main from \"./Main\";\n\n\nconst NotificationsRouter = () => {\n  \n  const {path} = useRouteMatch();\n  \n  return (\n    <Switch>\n      <Route path={path} exact component={Main} />\n    </Switch>\n  )\n}\n\nexport default NotificationsRouter\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"http://localhost:5000/api/chats\"\n});","import React, { useEffect, useState, useContext } from \"react\";\nimport { format } from \"date-fns\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { MdDelete, MdSend, MdAttachFile } from \"react-icons/md\";\nimport { CgClose } from \"react-icons/cg\";\nimport { FaSmile } from \"react-icons/fa\";\nimport { ImUsers } from \"react-icons/im\";\nimport ChatsApi from \"../../apis/ChatsApi\";\nimport UsersApi from \"../../apis/UsersApi\";\nimport { UserContext } from \"../../auth/UserContext\";\nimport \"./chat.css\";\n\nconst SingleChat = (props) => {\n\n  const { chatId, handleClose, showChat, incoming, updateChat, alertState } = props;\n  const currentUser = useContext(UserContext);\n  const generator = new AvatarGenerator();\n\n  const [messages, setMessages] = useState([]);\n  const [loadingMessages, setLoadingMessages] = useState(true);\n\n  const [chat, setChat] = useState([]);\n  const [loadingChat, setLoadingChat] = useState(true);\n\n  const [names, setNames] = useState([]);\n  const [loadingNames, setLoadingNames] = useState(true);\n\n  const [message, setMessage] = useState(\"\");\n\n  // load selected chat\n  useEffect(() => {\n    if (chatId) {\n      async function getChat() {\n        await ChatsApi.get(`/selectedChat/${chatId}`).then((response) => {\n          setChat(response.data.selectedChat.rows[0]);\n          setLoadingChat(false);\n        });\n      }\n      getChat();\n    }\n  }, [chatId]);\n\n  // load messages of selected chat\n  useEffect(() => {\n    if (chatId) {\n      async function getMessages() {\n        await ChatsApi.get(`/messageWindowFeed/${chatId}`).then((response) => {\n          setMessages(response.data.messageWindowFeed.rows);\n          setLoadingMessages(false);\n        });\n      }\n      getMessages();\n    }\n  }, [chatId, messages]);\n\n  // get user names\n  useEffect(() => {\n    async function getNames() {\n      await UsersApi.get(\"/fullNames\").then((response) => {\n        setNames(response.data.fullNames.rows);\n        setLoadingNames(false);\n      });\n    }\n    getNames();\n  }, []);\n\n  const submitMessage = async (e) => {\n    e.preventDefault();\n    try {\n      await ChatsApi.post(\"/newMessage\", {\n        message: message,\n        sender: currentUser,\n        chat_id: chatId,\n      });\n    } catch (error) {\n      alert(\"Could not create message\");\n      console.log(error);\n    }\n    setMessage(\"\");\n    setMessages((currentMessage) => [...messages, message]);\n    incoming(true);\n    updateChat(chatId);\n    alertState(true);\n  };\n\n  const handleEnter = e => {\n    if (e.key === 'Enter') {\n      submitMessage()\n    } \n  }\n\n  if (chatId && !loadingMessages && !loadingNames && !loadingChat) {\n    return (\n      <Paper\n        id=\"single-chat-expand\"\n        elevation={5}\n        style={{ display: showChat ? \"block\" : \"none\" }}\n      >\n        <div id=\"single-chat-expand-header\">\n          {chat.is_private ? (\n            <img\n              src={\n                chat.creator === currentUser\n                  ? generator.generateRandomAvatar(\n                      chat.receiver.filter((user) => user !== currentUser)[0]\n                    )\n                  : generator.generateRandomAvatar(chat.creator)\n              }\n              alt=\"chatter\"\n              id=\"chat-avatar-expand\"\n            />\n          ) : (\n            <div id=\"group-info\" data-tooltip=\"group-info\">\n              <ImUsers\n                size={32}\n                style={{ marginTop: \"6px\", marginLeft: \"10px\" }}\n              />\n            </div>\n          )}\n          <p\n            style={{\n              fontSize: \"1.1rem\",\n              marginLeft: \"60px\",\n              marginTop: \"-27px\",\n            }}\n          >\n            {currentUser === chat.creator\n              ? names.filter(\n                  (name) =>\n                    name.user_id ===\n                    chat.receiver.filter(\n                      (participant) => participant !== currentUser\n                    )[0]\n                )[0].full_name\n              : names.filter((name) => name.user_id === chat.creator)[0]\n                  .full_name}{\" \"}\n            {chat.is_private ? null : ` + ${chat.receiver.length - 2}`}\n            <span\n              style={{ float: \"right\", marginRight: \"15px\", cursor: \"pointer\" }}\n              onClick={handleClose}\n            >\n              <CgClose size={25} />\n            </span>\n            <span\n              style={{ float: \"right\", marginRight: \"15px\", cursor: \"pointer\" }}\n            >\n              <MdDelete size={25} />\n            </span>\n          </p>\n        </div>\n        <div\n          id=\"single-chat-expand-body\"\n        >\n          {messages.map((message) =>\n            message.sender === currentUser ? (\n              <div className=\"row\" key={message.message_id}>\n                <div className=\"column col-xs-4\" style={{ marginTop: \"5px\" }}>\n                  <img\n                    src={generator.generateRandomAvatar(message.sender)}\n                    alt=\"chatter\"\n                    id=\"my-single-chat-avatar\"\n                  />\n                </div>\n                <div className=\"column col-md-10\">\n                  <p id=\"my-message\">{message.message}</p>\n                  <p id=\"my-message-timestamp\">\n                    {format(new Date(message.timestamp), \"HH:MM\")}\n                  </p>\n                </div>\n              </div>\n            ) : (\n              <div className=\"row\" key={message.message_id}>\n                <div className=\"column col-md-10\">\n                  <p id=\"other-message\">\n                    <span id=\"other-message-timestamp\"></span>{\" \"}\n                    {message.message}\n                  </p>\n                </div>\n                <div className=\"column col-xs-4\" style={{ marginTop: \"5px\" }}>\n                  <img\n                    src={generator.generateRandomAvatar(message.sender)}\n                    alt=\"chatter\"\n                    id=\"other-single-chat-avatar\"\n                  />\n                </div>\n              </div>\n            )\n          )}\n        </div>\n        <Form className=\"row\" id=\"chat-send-container\">\n          <div\n            className=\"column\"\n            style={{\n              width: \"75%\",\n              marginLeft: \"5px\",\n              marginTop: \"5px\",\n              marginBottom: \"5px\",\n            }}\n          >\n            <FormControl\n              as=\"textarea\"\n              rows={3}\n              id=\"chat-input\"\n              placeholder=\"write something...\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              onKeyPress={handleEnter}\n            />\n          </div>\n          <div\n            className=\"column\"\n            style={{ marginLeft: \"15px\", marginTop: \"7px\" }}\n          >\n            <div\n              className=\"row\"\n              style={{ height: \"50%\", alignContent: \"center\" }}\n            >\n              <div className=\"mr-4 ml-2\">\n                <MdAttachFile size={25} color=\"darkslategrey\" />\n              </div>\n              <FaSmile size={25} color=\"#E76F51\" />\n            </div>\n            <div className=\"row\" style={{ height: \"50%\", marginLeft: \"-10px\" }}>\n              <Button\n                variant=\"dark\"\n                id=\"chat-send\"\n                type=\"submit\"\n                onClick={submitMessage}\n              >\n                <MdSend size={20} /> Send\n              </Button>\n            </div>\n          </div>\n        </Form>\n      </Paper>\n    );\n  } else return null;\n};\n\nexport default SingleChat;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useReducer,\n  useContext,\n} from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport { CgClose } from \"react-icons/cg\";\nimport { FaSmile } from \"react-icons/fa\";\nimport { MdSend, MdAttachFile } from \"react-icons/md\";\nimport UsersApi from \"../../apis/UsersApi\";\nimport ChatsApi from \"../../apis/ChatsApi\";\nimport { UserContext } from \"../../auth/UserContext\";\nimport \"./chat.css\";\n\nconst NewMessage = (props) => {\n  const currentUser = useContext(UserContext);\n  const { visible, handleClose } = props;\n  const { user } = useAuth0();\n  const [userId, setUserId] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [usersArray, setUsersArray] = useState([]);\n  const [loadingUsers, setLoadingUsers] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const [chats, setChats] = useState([]);\n  const [loadingChats, setLoadingChats] = useState(true);\n  const [message, setMessage] = useState();\n  const fieldRef = useRef();\n  const [selected, dispatchSelected] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return [...state, { id: state.length, name: action.name }];\n      case \"remove\":\n        return state.filter((_, index) => index !== action.index);\n      case \"empty\":\n        return [];\n      default:\n        return state;\n    }\n  }, []);\n\n  const [state, setState] = useState({\n    active: 0,\n    filtered: [],\n    displayUsers: false,\n    inputValue: \"\",\n  });\n\n  const searchUser = (e) => {\n    const inputValue = e.currentTarget.value;\n    const filtered = users.filter((user) =>\n      user.full_name.toLowerCase().includes(inputValue.toLowerCase())\n    );\n    setState({\n      active: 0,\n      filtered: filtered,\n      displayUsers: true,\n      inputValue: e.currentTarget.value,\n    });\n  };\n\n  const handleUserSelect = (e) => {\n    setState({\n      active: 0,\n      filtered: [],\n      displayUsers: false,\n      inputValue: e.currentTarget.innerText,\n    });\n    fieldRef.current.value = \"\";\n    handleAddUsers(e.currentTarget.innerText);\n  };\n\n  const navigateUser = (e) => {\n    const { active, filtered } = state;\n\n    if (!fieldRef.current.value && e.keyCode === 13) {\n      alert(\"Please select a user !\");\n    } else if (!filtered.length && e.keyCode === 13) {\n      alert(\"User does not exist !\");\n    } else if (e.keyCode === 13) {\n      setState({\n        active: 0,\n        filtered: [],\n        displayUsers: false,\n        inputValue: filtered[active].full_name,\n      });\n      fieldRef.current.value = \"\";\n      handleAddUsers(filtered[active].full_name);\n    }\n  };\n\n  function handleAddUsers(e) {\n    dispatchSelected({\n      type: \"add\",\n      name: e,\n    });\n  }\n\n  function cancelNewChat() {\n    handleClose();\n    setMessage(\"\");\n    dispatchSelected({\n      type: \"empty\",\n      name: \"\",\n    });\n  }\n\n  useEffect(() => {\n    async function getUsers() {\n      await UsersApi.get(\"/fullNames\").then((response) => {\n        setUsers(response.data.fullNames.rows);\n        setLoadingUsers(false);\n      });\n    }\n    getUsers();\n  }, []);\n\n  useEffect(() => {\n    setUsersArray(selected.map((item) => item.name));\n  }, [selected]);\n\n  // get user_id\n  useEffect(() => {\n    async function getUserId() {\n      await UsersApi.get(`/userId/${user.email}`).then((response) => {\n        setUserId(response.data.userId.rows[0]);\n        setLoadingUser(false);\n      });\n    }\n    getUserId();\n  }, [user.email]);\n\n  // get chats by user_id\n  useEffect(() => {\n    async function getChats() {\n      await ChatsApi.get(`/allChats/${currentUser}`).then((response) => {\n        setChats(response.data.allChatsByUser.rows);\n        setLoadingChats(false);\n      });\n    }\n    getChats();\n  }, [currentUser]);\n\n  const participants = usersArray.map(\n    (user) => users.filter((row) => row.full_name === user)[0].user_id\n  );\n\n  participants.push(currentUser);\n\n  const identicalChat =\n    participants.length > 1 &&\n    chats.filter(\n      (chat) =>\n        JSON.stringify(chat.receiver.sort()) ===\n        JSON.stringify(participants.sort())\n    );\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (identicalChat.length) {\n      await ChatsApi.post(\"/newMessage\", {\n        chat_id: identicalChat[0].chat_id,\n        sender: currentUser,\n        message: message,\n      });\n    } else\n      try {\n        await ChatsApi.post(\"/newChat\", {\n          is_private: [...new Set(participants)].length > 2 ? false : true,\n          creator: userId.user_id,\n          receiver: [...new Set(participants)],\n        }).then((response) => {\n          if (response.status === 200) {\n            alert(\"New Chat Created !\");\n            ChatsApi.post(\"/newMessage\", {\n              chat_id: response.data.newChat.rows[0].chat_id,\n              sender: userId.user_id,\n              message: message,\n            });\n          } else if (response.status > 399 && response.status < 500) {\n            alert(\n              \"Failed to create chat. Please check all fields before retrying\"\n            );\n          } else if (response.status > 499 && response.status < 600) {\n            alert(\"Server error. Please try after some time\");\n          }\n        });\n      } catch (error) {\n        if (error) {\n          alert(\"Could not create new Chat\");\n        }\n      }\n    cancelNewChat();\n  };\n\n  const allClear = !loadingUser && !loadingUsers && !loadingChats;\n\n  if (allClear) {\n    return (\n      <Paper\n        id=\"new-msg-container\"\n        elevation={5}\n        style={{ display: visible ? \"block\" : \"none\" }}\n      >\n        <div id=\"new-msg-header\" className=\"row\">\n          <p style={{ fontSize: \"1.1rem\", marginTop: \"3px\" }}>New Message</p>\n          <span\n            style={{ float: \"right\", marginLeft: \"auto\", marginBottom: \"12px\" }}\n          >\n            <CgClose\n              size={30}\n              onClick={cancelNewChat}\n              style={{ cursor: \"pointer\" }}\n            />\n          </span>\n        </div>\n        <Form onSubmit={handleSubmit}>\n          <div id=\"new-msg-body\">\n            <FormControl\n              ref={fieldRef}\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"search a colleague . . .\"\n              value={(fieldRef.current && fieldRef.current.value) || \"\"}\n              autoComplete=\"off\"\n              autoCapitalize=\"off\"\n              autoCorrect=\"off\"\n              onChange={searchUser}\n              onKeyDown={navigateUser}\n            />\n            {state.displayUsers &&\n            state.inputValue.length &&\n            state.filtered.length ? (\n              <Paper elevation={3} id=\"user-dropdown\">\n                {state.filtered\n                  .map((user) => {\n                    return (\n                      <ul style={{ listStyleType: \"none\" }} key={user.user_id}>\n                        <li\n                          onClick={handleUserSelect}\n                          key={user.user_id}\n                          value={user.user_id}\n                          id=\"user-dropdown-item\"\n                        >\n                          {user.full_name}\n                        </li>\n                      </ul>\n                    );\n                  })\n                  .slice(0, 10)}\n              </Paper>\n            ) : null}\n            <div id=\"collect-users\">\n              {usersArray.map((user, index) => (\n                <span id=\"selected-user\" value={user} key={user.user_id}>\n                  {user}{\" \"}\n                  <CgClose\n                    color=\"yellow\"\n                    size={17}\n                    style={{\n                      marginBottom: \"2px\",\n                      marginLeft: \"2px\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => dispatchSelected({ type: \"remove\", index })}\n                  />\n                </span>\n              ))}\n            </div>\n          </div>\n          <div className=\"row\" id=\"chat-send-container\">\n            <div\n              className=\"column\"\n              style={{\n                width: \"75%\",\n                marginLeft: \"5px\",\n                marginTop: \"5px\",\n                marginBottom: \"5px\",\n              }}\n            >\n              <FormControl\n                as=\"textarea\"\n                rows={3}\n                id=\"chat-input\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n              />\n            </div>\n            <div\n              className=\"column\"\n              style={{ marginLeft: \"15px\", marginTop: \"7px\" }}\n            >\n              <div\n                className=\"row\"\n                style={{ height: \"50%\", alignContent: \"center\" }}\n              >\n                <div className=\"mr-4 ml-2\">\n                  <MdAttachFile size={25} color=\"darkslategrey\" />\n                </div>\n                <FaSmile size={25} color=\"#E76F51\" />\n              </div>\n              <div\n                className=\"row\"\n                style={{ height: \"50%\", marginLeft: \"-6px\" }}\n              >\n                <Button\n                  variant=\"dark\"\n                  id=\"chat-send\"\n                  type=\"submit\"\n                  disabled={!message}\n                >\n                  <MdSend size={20} /> Send\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Form>\n      </Paper>\n    );\n  } else return null;\n};\n\nexport default NewMessage;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { format } from \"date-fns\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { CgMaximize, CgChevronDown } from \"react-icons/cg\";\nimport { IoMdPersonAdd } from \"react-icons/io\";\nimport { RiGroup2Fill } from \"react-icons/ri\";\nimport { AiFillAlert } from \"react-icons/ai\";\nimport SingleChat from \"./SingleChat\";\nimport NewMessage from \"./NewMessage\";\nimport ChatsApi from \"../../apis/ChatsApi\";\nimport UsersApi from \"../../apis/UsersApi\";\nimport { UserContext } from \"../../auth/UserContext\";\nimport \"./chat.css\";\n\nconst ChatWindow = (params) => {\n  const currentUser = useContext(UserContext);\n  const generator = new AvatarGenerator();\n\n  const [newIncoming, setNewIncoming] = useState(false);\n  const updateIncoming = (incoming) => setNewIncoming(incoming);\n\n  const [modifiedChat, setModifiedChat] = useState();\n  const updateModifiedChat = (incoming) => setModifiedChat(incoming);\n\n  const [expand, setExpand] = useState(false);\n  const toggle = () => {\n    setExpand(!expand);\n    setAlertState(false);\n  }\n\n  const [chatId, setChatId] = useState();\n  const renderChatId = (chatId) => setChatId(chatId);\n\n  const [showChat, setShowChat] = useState(true);\n  const handleClose = () => setShowChat(!showChat);\n\n  const [newChat, setNewChat] = useState(false);\n  const handleAdd = () => setNewChat(true);\n  const closeNew = () => setNewChat(false);\n\n  const [chats, setChats] = useState([]);\n  const [loadingChats, setLoadingChats] = useState(true);\n\n  const [names, setNames] = useState([]);\n  const [loadingNames, setLoadingNames] = useState(true);\n\n  const [alertState, setAlertState] = useState(false);\n  const updateAlertState = (incoming) => setAlertState(incoming);\n\n  // load chat feed\n  useEffect(() => {\n    async function getChats() {\n      await ChatsApi.get(`/chatWindowFeed/${currentUser}`).then((response) => {\n        setChats(response.data.chatWindowFeed.rows);\n        setLoadingChats(false);\n        setNewIncoming(false);\n      });\n    }\n    getChats();\n  }, [newIncoming, currentUser]);\n\n  // get user names\n  useEffect(() => {\n    async function getNames() {\n      await UsersApi.get(\"/fullNames\").then((response) => {\n        setNames(response.data.fullNames.rows);\n        setLoadingNames(false);\n      });\n    }\n    getNames();\n  }, [currentUser]);\n\n  if (!loadingChats && !loadingNames) {\n    return (\n      <>\n        <Paper\n          id=\"chat-collapse\"\n          className=\"row\"\n          style={{ display: expand ? \"none\" : \"flex\" }}\n          elevation={3}\n        >\n          <img\n            id=\"chat-avatar\"\n            src={generator.generateRandomAvatar(currentUser)}\n            alt=\"profile pic\"\n          />\n          <p\n            style={{\n              paddingTop: \"10px\",\n              marginLeft: \"10px\",\n              fontSize: \"1.1rem\",\n            }}\n          >\n            Chats ({chats.length})\n          </p>\n          <AiFillAlert\n            color=\"cyan\"\n            size={20}\n            style={{\n              marginBottom: \"10px\",\n              marginLeft: \"10px\",\n              display: alertState ? \"block\" : \"none\",\n              cursor:\"pointer\"\n            }}\n            onClick={toggle}\n          />\n          <div\n            style={{\n              marginLeft: \"auto\",\n              marginBottom: \"9px\",\n            }}\n          >\n            <IoMdPersonAdd size={30} cursor=\"pointer\" onClick={handleAdd} />\n          </div>\n          <div\n            onClick={toggle}\n            style={{\n              marginLeft: \"15px\",\n              marginRight: \"23px\",\n              marginBottom: \"8px\",\n              cursor: \"pointer\",\n            }}\n          >\n            <CgMaximize size={30} />\n          </div>\n        </Paper>\n        <Paper id=\"chat-expand\" elevation={5}>\n          <div\n            id=\"chat-expand-header\"\n            style={{ display: !expand ? \"none\" : \"flex\" }}\n          >\n            <img\n              id=\"chat-avatar-expand\"\n              src={generator.generateRandomAvatar(currentUser)}\n              alt=\"profile pic\"\n            />\n            <p\n              style={{\n                paddingTop: \"10px\",\n                marginLeft: \"15px\",\n                fontSize: \"1.1rem\",\n              }}\n            >\n              Chats ({chats.length})\n            </p>\n            <div\n              style={{\n                marginLeft: \"auto\",\n                marginRight: \"15px\",\n                marginTop: \"8px\",\n              }}\n            >\n              <IoMdPersonAdd\n                size={30}\n                cursor=\"pointer\"\n                onClick={handleAdd}\n                style={{ marginRight: \"10px\" }}\n              />\n              <CgChevronDown size={35} onClick={toggle} />\n            </div>\n          </div>\n          <div\n            id=\"chat-expand-body\"\n            style={{ display: !expand ? \"none\" : \"block\" }}\n          >\n            {chats.map((chat) => (\n              <div key={chat.chat_id}>\n                <div\n                  className=\"row\"\n                  id=\"chat-item\"\n                  style={{\n                    background:\n                      chat.chat_id === modifiedChat ? \"#C2EFE9\" : \"white\",\n                  }}\n                  onClick={() => {\n                    renderChatId(chat.chat_id);\n                    setShowChat(true);\n                    setModifiedChat(null);\n                  }}\n                >\n                  {chat.is_private && chat.creator === currentUser ? (\n                    <img\n                      src={generator.generateRandomAvatar(\n                        chat.receiver.filter(\n                          (participant) => participant !== currentUser\n                        )[0]\n                      )}\n                      alt=\"chatter\"\n                      id=\"chat-avatar-body\"\n                    />\n                  ) : chat.is_private && chat.creator !== currentUser ? (\n                    <img\n                      src={generator.generateRandomAvatar(chat.creator)}\n                      alt=\"chatter\"\n                      id=\"chat-avatar-body\"\n                    />\n                  ) : (\n                    <div id=\"group-info\" data-tooltip=\"group-info\">\n                      <RiGroup2Fill\n                        size={55}\n                        color=\"#E76F51\"\n                        style={{\n                          marginLeft: \"10px\",\n                          marginTop: \"5px\",\n                          marginRight: \"5px\",\n                        }}\n                      />\n                    </div>\n                  )}\n                  <p\n                    id=\"chat-with\"\n                    style={{ color: \"darkslategray\", fontWeight: \"bold\" }}\n                  >\n                    {currentUser === chat.creator\n                      ? names.filter(\n                          (name) =>\n                            name.user_id ===\n                            chat.receiver.filter(\n                              (participant) => participant !== currentUser\n                            )[0]\n                        )[0].full_name\n                      : names.filter((name) => name.user_id === chat.creator)[0]\n                          .full_name}{\" \"}\n                    {chat.is_private ? null : ` + ${chat.receiver.length - 2}`}\n                  </p>\n                  <div id=\"chat-date\" className=\"container\">\n                    <span style={{ fontSize: \"0.8rem\" }}>\n                      {format(new Date(chat.message_time), \"HH:MM / do MMM\")}\n                    </span>\n                  </div>\n                  <p id=\"chat-preview\">{chat.message}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Paper>\n        <SingleChat\n          chatId={chatId}\n          handleClose={handleClose}\n          showChat={showChat}\n          incoming={updateIncoming}\n          updateChat={updateModifiedChat}\n          alertState={updateAlertState}\n        />\n        <NewMessage visible={newChat} handleClose={closeNew} />\n      </>\n    );\n  } else return null;\n};\n\nexport default ChatWindow;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { UserContext } from \"./auth/UserContext\";\nimport \"./App.css\";\nimport Sidebar from \"./components/sidebar/Sidebar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Projects from \"./components/Projects/Projects\";\nimport ProjectDetails from \"./components/Projects/ProjectDetails\";\nimport LogoutPage from \"./auth/LogoutPage\";\nimport UserProfile from \"./components/Users/UserProfile\";\nimport Calendar from \"./components/calendar/Calendar\";\nimport TaskTable from \"./components/Tasks/TaskTable\";\nimport TaskTabs from \"./components/Tasks/TaskTabs\";\nimport CreateTask from \"./components/Tasks/CreateTask\";\nimport Main from \"./components/dashboard/Main\";\nimport NavbarMain from \"./components/navbar/Navbar\";\nimport MyTeam from \"./components/team/MyTeam\";\nimport HrRouter from \"./components/hr/HrRouter\";\nimport FinanceRouter from \"./components/finance/FinanceRouter\";\nimport SalesRouter from \"./components/sales/SalesRouter\";\nimport NotificationsRouter from \"./components/notifications/NotificationsRouter\";\nimport ChatWindow from \"./components/chat/ChatWindow\";\n\nfunction App() {\n  const { isAuthenticated, user} = useAuth0();\n\n  if (isAuthenticated) {\n    return (\n      <UserContext.Provider value={parseInt(user.nickname)}> \n        <React.Fragment>\n          <NavbarMain />\n          <Sidebar />\n          <ChatWindow />  \n          <Switch>\n            <Route path=\"/users/:id\" exact component={UserProfile} />\n            <Route path=\"/dashboard\" exact component={Main} />\n            <Route path=\"/\" exact component={Main} />\n            <Route path=\"/scheduler\" exact component={Calendar} />\n            <Route path=\"/projects/:id\" exact component={ProjectDetails} />\n            <Route path=\"/projects\" exact component={Projects} />\n            <Route path=\"/tasks/create\" exact component={CreateTask} />\n            <Route path=\"/tasks/:id\" exact component={TaskTabs} />\n            <Route path=\"/tasks\" exact component={TaskTable} />\n            <Route path=\"/team\" exact component={MyTeam} />\n            <Route path=\"/hr/\" component={HrRouter} />\n            <Route path=\"/finance/\" component={FinanceRouter} />\n            <Route path=\"/sales/\" component={SalesRouter} />\n            <Route path=\"/notifications/\" component={NotificationsRouter} />\n          </Switch>\n        </React.Fragment>\n      </UserContext.Provider>\n    );\n  } else return <LogoutPage />;\n}\n\nexport default App;\n","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport {Auth0Provider} from \"@auth0/auth0-react\";\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <Auth0Provider\n    domain=\"tangible-development.us.auth0.com\"\n    clientId=\"m094XPAtPxKs9PTo5LsscZKBKsTnzU5J\"\n    redirectUri={window.location.origin}\n  >\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}